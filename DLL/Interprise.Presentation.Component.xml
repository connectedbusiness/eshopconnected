<?xml version="1.0"?>
<doc>
<assembly>
<name>
Interprise.Presentation.Component
</name>
</assembly>
<members>
<member name="M:Interprise.Presentation.Component.WPFPointChart.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:Interprise.Presentation.Component.WPFPointChart">
	<summary>
WPFPointChart
</summary>
</member><member name="M:Interprise.Presentation.Component.WPFPipeChart.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:Interprise.Presentation.Component.WPFPipeChart">
	<summary>
WPFPipeChart
</summary>
</member><member name="M:Interprise.Presentation.Component.WPFDoughnutChart.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:Interprise.Presentation.Component.WPFDoughnutChart">
	<summary>
WPFDoughnutChart
</summary>
</member><member name="M:Interprise.Presentation.Component.WPFBarChart.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:Interprise.Presentation.Component.WPFBarChart">
	<summary>
WPFBarChart
</summary>
</member><member name="M:Interprise.Presentation.Component.WPFAreaChart.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:Interprise.Presentation.Component.WPFAreaChart">
	<summary>
WPFAreaChart
</summary>
</member><member name="M:Interprise.Presentation.Component.AnalysisPieChartControl.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:Interprise.Presentation.Component.AnalysisPieChartControl">
	<summary>
AnalysisPieChartControl
</summary>
</member><member name="F:Interprise.Presentation.Component.Shipping.AddressVerification.MatchAddressControl.components">
	<summary> 
 Required designer variable.
 </summary>
</member><member name="M:Interprise.Presentation.Component.Shipping.AddressVerification.MatchAddressControl.Dispose(System.Boolean)">
	<summary> 
 Clean up any resources being used.
 </summary>
	<param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
</member><member name="M:Interprise.Presentation.Component.Shipping.AddressVerification.MatchAddressControl.InitializeComponent">
	<summary> 
 Required method for Designer support - do not modify 
 the contents of this method with the code editor.
 </summary>
</member><member name="F:Interprise.Presentation.Component.Shipping.AddressVerification.CurrentAddressControl.components">
	<summary> 
 Required designer variable.
 </summary>
</member><member name="M:Interprise.Presentation.Component.Shipping.AddressVerification.CurrentAddressControl.Dispose(System.Boolean)">
	<summary> 
 Clean up any resources being used.
 </summary>
	<param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
</member><member name="M:Interprise.Presentation.Component.Shipping.AddressVerification.CurrentAddressControl.InitializeComponent">
	<summary> 
 Required method for Designer support - do not modify 
 the contents of this method with the code editor.
 </summary>
</member><member name="M:Interprise.Presentation.Component.Shipping.AddressVerification.AddressVerificationForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.Shipping.AddressVerification.AddressVerificationForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.Shipping.AddressVerification.IAddressVerificationInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.Shipping.AddressVerification.AddressVerificationControl.InitializeComponent">
	<summary> 
 Required method for Designer support - do not modify 
 the contents of this method with the code editor.
 </summary>
</member><member name="M:Interprise.Presentation.Component.Shipping.AddressVerification.AddressVerificationControl.pluginCurrentAddress_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.Shipping.AddressVerification.AddressVerificationControl.pluginCurrentAddressPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.Shipping.AddressVerification.ICurrentAddressInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.Shipping.AddressVerification.AddressVerificationControl.pluginSuggestedAddress_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.Shipping.AddressVerification.AddressVerificationControl.pluginSuggestedAddressPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.Shipping.AddressVerification.IMatchAddressInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseShipFromControl.BaseShipToControl_Load(System.Object,System.EventArgs)">
	<summary>
 Handles the Load event of this class; sets the Ship to Code combo control as the active control
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="P:Interprise.Presentation.Component.SharedControl.BaseTaxDetailControl.TransactionType">
	<summary>
 Gets or sets the transaction type; sets the price grid columns as Visible when the transaction type is one of the following:
 Quote, SalesOrder, Invoice, RMA or CreditMemo
 </summary>
	<value>The transaction type</value>
	<returns>The transaction type</returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.BaseTaxDetailControl.IsReadOnly">
	<summary>
 Gets or sets the value indicating if the current control is read only (True) or not (False); sets the following grid columns as 
 read only if the value is True (and not read only if False): Tax Amount Rate, Tax Rate, Tax Freight Rate, Line Tax Detail Code,
 Line Account Code, Tax Detail Code and Account Code
 </summary>
	<value>The value indicating if the current control is read only (True) or not (False)</value>
	<returns>The value indicating if the current control is read only (True) or not (False)</returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.BaseTaxDetailControl.IsFormClosing">
	<summary>
 Gets or sets a value indicating whether the form is closing.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.BaseTaxDetailControl.IsFreightOtherFormatted">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailControl.CustomDrawGridView(DevExpress.XtraGrid.Views.Grid.GridView,DevExpress.XtraGrid.Views.Base.RowObjectCustomDrawEventArgs,System.String)">
	<summary>
 Draws and sets the text on the given row in a grid view 
 </summary>
	<param name="gridView">The grid view to be drawn upon</param>
	<param name="e">A RowObjectCustomDrawEventArgs that contains the data for the row objects</param>
	<param name="rowText">The text to be written in the grid view</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailControl.OnFreightOtherTaxChanged(DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs)">
	<summary>
 A subroutine called when FreightOtherTax changed; overridable, has no methods
 </summary>
	<param name="e">A CellValueChangedEventArgs object</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailControl.OnLineItemTaxChanged(DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs)">
	<summary>
 A subroutine called when LineItemTax changed; overridable, has no methods
 </summary>
	<param name="e">A CellValueChangedEventArgs object</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailControl.UpdateTaxTotal">
	<summary>
 Sets the Tax Total spin editor's value to the sum of the summary values in the Line Tax Amount Rate and Tax Amount Rate columns 
 </summary>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailControl.SetLayoutGroupText(System.String,Interprise.Framework.Base.Shared.Enum.TaxDetailPageType)">
	<summary>
	</summary>
	<param name="layoutGroupText"></param>
	<param name="pageType"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailControl.SetGroupFormatType">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseWorkflowControl.WebBrowserWorkflow_DocumentCompleted(System.Object,System.Windows.Forms.WebBrowserDocumentCompletedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Supplier.SupplierPreferenceForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Supplier.SupplierPreferenceForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SystemManager.Preference.Supplier.ISupplierPreferenceInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Supplier.SupplierPreferenceControl.IsReadOnly">
	<summary>
 Method use to in the new company wizard to enable disable control
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Supplier.SupplierPreferenceControl.InitializeControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Supplier.SupplierPreferenceControl.PluginContainerGeneral_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Supplier.SupplierPreferenceControl.PluginContainerGeneralPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SystemManager.Preference.Supplier.IGeneralInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Supplier.SupplierPreferenceControl.PluginContainerBills_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Supplier.SupplierPreferenceControl.PluginContainerBillsPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SystemManager.Preference.Supplier.IBillInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Supplier.SupplierPreferenceControl.PluginContainerAccountsPayable_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Supplier.SupplierPreferenceControl.PluginContainerAccountsPayablePluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SystemManager.Preference.Supplier.IAccountsPayableInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Supplier.SupplierPreferenceControl.PluginContainerECSpecific_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Supplier.SupplierPreferenceControl.PluginContainerECSpecificPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SystemManager.Preference.Supplier.IECSpecificInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Supplier.PurchasesControl.IsReadOnly">
	<summary>
 Method use to in the new company wizard to enable disable control
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Supplier.GeneralControl.IsReadOnly">
	<summary>
 Method use to in the new company wizard to enable disable control
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Supplier.GeneralControl.Focus">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Supplier.ECSpecificControl.IsReadOnly">
	<summary>
 Method use to in the new company wizard to enable disable control
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Supplier.BillsControl.IsReadOnly">
	<summary>
 Method use to in the new company wizard to enable disable control
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Supplier.AccountsPayableControl.IsReadOnly">
	<summary>
 Method use to in the new company wizard to enable disable control
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Shared.AdvancedPreferenceBaseControl.CurrentDataset">
	<summary> Returns Current Dataset. </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Shared.AdvancedPreferenceBaseControl.CurrentFacade">
	<summary> Returns the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Shared.AdvancedPreferenceBaseControl.EnableDisableControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Shared.AdvancedPreferenceBaseControl.FocusOnNextPageControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Shared.AdvancedPreferenceBaseControl.LoadDataSet(System.String)">
	<summary>
	</summary>
	<param name="documentCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Shared.AdvancedPreferenceBaseControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Shared.AdvancedPreferenceBaseControl.PluginContainerBaseDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Shared.AdvancedPreferenceBaseControl.PluginContainerBaseDetailPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SystemManager.Preference.Shared.IAdvancedPreferenceDetailInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Shared.AdvancedPreferenceBaseForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Shared.AdvancedPreferenceBaseForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SystemManager.Preference.Shared.IAdvancedPreferenceInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Shared.AdvancedPreferenceBaseDetailControl.CurrentDataset">
	<summary> Returns Current Dataset. </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Shared.AdvancedPreferenceBaseDetailControl.CurrentFacade">
	<summary> Returns the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Shared.AdvancedPreferenceBaseDetailControl.Focus">
	<summary>
 Set focus on the first control.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Inventory.PreferenceGeneralControl.InventoryPreferenceDataset">
	<summary> Property that gets AdjustmentDataset. </summary>
	<value>Framework.Inventory.DatasetGateway.AdjustmentDatasetGateway  </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Inventory.PreferenceGeneralControl.CurrentFacade">
	<summary>Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Inventory.PreferenceGeneralControl.IsReadOnly">
	<summary>
 Method use to in the new company wizard to enable disable control
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Inventory.PreferenceForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Inventory.PreferenceControl.CurrentDataset">
	<summary>Property that gets the value of CurrentDataset. </summary>
	<value>Framework.Base.DatasetComponent.BaseDataset </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Inventory.PreferenceControl.CurrentFacade">
	<summary>Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Inventory.PreferenceControl.IsReadOnly">
	<summary>
 Method use to in the new company wizard to enable disable control
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Inventory.PreferenceControl.AddData(System.String)">
	<summary> Create a blank datarow on the first index of the related Tables. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Inventory.PreferenceControl.EndCurrentEdit">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Inventory.PreferenceControl.ReadPreference">
	<summary>Method use to read preferences. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Inventory.PreferenceControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
  Method use to update the specified Tables in the daTabase. 
 </summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Inventory.PreferenceControl.UndoChanges">
	<summary>Method use to undo changes made to the dataset. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Inventory.PreferenceControl.PluginContainerGeneral_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.SetupBankAccountMainControl.CurrentDataset">
	<summary> Property that gets the current dataset </summary>
	<returns> Framework.Base.DatasetComponent.BaseDataset </returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.SetupBankAccountMainControl.CurrentFacade">
	<summary> Property that gets the current facade </summary>
	<returns> Extendable.Base.Facade.IBaseInterface </returns>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.SetupBankAccountMainControl.LoadDataSet(System.String,System.Data.DataRow,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary> Method that reads data from the table in the dataset </summary>
	<param name="documentCode"> String that is needed to read data </param>
	<param name="row"> The datarow that contains the information needed to read data</param>
	<param name="clearTableType">
		<para> All - Clears all the previously saved data from the table before saving.</para>
		<para> Specific - Clears the previously saved specific data from the table before saving. </para>
		<para> None - Saves the data without affecting the previously saved data.</para>
	</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.SetupBankAccountMainControl.PanelControl1_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.SetupBankAccountMainControl.PanelControlSetupBankAccountPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SystemManager.Preference.Customer.ISetupBankAccountControlInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.SetupBankAccountMainControl.PluginContainerSetupUserAccountPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SystemManager.Preference.Customer.ISetupUserAccountInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.SetupBankAccountMainControl.PluginContainerControl1_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.SetupBankAccountForm.LoadData">
	<summary> Method that calls the procedure to load the data from the table in the database  </summary>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.SetupBankAccountForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.SetupBankAccountForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SystemManager.Preference.Customer.ISetupBankAccountMainInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceControl.CurrentDataset">
	<summary> Property that gets the current dataset </summary>
	<returns> Framework.Base.DatasetComponent.BaseDataset </returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceControl.CurrentFacade">
	<summary> Property that gets the current facade </summary>
	<returns> Extendable.Base.Facade.IBaseInterface </returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceControl.IsReadOnly">
	<summary>
 Method use to in the new company wizard to enable disable control
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceControl.CreateDetailControl">
	<summary> Method that creates an instance of the m_GeneralControl, m_SalesControl, m_SalesOrderProcessControl, m_ARControl and m_ECSpecific controls in the CustomerPreferenceControl</summary>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceControl.LoadDataSet(System.String,System.Data.DataRow,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary> Method that reads data from the table in the dataset </summary>
	<param name="documentCode"> String that is needed to read data </param>
	<param name="row"> The datarow that contains the information needed to read data</param>
	<param name="clearTableType">
		<para> All - Clears all the previously saved data from the table before saving.</para>
		<para> Specific - Clears the previously saved specific data from the table before saving. </para>
		<para> None - Saves the data without affecting the previously saved data.</para>
	</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary> Method that saves data to the tables in the dataset .</summary>
	<param name="confirm">
		<para> True - Asks confirmation from the user whether to save or cancel saving.</para>
		<para> False - Automatically saves data without confirmation from the user.</para>
	</param>
	<param name="clear">
		<para> True - Clears all the previously saved data from the table before saving.</para>
		<para> False - Saves the data without affecting the previously saved data.</para>
	</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceControl.EnableDisableControls">
	<summary> Method that calls for the procedure to enable or disable controls from m_ARControl </summary>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceControl.PluginContainerGeneral_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceControl.PluginContainerGeneralPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SystemManager.Preference.Customer.ICustomerPreferenceGeneralInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceControl.PluginContainerSales_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceControl.PluginContainerSalesPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SystemManager.Preference.Customer.ICustomerPreferenceSalesInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceControl.PluginContainerSalesOrderProcess_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceControl.PluginContainerSalesOrderProcessPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SystemManager.Preference.Customer.ICustomerPreferenceSalesOrderProcessInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceControl.PluginContainerAccountsReceivable_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceControl.PluginContainerAccountsReceivablePluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SystemManager.Preference.Customer.ICustomerPreferenceARInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceControl.PluginContainerECSpecific_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceControl.PluginContainerECSpecificPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SystemManager.Preference.Customer.ICustomerPreferenceECSpecificInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceControl.PluginContainerDefaultPayment_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceControl.PluginContainerDefaultPaymentPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SystemManager.Preference.Customer.ICustomerPreferenceDefaultPaymentInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceSalesOrderProcessControl.CustomerPreferenceDataset">
	<summary> Property that gets the Customer Preference dataset </summary>
	<returns> Interprise.Framework.Base.DatasetGateway.SystemManager.Preference.CustomerPreferenceDatasetGateway </returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceSalesOrderProcessControl.IsReadOnly">
	<summary>
 Method use to in the new company wizard to enable disable control
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceSalesControl.CustomerPreferenceDataset">
	<summary> Property that gets the Customer Preference dataset </summary>
	<returns> Interprise.Framework.Base.DatasetGateway.SystemManager.Preference.CustomerPreferenceDatasetGateway </returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceSalesControl.IsReadOnly">
	<summary>
 Method use to in the new company wizard to enable disable control
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceGeneralControl.CustomerPreferenceDataset">
	<summary> Property that gets the Customer Preference dataset </summary>
	<returns> Interprise.Framework.Base.DatasetGateway.SystemManager.Preference.CustomerPreferenceDatasetGateway </returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceGeneralControl.IsReadOnly">
	<summary>
 Method use to in the new company wizard to enable disable control
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceForm.CustomerCode">
	<summary> Property that gets or sets the CustomerCode </summary>
	<returns> CustomerCode value in string format.</returns>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceForm.CreateCustomerPreferenceControl">
	<summary> Method that creates an instance of the CustomerPreferenceControl in the CustomerPreferenceForm </summary>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceForm.LoadData">
	<summary> Method that calls the procedure to load the data from the table in the database  </summary>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SystemManager.Preference.Customer.ICustomerPreferenceInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceECSpecificControl.CustomerPreferenceDataset">
	<summary> Property that gets the Customer Preference dataset </summary>
	<returns> Interprise.Framework.Base.DatasetGateway.SystemManager.Preference.CustomerPreferenceDatasetGateway </returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceECSpecificControl.IsReadOnly">
	<summary>
 Method use to in the new company wizard to enable disable control
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceARControl.CustomerPreferenceDataset">
	<summary> Property that gets the Customer Preference dataset </summary>
	<returns> Interprise.Framework.Base.DatasetGateway.SystemManager.Preference.CustomerPreferenceDatasetGateway </returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceARControl.IsReadOnly">
	<summary>
 Method use to in the new company wizard to enable disable control
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceARControl.EnableDisable">
	<summary> Method that calls for the IsMaximumWriteOff_EditValueChanged and IsDefaultBankAccountforReceipts_EditValueChanged events</summary>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Customer.CustomerPreferenceARControl.IsMaximumWriteOff_EditValueChanged(System.Object,System.EventArgs)">
	<summary> Enables the maxAmounttoWriteOffNumericEditor when the IsAllowMaximumWriteOffAmount checkbox is checked. </summary>
	<param name="sender"> The source of the event. </param>
	<param name="e"> EventArgs is the base class for classes containing event data. </param>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Banking.RevenueControl.IsReadOnly">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Banking.PreferenceForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Banking.PreferenceForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SystemManager.Preference.Banking.IBankingPreferenceInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Banking.MainControl.LoadDataSet(System.String,System.Data.DataRow,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
	</summary>
	<param name="documentCode"></param>
	<param name="row"></param>
	<param name="clearTableType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Banking.MainControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Banking.MainControl.PluginContainerGeneral_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Banking.MainControl.PluginContainerGeneralPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SystemManager.Preference.Banking.IGeneralInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Banking.MainControl.PluginContainerDefaultExpense_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Banking.MainControl.PluginContainerDefaultExpensePluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SystemManager.Preference.Banking.IExpenseInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Banking.MainControl.PluginContainerRevenues_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Banking.MainControl.PluginContainerRevenuesPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SystemManager.Preference.Banking.IRevenueInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Banking.GeneralControl.CurrentDataset">
	<summary> Returns instance of Banking Account Dataset </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Banking.GeneralControl.CurrentFacade">
	<summary> Returns intance of Banking Account Facade </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Banking.GeneralControl.IsReadOnly">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Banking.ExpenseControl.CurrentDataset">
	<summary> Returns instance of Banking Account Dataset </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Banking.ExpenseControl.CurrentFacade">
	<summary> Returns intance of Banking Account Facade </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Banking.ExpenseControl.IsReadOnly">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Accounting.SystemLocationAccountWizardForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Accounting.SystemLocationAccountWizardForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SystemManager.Preference.Accounting.ISystemLocationAccountControlInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Accounting.SystemLocationAccountDetailControl.AccountingPreferenceDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Accounting.SystemLocationAccountDetailControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Accounting.SystemLocationAccountControl.AccountingPreferenceDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Accounting.SystemLocationAccountControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Accounting.SystemLocationAccountControl.PluginContainerControlAccountControl_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Accounting.SystemLocationAccountControl.PluginContainerControlAccountControlPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SystemManager.Preference.Accounting.ISystemLocationAccountDetailControl</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Accounting.SystemLocationAccountControl.PluginContainerInterLocationAccountControl_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Accounting.SystemLocationAccountControl.PluginContainerInterLocationAccountPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SystemManager.Preference.Accounting.ISystemInterLocationAccountInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Accounting.SystemLocationAccountControl.PluginContainerControlAccountPerLocationControl_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Accounting.SystemLocationAccountControl.PluginContainerControlAccountPerLocationControlPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SystemManager.Preference.Accounting.ISystemLocationAccountPerLocationControlInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Accounting.SystemLocationAccountControl.PluginContainerControlAccountPerLocationControlPluginInstance_BeforeDisposing(System.Object,System.EventArgs)">
	<summary>
 This function holds all declaration of association between an event and event handler.
 </summary>
	<remarks>This is a code generated by Interprise Solution's Plugin Event Management. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Accounting.SystemLocationAccountControl.PluginContainerControlAccountPerLocationControl_AddEventHandler(System.Object,System.EventArgs)">
	<summary>
 This function holds all declaration of association between an event and event handler.
 </summary>
	<remarks>This is a code generated by Interprise Solution's Plugin Event Management. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Accounting.SystemLocationAccountControl.PluginContainerControlAccountPerLocationControlPluginInstance_Plugin_AccountCodeChanged(System.Object,Interprise.Framework.Base.EventArguments.SystemManager.AccountCodeEventArgs)">
	<summary>
 Execute this function 'AccountCodeChanged'.
 </summary>
	<param name="sender">The value for this parameter will come from the event 'AccountCodeChanged' when raised.</param>
	<param name="e">The value for this parameter will come from the event 'AccountCodeChanged' when raised.</param>
	<remarks>This is a code generated by Interprise Solution's Plugin Event Management. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Accounting.SystemLocationAccountControl.PluginContainerControlInterLocationAccountPluginInstance_Plugin_AccountCodeChanged(System.Object,Interprise.Framework.Base.EventArguments.SystemManager.AccountCodeEventArgs)">
	<summary>
 Execute this function 'AccountCodeChanged'.
 </summary>
	<param name="sender">The value for this parameter will come from the event 'AccountCodeChanged' when raised.</param>
	<param name="e">The value for this parameter will come from the event 'AccountCodeChanged' when raised.</param>
	<remarks>This is a code generated by Interprise Solution's Plugin Event Management. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Accounting.SystemLocationAccountPerLocationControl.AccountingPreferenceDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Accounting.SystemLocationAccountPerLocationControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Accounting.SystemInterLocationAccount.AccountingPreferenceDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Accounting.SystemInterLocationAccount.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Accounting.AccountingPreferenceDetailControl.IsReadOnly">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Accounting.AccountingPreferenceControl.PluginContainerMain_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.Preference.Accounting.AccountingPreferenceControl.PluginContainerMainPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SystemManager.Preference.Accounting.IAccountingPreferenceDetailControlInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.FindControl.ChangeFormTitleText">
	<summary>
 Change the form's title to My.Application.Info.ProductName.
 If My.Application.Info.ProductName, form title will be "Connected Business".
 </summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.FindControl.IsCustomSearch">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.FindControl.TargetInstance">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.FindControl.SelectedSearchRow">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.FindControl.SelectedSearchRows">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseSystemManagerForm.menuBase_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseSystemControl.EndCurrentEdit">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseSystemControl.RefreshList">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="T:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.FormType">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.AdditionalFilter">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.ControlStyle">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.SourceTable">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.DefaultSort">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.DeleteMessageText">
	<summary>
 Returns the message that will be display when record will be deleted.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.DisplayField">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.FindCaption">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.IsHostExecute">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.IsTableNameEqualToTableNames">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.ListGridView">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.RepositoryColumn">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.RepositoryDisplayField">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.RepositoryTablename">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.SelectedRow">
	<summary>
 Returns the keyfield row.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.ShowButtons(DevExpress.XtraEditors.SimpleButton,System.Boolean)">
	<summary>
	</summary>
	<param name="btnDefault"></param>
	<param name="IsShowButton"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.ShowGrouping">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.Tablename">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.Tablenames">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.IsClassTemplate">
	<summary>
 Property to get/set the flag which indicates whether this class is used to maintain class templates or not.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.BackendTableName">
	<summary>
 Property to get/set the name of the database table which is the data source of the list.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.BackendTableIsActiveColumnName">
	<summary>
 Property to get/set the the column name of the table which flags whether a record is active or not.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.BackendTableCountryColumnName">
	<summary>
 Property to get/set the name of country column of the table.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.DeleteData">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.DeleteAll">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.EndEdit">
	<summary>
 Use to end edit of controls.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.Find">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.FocusOnNextPageControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.GenerateTableChanges(System.Data.DataRowState,System.String)">
	<summary>
	</summary>
	<param name="rowState"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.GetCurrentDocumentCode">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.GetCurrentTableChanges">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.GetDatarowValue(System.String)">
	<summary>
	</summary>
	<param name="fieldName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.GetDefinedSortOrder(System.String[])">
	<summary>
	</summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.GetSortFields">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.GetPrimaryKey(System.Data.DataTable)">
	<summary>
	</summary>
	<param name="currentTable"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.GetPrimaryKeyValues(System.Data.DataTable,System.Boolean)">
	<summary>
	</summary>
	<param name="currentTable"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.GetPrimaryKeyAndValues">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.GetRowState(System.Object)">
	<summary>
	</summary>
	<param name="updateObject"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.InitializeRepositoryEditor">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.MergeChanges(System.Data.DataTable)">
	<summary>
	</summary>
	<param name="changes"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.MergeChangesToListDatasource(Interprise.Framework.Base.EventArguments.UpdateDatasetEventArgs)">
	<summary>
	</summary>
	<param name="updateArgs"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.PopulateDisplayName">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.Print(System.Boolean)">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.ReadList">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.RefreshList">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.RefreshDataset">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.SetFocusedRow">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.SetInitialMenuSettings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.SetupColumns">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.SetSelectedRow">
	<summary>
 Set the currently selected row on the grid.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.ShowButtons(System.Boolean)">
	<summary>
	</summary>
	<param name="IsShow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.ActivateDeactivateAllClassTemplates(System.Boolean)">
	<summary>
 Activates all class templates of a specific table in the database. Deactivate deactivates all class tempaltes except the ones for the company's country.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.BeforeDeleteData">
	<summary>
 Execute this before deletion of data in the dataset
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.AddAutoHidePageEventHandlers(DevExpress.XtraLayout.TabbedControlGroup,DevExpress.XtraLayout.LayoutControlGroup)">
	<summary>
	</summary>
	<param name="parentLayoutGroup"></param>
	<param name="layoutGroup"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.GetItemControl(DevExpress.XtraLayout.BaseLayoutItem)">
	<summary>
	</summary>
	<param name="item"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.GetItemControls(Interprise.Presentation.Base.ExtendedLayoutControlItem)">
	<summary>
	</summary>
	<param name="item"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.GetMainLayoutControl(Interprise.Presentation.Base.BaseControl)">
	<summary>
	</summary>
	<param name="plugin"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.GetTabPageItemControls(DevExpress.XtraLayout.TabbedControlGroup,DevExpress.XtraLayout.LayoutGroup)">
	<summary>
	</summary>
	<param name="tabPage"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.ManageAutoHideEventHandlers(Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.MangedEventHandler,DevExpress.XtraLayout.TabbedControlGroup,DevExpress.XtraLayout.LayoutTabPageChangingEventHandler,DevExpress.XtraLayout.LayoutTabPageChangedEventHandler)">
	<summary>
	</summary>
	<param name="manageEventHandler"></param>
	<param name="tabbedControlGroup"></param>
	<param name="selectedPageChanging"></param>
	<param name="selectedPageChanged"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.RemoveAutoHidePageEventHandlers(DevExpress.XtraLayout.TabbedControlGroup,DevExpress.XtraLayout.LayoutControlGroup)">
	<summary>
	</summary>
	<param name="parentLayoutGroup"></param>
	<param name="layoutGroup"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.RemoveAutoHideRibbonPageEventHandler(Interprise.Presentation.Base.BaseControl)">
	<summary>
	</summary>
	<param name="plugin"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.ShowHideRibbonPage(System.Boolean,System.String,System.String)">
	<summary>
	</summary>
	<param name="show"></param>
	<param name="controlName"></param>
	<param name="controlRibbonPage"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.ShowHideRibbonPage(Interprise.Presentation.Base.ExtendedXtraTabContol.TabControl,System.Boolean)">
	<summary>
	</summary>
	<param name="tabControl"></param>
	<param name="show"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.ShowHideRibbonPage(DevExpress.XtraLayout.LayoutControl,System.Boolean)">
	<summary>
	</summary>
	<param name="layoutControl"></param>
	<param name="show"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.TabbedControlGroup_SelectedPageChanging(System.Object,DevExpress.XtraLayout.LayoutTabPageChangingEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.TabbedControlGroup_SelectedPageChanged(System.Object,DevExpress.XtraLayout.LayoutTabPageChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.ButtonAddNew_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.BaseListDetailControl_BeforeUpdateDataset(System.Object,Interprise.Framework.Base.EventArguments.UpdateDatasetEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.BaseListDetailControl_AfterUpdateDataset(System.Object,Interprise.Framework.Base.EventArguments.UpdateDatasetEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.BaseListDetailControl_Load(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.BaseListControl_RowSelected(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.barMngrGridContextMenu_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.ButtonRefresh_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.ButtonEdit_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.cborepository_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.ButtonDelete_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.GridViewList_DoubleClick(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.GridViewList_FocusedColumnChanged(System.Object,DevExpress.XtraGrid.Views.Base.FocusedColumnChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.GridViewList_FocusedRowChanged(System.Object,DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.GridViewList_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.GridViewList_InvalidRowException(System.Object,DevExpress.XtraGrid.Views.Base.InvalidRowExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.GridViewList_ShowingEditor(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.GridViewList_ValidatingEditor(System.Object,DevExpress.XtraEditors.Controls.BaseContainerValidateEditorEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.listControl_RowSelected(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.TabListDetail_SelectedPageChanged(System.Object,DevExpress.XtraTab.TabPageChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseListDetailControl.TabListDetail_SelectedPageChanging(System.Object,DevExpress.XtraTab.TabPageChangingEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseGLClassTemplateControl.AssignAccountCode(System.Data.DataRowView,System.Data.DataRow)">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseGLClassTemplateControl.GenerateGLAccounts">
	<summary>
 Generate new accounts.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseGLClassTemplateControl.LoadGridSettings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseGLClassTemplateControl.Focus">
	<summary>
 Triggered when selected tab page is called.
 </summary>
	<returns></returns>
	<remarks>Sets the focus on the Class Code field.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseGLClassTemplateControl.repcboAccountCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseGLClassTemplateControl.repcboAccountCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseGLClassTemplateControl.repcboAccountCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SystemManager.BaseGLClassTemplateControl.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
	<summary>
 Triggered when any keyboard key command is pressed.
 </summary>
	<param name="msg"></param>
	<param name="keyData"></param>
	<returns></returns>
	<remarks>Sets the focus to the Class Code field / txtClassCode when the grid view focus reaches the last row.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SubstituteAvailabilityControl.#ctor">
	<summary>
 Initializes a new instance of the SubstituteAvailabilityControl class
 </summary>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SubstituteAvailabilityControl.gvwSubstitutes_CustomUnboundColumnData(System.Object,DevExpress.XtraGrid.Views.Base.CustomColumnDataEventArgs)">
	<summary>
 Handles the CustomUnboundColumnData event of gvwAccessories; populate unbound columns of gvwAccessories GridView with data
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="P:Interprise.Presentation.Component.SharedControl.StockDetailForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SystemManager.Preference.Shared.IAdvancedPreferenceInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.StockDetailControl.ShowPurchaseQuote">
	<summary>
 Show/Hide purchase requistion for on Order items"
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.StockDetailControl.PluginContainerGeneralPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SystemManager.Preference.Shared.IAdvancedPreferenceInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.StockDetailControl.PluginContainerDetailsPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SystemManager.Preference.Shared.IAdvancedPreferenceInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.StockDetailBodyControl.ShowPurchaseQuote">
	<summary>
 Show/Hide purchase requistion for on Order items"
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SSDConfirmation.SSDConfirmationForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SSDConfirmation.SSDConfirmationForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SharedControl.SSDConfirmation.ISSDConfirmationInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SSDConfirmation.SSDConfirmationControl.PluginContainerGeneral_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SSDConfirmation.SSDConfirmationControl.PluginContainerGeneralPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SharedControl.SSDConfirmation.ITransactionInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SSDConfirmation.SSDConfirmationControl.PluginContainerDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SSDConfirmation.SSDConfirmationControl.PluginContainerDetailPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SharedControl.SSDConfirmation.IDetailInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SpecialAttribute.SpecialAttributeMaintenanceForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SpecialAttribute.SpecialAttributeMaintenanceForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SystemManager.IBaseListDetailInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SpecialAttribute.NewField.NewFieldForm.#ctor">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SpecialAttribute.NewField.NewFieldForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SpecialAttribute.NewField.NewFieldForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.SpecialAttribute.NewField.INewFieldInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SpecialAttribute.NewField.NewFieldControl.CurrentDataset">
	<summary> Returns Current Dataset. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SpecialAttribute.NewField.NewFieldControl.CurrentFacade">
	<summary> Returns the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SpecialAttribute.NewField.NewFieldControl.DataDictionaryFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SpecialAttribute.NewField.NewFieldControl.TableName">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SpecialAttribute.NewField.NewFieldControl.DefaultColumnName">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SpecialAttribute.NewField.NewFieldControl.#ctor">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SpecialAttribute.NewField.NewFieldControl.#ctor(Interprise.Framework.Base.DatasetGateway.DataDictionaryDatasetGateway)">
	<summary>
	</summary>
	<param name="gatewayDataDictionary"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SpecialAttribute.NewField.NewFieldControl.#ctor(Interprise.Framework.Base.DatasetGateway.DataDictionaryDatasetGateway,Interprise.Facade.Base.DataDictionaryFacade)">
	<summary>
	</summary>
	<param name="gatewayDataDictionary"></param>
	<param name="facadeDataDictionary"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SpecialAttribute.NewField.NewFieldControl.AddData(System.String,System.Boolean)">
	<summary>
	</summary>
	<param name="tableName"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SpecialAttribute.NewField.NewFieldControl.MergeNewField">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SpecialAttribute.NewField.NewFieldControl.comboDataType_SelectedValueChanged(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SpecialAttribute.NewField.NewFieldControl.checkDefault_EditValueChanged(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SpecialAttribute.NewField.NewFieldControl.NewFieldWizard_BeforePageDisplayed(System.Object,Interprise.Presentation.Base.ExtendedXtraTabContol.SelectedPageChangingEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SpecialAttribute.NewField.NewFieldControl.NewFieldWizard_BeforeFinish(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SpecialAttribute.MainListDetailControl.#ctor">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SpecialAttribute.MainListDetailControl.PluginContainerBaseDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SpecialAttribute.MainListDetailControl.PluginContainerBaseDetailPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.SpecialAttribute.IMainDetailInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SpecialAttribute.MainDetailControl.PluginContainerDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SpecialAttribute.MainDetailControl.PluginContainerDetailPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.SpecialAttribute.IAttributeDetailInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SpecialAttribute.MainDetailControl.PluginContainerResult_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SpecialAttribute.MainDetailControl.PluginContainerResultPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.SpecialAttribute.IFilterResultInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SpecialAttribute.MainDetailControl.PluginContainerFilterControl_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SpecialAttribute.MainDetailControl.PluginContainerFilterControlPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.SpecialAttribute.IAttributeItemFilterInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SpecialAttribute.MainDetailControl.PluginContainerDesigner_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SpecialAttribute.MainDetailControl.PluginContainerDesignerPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.SpecialAttribute.IDesignerInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SpecialAttribute.DesignerPopupForm.TransactionDetail">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SpecialAttribute.DesignerPopupForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.SpecialAttribute.DesignerPopupForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.SpecialAttribute.IDesignerInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="T:Interprise.Presentation.Component.SharedControl.SpecialAttribute.DesignerPopupControl.FieldDetail">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.SpecialAttribute.AttributeItemFilterControl.InitialFilter(System.Boolean)">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.ReservationControl.IsReservedColumnReadOnly">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.ReservationControl.DropShipTransaction">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.ReservationControl.CustomDrawGridView(DevExpress.XtraGrid.Views.Grid.GridView,DevExpress.XtraGrid.Views.Base.RowObjectCustomDrawEventArgs,System.String)">
	<summary>
 Draws and sets the text on the given row in a grid view 
 </summary>
	<param name="gridView">The grid view to be drawn upon</param>
	<param name="e">A RowObjectCustomDrawEventArgs that contains the data for the row objects</param>
	<param name="rowText">The text to be written in the grid view</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.RecurringTransaction.RecurrenceSetupGeneralControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.RecurringTransaction.ProcessRecurringTransactionWizardForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.RecurringTransaction.ProcessRecurringTransactionWizardForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SharedControl.RecurringTransaction.IProcessRecurringTransactionWizardInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.RecurringTransaction.ProcessRecurringTransactionWizardControl.ShowProgressForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="T:Interprise.Presentation.Component.SharedControl.RecurringTransaction.ProcessRecurringTransactionWizardControl.FinalizeUpdateDelegate">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="T:Interprise.Presentation.Component.SharedControl.RecurringTransaction.ProcessRecurringTransactionWizardControl.UpdateProgressDelegate">
	<summary>
	</summary>
	<param name="progress"></param>
	<remarks></remarks>.

</member><member name="M:Interprise.Presentation.Component.SharedControl.RecurringTransaction.RecurrenceSetupControl.PluginContainerGeneral_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.RecurringTransaction.RecurrenceSetupControl.PluginContainerGeneralPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SharedControl.RecurringTransaction.IRecurrenceSetupGeneralInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.RecurringTransaction.RecurrenceSetupControl.PluginContainerDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.RecurringTransaction.RecurrenceSetupControl.PluginContainerDetailPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SharedControl.RecurringTransaction.IRecurrenceSetupDetailInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.RecurringTransaction.RecurrenceSetupForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.RecurringTransaction.RecurrenceSetupForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SharedControl.RecurringTransaction.IRecurrenceSetupInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.ManagerOverride.ManagerOverrideForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.ManagerOverride.ManagerOverrideForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SharedControl.ManagerOverride.IManagerOverrideInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.ManagerOverride.ManagerOverrideControl.OnSignInError(System.Object,Interprise.Framework.Base.EventArguments.SignInErrorEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.IntervalForm.Interval">
	<summary>
 Gets/sets the interval of price break..
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.IntervalForm.PriceBreaks">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.IntervalControl.Interval">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.IntervalControl.PriceBreaks">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.IntervalControl.Focus">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.eCommerce.SellingLanguage.SellingLanguageForm.CreateCouponControl">
	<summary>Create the CouponControl</summary>
</member><member name="P:Interprise.Presentation.Component.SharedControl.CustomFieldControl.EntityTable">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.CustomFieldControl.EnablePKCustomization">
	<summary>
 Gets or sets whether pk columns can be customize.
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.CustomFieldControl.IsLayoutItemVisible">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.CustomFieldControl.TableName">
	<summary>
 The table from which custom field will be retrieved.
 </summary>
	<value></value>
</member><member name="P:Interprise.Presentation.Component.SharedControl.CustomFieldControl.IsReadOnly">
	<summary>
 Enable disable control.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.CustomFieldControl.IsLayoutRestored">
	<summary>
 Determine if layout has been restored.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.CustomFieldControl.UndoPicture">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.CustomFieldControl.AddControlValidation(System.Windows.Forms.Control)">
	<summary>
 Show bubble help text in Custom Fields
 </summary>
	<param name="editor"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.CustomFieldControl.Focus">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.CustomFieldControl.FindAttribute(System.Xml.XmlNodeList,System.String)">
	<summary>
	</summary>
	<param name="xmlNodes"></param>
	<param name="findAttributeName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.CustomFieldControl.GetAttributeValue(System.Xml.XmlNodeList,System.String)">
	<summary>
	</summary>
	<param name="xmlNodes"></param>
	<param name="findAttributeName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.CustomFieldControl.LoadCustomField">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.CustomFieldControl.HideCustomizationForm">
	<summary>
 Hides the customization form.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.CustomFieldControl.ShowCustomizationForm">
	<summary>
 Shows the customization form.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.CustomFieldControl.SaveLayout">
	<summary>
 Savc changes to layout of custom field.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.CustomFieldControl.CustomLayoutControl_ShowCustomization(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.CustomFieldControl.CustomFieldControl_Load(System.Object,System.EventArgs)">
	<summary>
 Loads predefined layout by the user.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.CustomFieldControl.pictureEdit_ImageChanged(System.Object,System.EventArgs)">
	<summary>
 Handles size mode of image data type field.
 Detects whether a picture is stretch or on normal mode.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.CustomFieldControl.labelCustomize_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
 Shows the customization form when the label is double-click.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.CustomFieldControl.popupManager_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary>
 Event triggered when a menu is clicked.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.CustomFieldControl.TextEdit_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.CustomFieldControl.InvalidValue(System.Object,DevExpress.XtraEditors.Controls.InvalidValueExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.Customer.TransactionControl.gvwTransactionHistory_ShowingEditor(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 '
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.Customer.DocumentAllocationreferenceForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.Customer.DocumentAllocationreferenceForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SharedControl.IDocumentAllocationReferenceInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.Customer.DocumentAllocationReferenceControl.PluginContainerAllocationDetails_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.Customer.DocumentAllocationReferenceControl.PluginContainerAllocationDetailsPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SharedControl.IAllocationDetailsInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.Customer.DocumentAllocationReferenceControl.PluginContainerDocumentDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.Customer.DocumentAllocationReferenceControl.PluginContainerDocumentDetailPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SharedControl.IDocumentDetailsInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="E:Interprise.Presentation.Component.CRM.OwnerSelectionControl.FilterChanged">
	<summary>Triggers after filter changed.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.OwnerSelectionControl.BeforeAddOwner">
	<summary>Triggers before a new user or team is added to the list.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.OwnerSelectionControl.DataSource">
	<summary>Gets or sets the datasource.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.OwnerSelectionControl.GridControl">
	<summary><para>Gets the grid control which display the list of assigned to's</para></summary>
</member><member name="P:Interprise.Presentation.Component.CRM.OwnerSelectionControl.Criteria">
	<summary>Gets the owner/assigned to criteria.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.OwnerSelectionControl.OwnerOption">
	<summary>Gets or sets the assigned to filter option.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.OwnerSelectionControl.OwnerCaption">
	<summary>Gets or sets the list' caption.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.OwnerSelectionControl.ShowOwnerFilter">
	<summary>Displays the control to the user on a seperate form.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.FilterOptionControl.FilterChanged">
	<summary>Trigger after filter changed.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterOptionControl.CurrentPreferenceType">
	<summary>Gets the current preference type.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterOptionControl.DateFilter">
	<summary>Gets the date filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterOptionControl.TypeFilter">
	<summary>Gets the type filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterOptionControl.StatusFilter">
	<summary>Gets the status filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterOptionControl.PriorityFilter">
	<summary>Gets the priority filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterOptionControl.OwnerFilter">
	<summary>Gets the owner filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterOptionControl.OpportunityStatusFilter">
	<summary>Gets the Opportunity status filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterOptionControl.WaveTypeFilter">
	<summary>Gets the Campaign Wave type filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterOptionControl.SalesRepFilter">
	<summary>Gets the sales rep filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterOptionControl.TerritoryFilter">
	<summary>Gets the territory filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterOptionControl.ActivityCategoryFilter">
	<summary>Gets the Activity Category filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterOptionControl.EnableSalesRepFilter">
	<summary>Gets or sets whether to enable the sales rep filter.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.FilterNameControl.FormClosing">
	<summary>Triggers when the control is about to close.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterNameControl.FilterName">
	<summary>Gets the filter name set by the user.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterNameControl.DialogResult">
	<summary>Gets the dialog result based on the action done by the user.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.FilterNameControl.ShowFilteNameControl">
	<summary>Loads the control.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.FilterControl.FilterChanged">
	<summary>Triggers after the selection or filter changed.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterControl.FilterType">
	<summary>Gets or sets the filter type: date, type, priority.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterControl.Criteria">
	<summary>Gets the filter criteria.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterControl.DateFilter">
	<summary>Gets the date filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterControl.TypeFilter">
	<summary>Gets the type filter</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterControl.PriorityFilter">
	<summary>Gets the priority filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterControl.StartDate">
	<summary>Gets or sets the start date filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterControl.EndDate">
	<summary>Gets or sets the end date filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterControl.SpecificDateRange">
	<summary>Gets the date range of the type specific date filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterControl.DateFilterHiddenOptions">
	<summary>Gets or sets the date filter to display.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterControl.DateOption">
	<summary>Gets or sets the date filter option.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterControl.TypeOptions">
	<summary>Gets or sets the type filter option.</summary>
	<remarks>To set more than one type filter, use the 'or' operator.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterControl.PriorityOptions">
	<summary>Gets or sets the priority filter</summary>
	<remarks>To set more than one priority filter, use the 'or' operator.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterControl.DateCaption">
	<summary>Gets or sets the date caption.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterControl.TypeCaption">
	<summary>Gets or sets the type caption.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterControl.PriorityCaption">
	<summary>Gets or sets the priority caption.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterControl.TypeCheckBoxWidth">
	<summary>Gets or sets the width of type filter control.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterControl.PriorityCheckBoxWidth">
	<summary>Gets or sets the width of type priority control.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterControl.IsAllDates">
	<summary>Gets if current date option is 'All Dates'.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterControl.Paging">
	<summary>Gets or sets the current option for date paging.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterControl.DateFieldName">
	<summary>Sets the date field name which will be used for date filter criteria.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.FilterControl.FilterChangedOnPopupClose">
	<summary>Gets or sets whether filter changed will trigger upon popup closed.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.FilterControl.IsTypeOption(Interprise.Framework.Base.Shared.Enum.ActivityType)">
	<summary>Determines if the type argument is selected or not.</summary>
	<param name="p_type">The type to be determined.</param>
</member><member name="M:Interprise.Presentation.Component.CRM.FilterControl.IsPriorityOption(Interprise.Framework.Base.Shared.Enum.Priority)">
	<summary>Determines if the priority argument is selected or not.</summary>
	<param name="p_priority">The priority to be determined.</param>
</member><member name="M:Interprise.Presentation.Component.CRM.FilterControl.ComputeDate(System.DateTime)">
	<summary>Computes the date based on paging.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Activity.ListStatusControl.FilterChanged">
	<summary>Triggers after the filter changed.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.ListStatusControl.Criteria">
	<summary>Gets the status criteria.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.ListStatusControl.SelectedStatus">
	<summary>Gets the selected status in an array of string.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.ListStatusControl.StatusOptions">
	<summary>Gets or sets the selected status.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.ListStatusControl.StatusCaption">
	<summary>Gets or sets the list' caption.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.ListStatusControl.StatusCheckBoxWidth">
	<summary>Gets or sets the list' width.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.ListStatusControl.FilterChangedOnPopupClose">
	<summary>
 Gets or sets whether filterchanged event will trigger when the control is
 closed.
 </summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ListStatusControl.IsFilterChanged">
	<summary>Determines if the filter data has changed.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ListStatusControl.IsStatusOption(Interprise.Framework.Base.Shared.Enum.ActivityStatus)">
	<summary>Determines if the status argument is selected/checked or not.</summary>
	<param name="p_status">The status to check.</param>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.HistoryControl.CurrentDataset">
	<summary> Gets the CRM Activity Gateway </summary>
	<value> Interprise.Framework.Base.DatasetComponent.BaseDataset </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.HistoryControl.CurrentFacade">
	<summary> Gets the CRM Activity Facade </summary>
	<value> Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HistoryControl.InitializeDisplayName">
	<summary>
 Initializes the controls' text display name 
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HistoryControl.ClearDataSet">
	<summary> 
 Cleares the History Table 
 </summary>
	<remarks></remarks>
</member><member name="E:Interprise.Presentation.Component.CRM.Activity.HeaderControl.OnStartDateChanged">
	<summary>Triggers after the start date changed.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Activity.HeaderControl.OnStartTimer">
	<summary>Triggers after the timer starts.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Activity.HeaderControl.OnSelectedTypeChanged">
	<summary>Triggers after the activity type changed.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Activity.HeaderControl.OnTransactionTypeChanged">
	<summary>Triggers after the transaction type changed.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Activity.HeaderControl.ContactCodeChanged">
	<summary>Triggers after the contact for the activity changed.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Activity.HeaderControl.EntityCodeChanged">
	<summary>Triggers after the entity changed.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.HeaderControl.CurrentDataset">
	<summary> Gets the CRM Activity Gateway </summary>
	<value> Interprise.Framework.Base.DatasetComponent.BaseDataset </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.HeaderControl.CurrentFacade">
	<summary> Gets the CRM Activity Facade </summary>
	<value> Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.HeaderControl.IsReadOnly">
	<summary> Get or sets a value indicating whether Activity Control is readonly </summary>
	<value>
		<para>True - Header Control is readonly.</para>
		<para>False - Header Control is editable.</para>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.HeaderControl.TransactionType">
	<summary> Gets or sets the control's TransactionType </summary>
	<value> Interprise.Framework.Base.Shared.Enum.TransactionType </value>
	<remarks> The value depends on activity's entity </remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.HeaderControl.EntityCode">
	<summary> Gets the current Entity Code </summary>
	<value> String </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.HeaderControl.ContactCode">
	<summary> Gets the current Contact Code </summary>
	<value> String </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.HeaderControl.IsFromEntity">
	<summary>Gets or sets whether the activity came from an entity form.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.AddDefaultAttendee(System.String)">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.InitializeDisplayName">
	<summary> Initializes the control's text display name </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.Focus">
	<summary>
 Overrides the base control's Focus function
 </summary>
	<returns> Boolean </returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.PopulateCombos">
	<summary> Populates all combo box with corresponding options </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.CheckCustomerCredit">
	<summary> Check customer's credit credibility </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.SetDuration">
	<summary> Sets the Due Date based on Start Date and duration </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.InitializeReminderInfo">
	<summary> Initializes the reminder info settings based on the data retrieved from database </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.SetReminderInfo">
	<summary> Sets the reminder info based on the settings set by end user </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.InitializeTimerDuration">
	<summary>Sets the timer values.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.UpdateTimerDuration">
	<summary>Updates the value duration of data table.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.SetTimer(System.Boolean)">
	<summary>Changes the U.I. and data when the timer starts or stops.</summary>
	<param name="startTimer">Determines whether to start or stop the timer.</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.m_activityFacade_ActivityEntityChanged(System.String)">
	<remarks>
	</remarks>
	<param name="p_entityCode "> The value indicating the entity code </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.m_activityFacade_ActivityContactChanged(System.String)">
	<summary>
	</summary>
	<param name="contactCode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.m_activityFacade_ActivityStartDateChanged(System.DateTime)">
	<summary> Handles the activity facade's StartDateChanged event </summary>
	<remarks>
	</remarks>
	<param name="p_startDate "> The date indicating the new Start Date </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.m_activityFacade_ActivityTypeChanged(System.String)">
	<summary>
	</summary>
	<param name="ActivityType"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.m_activityFacade_AddRemoveHandler(System.Boolean)">
	<summary>
 Handles the activity facade's AddRemoveHandler event
 </summary>
	<param name="isAddHandler"> indicates if would add/remove events for this control</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.searchcomboAssignedTo_AddNewValue(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary> Handles the searchcomboAssignedTo's AddnewValue event </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the searchcomboAssignedTo </param>
	<param name="e "> The System.ComponentModel.CancelEventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.searchcomboTeam_AddNewValue(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary> Handles the searchcomboTeam's AddnewValue event </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the searchcomboTeam </param>
	<param name="e "> The System.ComponentModel.CancelEventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.searchcomboCategory_AddNewValue(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary> Handles the searchcomboCategory's AddnewValue event </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the searchcomboCategory </param>
	<param name="e "> The System.ComponentModel.CancelEventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.searchcomboOpportunity_AddNewValue(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary> Handles the searchcomboOpportunity's AddnewValue event </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the searchcomboOpportunity </param>
	<param name="e "> The System.ComponentModel.CancelEventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.searchcomboWave_AddNewValue(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary> Handles the searchcomboWave's AddnewValue event </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the searchcomboWave </param>
	<param name="e "> The System.ComponentModel.CancelEventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.searchcomboServiceContract_AddNewValue(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary> Handles the searchcomboServiceContract's AddnewValue event </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the searchcomboServiceContract </param>
	<param name="e "> The System.ComponentModel.CancelEventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.searchcomboAssignedTo_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Invokes the System User Account Form </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the searchcomboAssignedTo </param>
	<param name="e "> The DevExpress.XtraEditors.Controls.OpenLinkEventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.searchcomboTeam_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Invokes the System Team Form </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the searchcomboTeam </param>
	<param name="e "> The DevExpress.XtraEditors.Controls.OpenLinkEventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.searchcomboCategory_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Invokes the System Category Form </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the searchcomboCategory </param>
	<param name="e "> The DevExpress.XtraEditors.Controls.OpenLinkEventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.searchcomboOpportunity_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Invokes the CRM Opportunity Form </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the searchcomboOpportunity </param>
	<param name="e "> The DevExpress.XtraEditors.Controls.OpenLinkEventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.searchcomboWave_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Invokes the CRM Campaign Wave Form </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the searchcomboWave </param>
	<param name="e "> The DevExpress.XtraEditors.Controls.OpenLinkEventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.searchcomboServiceContract_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Invokes the Customer Form and shows the Service Contract Tab </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the searchcomboServiceContract </param>
	<param name="e "> The DevExpress.XtraEditors.Controls.OpenLinkEventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.searchcomboEntityName_CustomDisplayText(System.Object,DevExpress.XtraEditors.Controls.CustomDisplayTextEventArgs)">
	<summary> Alters the text the entity's text display based on customer's credit </summary>
	<remarks> Applies only to customer activity and case </remarks>
	<param name="sender "> Represents the Entity Textbox Control </param>
	<param name="e "> The DevExpress.XtraEditors.Controls.ConvertEditValueEventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.searchcomboContactName_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Sets the new transaction type based on the selected contact </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the Contact Search Combo </param>
	<param name="eRow "> The Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.searchcomboAssignedTo_TextChanged(System.Object,System.EventArgs)">
	<summary> Filters the Team Combo box based on the selected assigned to </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the searchcomboAssignedTo </param>
	<param name="e "> The System.EventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.checkPrivate_CheckedChanged(System.Object,System.EventArgs)">
	<summary> Handles the private check box's CheckedChanged event </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the Private check box </param>
	<param name="e "> The System.EventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.DueDate_TextChanged(System.Object,System.EventArgs)">
	<summary> Handles the duedate controls' textChanged event </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents either the Due Date date combo or time edit controls </param>
	<param name="e "> The System.EventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.Duration_Changed(System.Object,System.EventArgs)">
	<summary> Changes the due date based on the duration settings </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represesnt the duration spinEdit and combo box controls </param>
	<param name="e "> The System.EventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.dateStartDate_Validated(System.Object,System.EventArgs)">
	<summary> Prevents the StartDate time edit from resetting to #12:00:00AM# </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the Start Date combo box </param>
	<param name="e "> The System.EventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.buttonTimer_Click(System.Object,System.EventArgs)">
	<summary> Initiates the timer </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the timer buttons </param>
	<param name="e "> The System.EventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.buttonHoldTimer_Click(System.Object,System.EventArgs)">
	<summary> Determines when to pause or resume timer </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represent the HoldTimer button </param>
	<param name="e "> The System.EventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.timeCall_Tick(System.Object,System.EventArgs)">
	<summary> Adds one second to duedate </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the timer control </param>
	<param name="e "> The System.EventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.comboReminderInfo_ButtonClick(System.Object,DevExpress.XtraEditors.Controls.ButtonPressedEventArgs)">
	<summary>
	</summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="e ">
	</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.spinReminderInfo_ValueChanged(System.Object,System.EventArgs)">
	<summary> Invokes the SetReminderInfo subroutine </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the spinReminderInfo </param>
	<param name="e "> The System.EventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.comboReminderInfo_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary> Invokes the SetReminderInfo subroutine </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the comboReminderInfo </param>
	<param name="e "> The System.EventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.checkReminderInfo_CheckedChanged(System.Object,System.EventArgs)">
	<summary> Invokes the SetReminderInfo subroutine </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the checkReminderInfo </param>
	<param name="e "> The System.EventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.HeaderControl.comboColor_Closed(System.Object,DevExpress.XtraEditors.Controls.ClosedEventArgs)">
	<summary> Forces the color combo box to update the databound color field </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the Color combo box </param>
	<param name="e "> The DevExpress.XtraEditors.Controls.ClosedEventArgs to be processed </param>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.ResourceControl.CurrentDataset">
	<summary>
	</summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.ResourceControl.CurrentFacade">
	<summary>
	</summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ResourceControl.InitializeDisplayName">
	<summary>
	</summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ResourceControl.rpopupEdit_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
	</summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="eRow ">
	</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ResourceControl.rpopupOwner_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="e ">
	</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ResourceControl.toolbarList_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary>
	</summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="e ">
	</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ResourceControl.gvwList_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
	</summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="e ">
	</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ResourceControl.gvwList_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
	</summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="e ">
	</param>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.ItemControl.CurrentDataset">
	<summary> Gets CRM Activity Gateway </summary>
	<value> Interprise.Framework.Base.DatasetComponent.BaseDataset </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.ItemControl.CurrentFacade">
	<summary> Gets the CRM Activity Facade </summary>
	<value> Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ItemControl.InitializeDisplayName">
	<summary> Initializes the controls' Text Display Name </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ItemControl.rpopupItem_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
		<para> Adds the selected rows to the table unless the selected row(s) is already contained on that table </para>
		<para> Sorts first the table according to the PK to improve searching </para>
	</summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the Item reposiroty popup control </param>
	<param name="eRow "> The Framework.Base.EventArguments.Search.RowSelectedEventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ItemControl.rpopupItem_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Handles the Item repository popup control's openLink event </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the Item repository popup control </param>
	<param name="e "> The DevExpress.XtraEditors.Controls.OpenLinkEventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ItemControl.toolbarList_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary>
	</summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="e ">
	</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ItemControl.gvwList_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
	</summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="e ">
	</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ItemControl.gvwItem_CellValueChanged(System.Object,DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs)">
	<summary>
	</summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="e ">
	</param>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.CallBack.CallBackControl.CallBackScheduleDate">
	<summary> Gets the new DueDate </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.CallBack.CallBackControl.PopulateComboPresetTimeIntervals">
	<summary> Populates the time interval combo box </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.CallBack.CallBackControl.radioDate_CheckedChanged(System.Object,System.EventArgs)">
	<summary> Handles the preset and spcific radio buttons </summary>
	<remarks>
	</remarks>
	<param name="sender "> The Devexpress.XtraEditor.CheckEdit to be processed </param>
	<param name="e "> The System.EventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.CallBack.CallBackControl.comboPresetInterval_SelectedindexChanged(System.Object,System.EventArgs)">
	<summary> Handles the comboPresetInterval_SelectedindexChanged event </summary>
	<remarks>
	</remarks>
	<param name="sender "> The Devexpress.XtraEditors.ComboBoxEdit to be processed </param>
	<param name="e "> The Ssytem.EventArgs to be processed </param>
</member><member name="E:Interprise.Presentation.Component.CRM.Activity.AvailabilityControl.OnSelectedDateChanged">
	<summary>Triggers after selected date changed.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Activity.AvailabilityControl.SendEmail">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.AvailabilityControl.CurrentDataset">
	<summary> Gets the CRMActivity Gateway </summary>
	<value> Interprise.Framework.Base.DatasetComponent.BaseDataset </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.AvailabilityControl.CurrentFacade">
	<summary> Gets the CRMActivity Facade </summary>
	<value> Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.AvailabilityControl.CurrentDate">
	<summary> Gets the current date used to filter the list of Attendees </summary>
	<value> Date </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.AvailabilityControl.InitializeGridColumn">
	<summary>
 Sets all the grid's necessary settings including the column width and display name
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.AvailabilityControl.SetCurrentTime(System.String,System.DateTime@,System.DateTime@)">
	<summary>
 Deteremines the current column(time interval) to be processed and sets the appropriate start time and end time
 </summary>
	<param name="p_columnName">The current time interval</param>
	<param name="p_startTime">The start time to be set. Passed by reference</param>
	<param name="p_endTime">The end time to be set. Passed by reference</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.AvailabilityControl.rhyperLink_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Handles the repository hyperlink's openLink event </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the repository hyperlink </param>
	<param name="e "> The DevExpress.XtraEditors.Controls.OpenLinkEventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.AvailabilityControl.dateNavigator_Closed(System.Object,DevExpress.XtraEditors.Controls.ClosedEventArgs)">
	<summary> Handles the date combo edit Closed event </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the date combo edit control </param>
	<param name="e "> The DevExpress.XtraEditors.Controls.ClosedEventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.AvailabilityControl.gvwAvailability_CustomDrawCell(System.Object,DevExpress.XtraGrid.Views.Base.RowCellCustomDrawEventArgs)">
	<summary>
 Handles the repainting of each time interval cells based on the start and end time
 </summary>
	<param name="sender">Represent the grid view control</param>
	<param name="e">The DevExpress.XtraGrid.Views.Base.RowCellCustomDrawEventArgs to be processed</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.AvailabilityControl.gvwAvailability_CustomDrawColumnHeader(System.Object,DevExpress.XtraGrid.Views.Grid.ColumnHeaderCustomDrawEventArgs)">
	<summary>
 Handles the grid view's customDrawColumnHeader event
 </summary>
	<param name="sender">Represents the grid view control</param>
	<param name="e">The DevExpress.XtraGrid.Views.Grid.ColumnHeaderCustomDrawEventArgs to be processed</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.AvailabilityControl.gvwAvailability_DoubleClick(System.Object,System.EventArgs)">
	<summary>
 Alters the date filtering
 </summary>
	<param name="sender "> Represents the grid view control </param>
	<param name="e "> The System.EventArgs to be processed </param>
	<remarks>Updates the current activity's startdate if the checkUpdateStartDate.Checked is true</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.AvailabilityControl.gvwAvailability_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary> Saves the information of the current object the cursor is pointing to </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the Grid View control </param>
	<param name="e "> The System.Windows.Forms.MouseEventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.AttendeeGridControl.InitalizeDataSource(System.Data.DataTable)">
	<summary> Initializes the datasource settings according to the gridType </summary>
	<remarks>
	</remarks>
	<param name="p_datasource "> The CRM Activity Attendee View Table to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.AttendeeGridControl.InitializeDisplayName">
	<summary> Initialize the controls' TextDisplayName </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.AttendeeGridControl.rpopupEdit_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
		<para> Adds the selected rows to the table unless the selected row(s) is already contained on that table  </para>
		<para> Sorts first the table according to the PK to improve searching  </para>
	</summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the Grid View Control </param>
	<param name="eRow "> The Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs indicating the rows to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.AttendeeGridControl.rpopupOwner_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> handles the repository hyperlink control's openLink event </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the repository hyperlink control </param>
	<param name="e "> The DevExpress.XtraEditors.Controls.OpenLinkEventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.AttendeeGridControl.toolbarList_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary> Handles the toolbar's itemClick event </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the toolbar control </param>
	<param name="e "> The DevExpress.XtraBars.ItemClickEventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.AttendeeGridControl.gvwList_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary> Handles the grid view's mouseUp event </summary>
	<remarks>
	</remarks>
	<param name="sender "> Reperesents the Grid View Control </param>
	<param name="e "> The System.Windows.Forms.MouseEventArgs to be processed </param>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.ActivityForm.IsFromEntity">
	<summary>Gets or sets if the activity came from an entity form.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityForm.LoadActivity(System.String)">
	<summary>Loads an existing activity</summary>
	<param name="p_activityCode">The activity to open</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityForm.AddActivity(System.String,System.String,System.String,System.DateTime,System.String,System.String)">
	<summary>Creates a new Activity based on default values.</summary>
	<param name="p_entityCode">The entity ID which owns the new Activity.</param>
	<param name="p_contactCode">Th contact for the new Activity.</param>
	<param name="p_acitivytType">The activity type.</param>
	<param name="p_startDate">The start date for the new Activity.</param>
	<param name="p_opportunityCode">The Opportunity assigned to the new Activity.</param>
	<param name="p_waveCode">The Campaign Wave assigned the new Activity.</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityForm.PopulateComboStatus">
	<summary> Populates the status combo box </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityForm.m_activityControl_OnSelectedTypeChanged(System.String)">
	<summary>
	</summary>
	<remarks>
	</remarks>
	<param name="p_activityType ">
	</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityForm.m_activityControl_OnSelectedStatusChanged(System.String)">
	<summary> Handles the Activity Control's OnSelectedStatusChanged event </summary>
	<remarks>
	</remarks>
	<param name="p_activityStatus "> The value indicating the new Activity Status </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityForm.m_activityControl_IsReadOnlyChanged(System.Object,System.EventArgs)">
	<summary> ''' <summary> Handles the Activity Control's IsReadOnlyChanged event </summary>
	</summary>
	<remarks>
	</remarks>
	<param name="sender "> Represent the Activity Control </param>
	<param name="e "> The System.EventsArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityForm.m_activityControl_OnStartDateChanged(System.DateTime)">
	<summary> Handles the Activity Control's OnStartDateChanged event </summary>
	<remarks>
	</remarks>
	<param name="p_startDate "> The value indicating the new Activity Start Date </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityForm.m_activityControl_OnStartTimer(System.Boolean)">
	<summary> Handles the Activity Control's OnStartTimeChanged event </summary>
	<remarks>
	</remarks>
	<param name="p_start "> The value indicating the Timer has started </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityForm.rcomboStatus_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary> Handles the rcomboStatus_SelectedIndexChanged event </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the Status Combo Box </param>
	<param name="e "> The System.EventArgs to be processed </param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.ContactControl.ComboIsWebAccess_TextChanged(System.Object,System.EventArgs)">
	<summary>
 Sets UserNameEditor readonly property and enables PasswordButton if the selected item is ComboIsWebAccess.
 </summary>
	<param name="sender"> The source of the event. </param>
	<param name="e"> The base class for classes containing event data. </param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.ContactControl.PasswordButton_Click(System.Object,System.EventArgs)">
	<summary> Checks for the password input if it is new and shows the password form. </summary>
	<param name="sender"> The source of the event. </param>
	<param name="e"> The base class for classes containing event data. </param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.ContactControl.btnPassword_Click(System.Object,System.EventArgs)">
	<summary>
 Checks for the password input if it is new and shows the password form.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks>For the New Customer, Prospect and Ship To Wizards</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.Concurrency.MainForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.Concurrency.MainForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SharedControl.Concurrency.IMainInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.Concurrency.MainControl.RestoreCursor">
	<summary>
 Resets the control's current cursor to
 <strong>System.Windows.Forms.Cursors.Default</strong>.
 </summary>
</member><member name="M:Interprise.Presentation.Component.SharedControl.Concurrency.MainControl.LoadAsync_Completed(System.IAsyncResult)">
	<summary>
	</summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.Concurrency.MainControl.ReadKitAvailability(System.Data.DataRow[])">
	<summary>
 Loads the kit stock information base on the kit components selected by the user.
 </summary>
	<param name="itemKitDetailRows"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.Concurrency.MainControl.ReadKitAvailabilityAsync(System.String)">
	<summary>
 Loads the kit components stock asynchronously
 </summary>
	<param name="commandText"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.Concurrency.MainControl.ReadKitAvailabilityAsync_Completed(System.IAsyncResult)">
	<summary>
 Method triggered after asynchronous reading of kit data.
 </summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.Concurrency.MainControl.SetAvailabilityDatasource(Interprise.Framework.Base.DatasetGateway.AvailabilityDatasetGateway)">
	<summary>
 Resets the datasource of the ItemsAvailabilityControl
 </summary>
	<param name="datasource"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.Concurrency.MainControl.PluginContainerItem_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.Concurrency.MainControl.PluginContainerItemPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SharedControl.Concurrency.IItemInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.Concurrency.MainControl.PluginContainerReservation_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.Concurrency.MainControl.PluginContainerReservationPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SharedControl.IReservationInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.Concurrency.MainControl.PluginContainerAvailability_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.Concurrency.MainControl.PluginContainerAvailabilityPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SharedControl.IAvailabilityInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.Concurrency.ItemControl.KitDetailItemCode">
	<summary>The primary code of the kit item currently selected on the control.</summary>
	<value>Returns the primary code of the kit item currently selected on the control.</value>
</member><member name="P:Interprise.Presentation.Component.SharedControl.Concurrency.ItemControl.KitDetailWarehouseCode">
	<summary>The primary code of the kit item currently selected on the control.</summary>
	<value>Returns the primary code of the kit item currently selected on the control.</value>
</member><member name="P:Interprise.Presentation.Component.SharedControl.Concurrency.ItemControl.ItemCode">
	<summary>The primary code of the item currently selected on the control.</summary>
	<value>Returns the primary code of the item currently selected on the control.</value>
</member><member name="P:Interprise.Presentation.Component.SharedControl.Concurrency.ItemControl.UMInformation">
	<summary>
 Stores in an object array all of the related UM and it's corresponsing qty for items included in the order
 </summary>
	<value>Array Object</value>
	<returns>Array Object</returns>
	<remarks>Element 0 for UMCode and 1 for UMQty</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.Concurrency.ItemControl.OriginalInvoiceRelatedAvailableQuantity(System.String)">
	<summary>
 Returns the sum of the total quantity order for a single item
 </summary>
	<value>Array Object</value>
	<returns>Returns the sum of the total quantity order for a single item</returns>
	<remarks>Value is used to determine the Stock Level for a single item in an order</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.Concurrency.DataConcurrencyForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.Concurrency.DataConcurrencyForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SharedControl.Concurrency.IDataConcurrencyInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.Concurrency.DataConcurrencyControl.PluginContainerDataConcurrency_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.Concurrency.DataConcurrencyControl.PluginContainerDataConcurrencyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SharedControl.Concurrency.IItemInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.CheckOptionsControl.#ctor">
	<summary>
 Initializes a new instance of the CheckOptionsControl class
 </summary>
</member><member name="M:Interprise.Presentation.Component.SharedControl.CheckOptionsControl.Dispose(System.Boolean)">
	<summary>
 Overrides System.Windows.Forms.Form.Dispose; disposes of all associated components 
 </summary>
	<param name="disposing">True, to release both managed and unmanaged resources; False, to release only unmanaged resources</param>
</member><member name="P:Interprise.Presentation.Component.SharedControl.CheckOptionsControl.Preprinted">
	<summary>
 Gets or sets the value indicating if the Preprinted check box is checked
 </summary>
	<value>The value indicating if the Preprinted check box is checked</value>
	<returns>The value indicating if the Preprinted check box is checked</returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.CheckOptionsControl.Buttonclicked">
	<summary>
 Gets or sets the text in the Check Options control
 </summary>
	<value>The text in the Check Options control</value>
	<returns>The text in the Check Options control</returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.BaseTaxDetailTaxSummaryGridControl.TaxSummaryValue">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailTaxSummaryGridControl.CustomDrawGridView(DevExpress.XtraGrid.Views.Grid.GridView,DevExpress.XtraGrid.Views.Base.RowObjectCustomDrawEventArgs,System.String)">
	<summary>
 Draws and sets the text on the given row in a grid view 
 </summary>
	<param name="gridView">The grid view to be drawn upon</param>
	<param name="e">A RowObjectCustomDrawEventArgs that contains the data for the row objects</param>
	<param name="rowText">The text to be written in the grid view</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailTaxSummaryGridControl.gvwTaxSummary_EndGrouping(System.Object,System.EventArgs)">
	<summary>
 Handles the EndGrouping event of gvwTaxSummary; expands all groups of the Tax Summary grid view
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e"></param>
	<remarks>An EventArgs containing the data for the event</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailTaxSummaryGridControl.gvwTaxSummary_FocusedRowChanged(System.Object,DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs)">
	<summary>
 Handles the FocusedRowChanged event of gvwFreightOtherTax; sets the text for the Line Item Tax and Freight Other Tax tab pages, and calls UpdateTaxTotal
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A FocusedRowChangedEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailTaxSummaryGridControl.repSummaryAccountCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Handles the PopupClose event of repSummaryAccountCode; assigns the default values to the summary Account Code column
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="eRow">An RowSelectedEventArgs containing the data for the event</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailTaxSummaryGridControl.hypSummaryTaxDescription_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Handles the OpenLink event of hypLineTaxDescription; opens the Setup Tax Component form
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An OpenLinkEventArgs containing the data for the event</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailTaxSummaryGridControl.repSummaryAccountCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Handles the OpenLink event of rcboAccountCode and rcboLineAccountCode; opens the Accounting Tools Chart of Account form
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An OpenLinkEventArgs containing the data for the event</param>
</member><member name="P:Interprise.Presentation.Component.SharedControl.BaseTaxDetailReturnItemTaxGridControl.TransactionType">
	<summary>
 Gets or sets the transaction type; sets the price grid columns as Visible when the transaction type is one of the following:
 Quote, SalesOrder, Invoice, RMA or CreditMemo
 </summary>
	<value>The transaction type</value>
	<returns>The transaction type</returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.BaseTaxDetailReturnItemTaxGridControl.IsReadOnly">
	<summary>
 Gets or sets the value indicating if the current control is read only (True) or not (False); sets the following grid columns as 
 read only if the value is True (and not read only if False): Tax Amount Rate, Tax Rate, Tax Freight Rate, Line Tax Detail Code,
 Line Account Code, Tax Detail Code and Account Code
 </summary>
	<value>The value indicating if the current control is read only (True) or not (False)</value>
	<returns>The value indicating if the current control is read only (True) or not (False)</returns>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailReturnItemTaxGridControl.CustomDrawGridView(DevExpress.XtraGrid.Views.Grid.GridView,DevExpress.XtraGrid.Views.Base.RowObjectCustomDrawEventArgs,System.String)">
	<summary>
 Draws and sets the text on the given row in a grid view 
 </summary>
	<param name="gridView">The grid view to be drawn upon</param>
	<param name="e">A RowObjectCustomDrawEventArgs that contains the data for the row objects</param>
	<param name="rowText">The text to be written in the grid view</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailReturnItemTaxGridControl.SetLayoutGroupText">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailReturnItemTaxGridControl.OnLineItemTaxChanged(DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs)">
	<summary>
 A subroutine called when LineItemTax changed; overridable, has no methods
 </summary>
	<param name="e">A CellValueChangedEventArgs object</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailReturnItemTaxGridControl.gvwFreightOtherTax_FocusedRowChanged(System.Object,DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs)">
	<summary>
 Handles the FocusedRowChanged event of gvwFreightOtherTax; sets the text for the Line Item Tax and Freight Other Tax tab pages, and calls UpdateTaxTotal
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A FocusedRowChangedEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailReturnItemTaxGridControl.gvwLineItemTax_CustomUnboundColumnData(System.Object,DevExpress.XtraGrid.Views.Base.CustomColumnDataEventArgs)">
	<summary>
 Handles the CustomUnboundColumnData event of gvwLineItemTax; overridable, has no methods
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A CustomColumnDataEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailReturnItemTaxGridControl.gvwLineItemTax_CellValueChanged(System.Object,DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs)">
	<summary>
 Handles the CellValueChanged event of gvwLineItemTax; updates the Line Item Tax grid views and tab pages, and calls UpdateTaxTotal
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A CellValueChangedEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailReturnItemTaxGridControl.gvwLineItemTax_EndGrouping(System.Object,System.EventArgs)">
	<summary>
 Handles the EndGrouping event of gvwLineItemTax; expands all groups of the Line Item Tax grid view
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailReturnItemTaxGridControl.gvwLineItemTax_CustomDrawGroupRow(System.Object,DevExpress.XtraGrid.Views.Base.RowObjectCustomDrawEventArgs)">
	<summary>
 Handles the CustomDrawGroupRow event of gvwLineItemTax; draws the text containing item and tax details on the row using CustomDrawGridView
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A RowObjectCustomDrawEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailReturnItemTaxGridControl.gvwLineItemTax_FocusedRowChanged(System.Object,DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs)">
	<summary>
 Handles the FocusedRowChanged event of gvwFreightOtherTax; sets the text for the Line Item Tax and Freight Other Tax tab pages, and calls UpdateTaxTotal
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A FocusedRowChangedEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailReturnItemTaxGridControl.hypLineTaxDetailCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Handles the OpenLink event of hypLineTaxDetailCode and hypLineTaxDetailCode; opens the Setup Tax Component form
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An OpenLinkEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailReturnItemTaxGridControl.hypLineTaxDescription_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Handles the OpenLink event of hypLineTaxDescription; opens the Setup Tax Component form
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An OpenLinkEventArgs containing the data for the event</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailReturnItemTaxGridControl.rcboLineAccountCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Handles the OpenLink event of rcboAccountCode and rcboLineAccountCode; opens the Accounting Tools Chart of Account form
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An OpenLinkEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailReturnItemTaxGridControl.rcboLineAccountCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Handles the PopupClose event of rcboLineAccountCode; assigns the default values to the Line Account Code column
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="eRow">An RowSelectedEventArgs containing the data for the event</param>
</member><member name="P:Interprise.Presentation.Component.SharedControl.BaseTaxDetailLineItemTaxGridControl.TransactionType">
	<summary>
 Gets or sets the transaction type; sets the price grid columns as Visible when the transaction type is one of the following:
 Quote, SalesOrder, Invoice, RMA or CreditMemo
 </summary>
	<value>The transaction type</value>
	<returns>The transaction type</returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.BaseTaxDetailLineItemTaxGridControl.IsReadOnly">
	<summary>
 Gets or sets the value indicating if the current control is read only (True) or not (False); sets the following grid columns as 
 read only if the value is True (and not read only if False): Tax Amount Rate, Tax Rate, Tax Freight Rate, Line Tax Detail Code,
 Line Account Code, Tax Detail Code and Account Code
 </summary>
	<value>The value indicating if the current control is read only (True) or not (False)</value>
	<returns>The value indicating if the current control is read only (True) or not (False)</returns>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailLineItemTaxGridControl.CustomDrawGridView(DevExpress.XtraGrid.Views.Grid.GridView,DevExpress.XtraGrid.Views.Base.RowObjectCustomDrawEventArgs,System.String)">
	<summary>
 Draws and sets the text on the given row in a grid view 
 </summary>
	<param name="gridView">The grid view to be drawn upon</param>
	<param name="e">A RowObjectCustomDrawEventArgs that contains the data for the row objects</param>
	<param name="rowText">The text to be written in the grid view</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailLineItemTaxGridControl.SetLayoutGroupText">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailLineItemTaxGridControl.OngvwLineItemTaxCustomDrawCell(System.Object,DevExpress.XtraGrid.Views.Base.RowCellCustomDrawEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailLineItemTaxGridControl.OnLineItemTaxChanged(DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs)">
	<summary>
 A subroutine called when LineItemTax changed; overridable, has no methods
 </summary>
	<param name="e">A CellValueChangedEventArgs object</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailLineItemTaxGridControl.gvwLineItemTax_CustomDrawCell(System.Object,DevExpress.XtraGrid.Views.Base.RowCellCustomDrawEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailLineItemTaxGridControl.gvwFreightOtherTax_FocusedRowChanged(System.Object,DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs)">
	<summary>
 Handles the FocusedRowChanged event of gvwFreightOtherTax; sets the text for the Line Item Tax and Freight Other Tax tab pages, and calls UpdateTaxTotal
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A FocusedRowChangedEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailLineItemTaxGridControl.gvwLineItemTax_CustomUnboundColumnData(System.Object,DevExpress.XtraGrid.Views.Base.CustomColumnDataEventArgs)">
	<summary>
 Handles the CustomUnboundColumnData event of gvwLineItemTax; overridable, has no methods
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A CustomColumnDataEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailLineItemTaxGridControl.gvwLineItemTax_CellValueChanged(System.Object,DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs)">
	<summary>
 Handles the CellValueChanged event of gvwLineItemTax; updates the Line Item Tax grid views and tab pages, and calls UpdateTaxTotal
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A CellValueChangedEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailLineItemTaxGridControl.gvwLineItemTax_EndGrouping(System.Object,System.EventArgs)">
	<summary>
 Handles the EndGrouping event of gvwLineItemTax; expands all groups of the Line Item Tax grid view
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailLineItemTaxGridControl.gvwLineItemTax_CustomDrawGroupRow(System.Object,DevExpress.XtraGrid.Views.Base.RowObjectCustomDrawEventArgs)">
	<summary>
 Handles the CustomDrawGroupRow event of gvwLineItemTax; draws the text containing item and tax details on the row using CustomDrawGridView
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A RowObjectCustomDrawEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailLineItemTaxGridControl.gvwLineItemTax_FocusedRowChanged(System.Object,DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs)">
	<summary>
 Handles the FocusedRowChanged event of gvwFreightOtherTax; sets the text for the Line Item Tax and Freight Other Tax tab pages, and calls UpdateTaxTotal
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A FocusedRowChangedEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailLineItemTaxGridControl.hypLineTaxDetailCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Handles the OpenLink event of hypLineTaxDetailCode and hypLineTaxDetailCode; opens the Setup Tax Component form
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An OpenLinkEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailLineItemTaxGridControl.hypLineTaxDescription_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Handles the OpenLink event of hypLineTaxDescription; opens the Setup Tax Component form
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An OpenLinkEventArgs containing the data for the event</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailLineItemTaxGridControl.rcboLineAccountCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Handles the OpenLink event of rcboAccountCode and rcboLineAccountCode; opens the Accounting Tools Chart of Account form
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An OpenLinkEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailLineItemTaxGridControl.rcboLineAccountCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Handles the PopupClose event of rcboLineAccountCode; assigns the default values to the Line Account Code column
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="eRow">An RowSelectedEventArgs containing the data for the event</param>
</member><member name="P:Interprise.Presentation.Component.SharedControl.BaseTaxDetailFreightOtherTaxControl.TransactionType">
	<summary>
 Gets or sets the transaction type; sets the price grid columns as Visible when the transaction type is one of the following:
 Quote, SalesOrder, Invoice, RMA or CreditMemo
 </summary>
	<value>The transaction type</value>
	<returns>The transaction type</returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.BaseTaxDetailFreightOtherTaxControl.IsReadOnly">
	<summary>
 Gets or sets the value indicating if the current control is read only (True) or not (False); sets the following grid columns as 
 read only if the value is True (and not read only if False): Tax Amount Rate, Tax Rate, Tax Freight Rate, Line Tax Detail Code,
 Line Account Code, Tax Detail Code and Account Code
 </summary>
	<value>The value indicating if the current control is read only (True) or not (False)</value>
	<returns>The value indicating if the current control is read only (True) or not (False)</returns>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailFreightOtherTaxControl.CustomDrawGridView(DevExpress.XtraGrid.Views.Grid.GridView,DevExpress.XtraGrid.Views.Base.RowObjectCustomDrawEventArgs,System.String)">
	<summary>
 Draws and sets the text on the given row in a grid view 
 </summary>
	<param name="gridView">The grid view to be drawn upon</param>
	<param name="e">A RowObjectCustomDrawEventArgs that contains the data for the row objects</param>
	<param name="rowText">The text to be written in the grid view</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailFreightOtherTaxControl.SetLayoutGroupText">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailFreightOtherTaxControl.OngvwLineItemTaxCustomDrawCell(System.Object,DevExpress.XtraGrid.Views.Base.RowCellCustomDrawEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailFreightOtherTaxControl.OnFreightOtherTaxChanged(DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs)">
	<summary>
 A subroutine called when FreightOtherTax changed; overridable, has no methods
 </summary>
	<param name="e">A CellValueChangedEventArgs object</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailFreightOtherTaxControl.gvwFreightOtherTax_CustomDrawCell(System.Object,DevExpress.XtraGrid.Views.Base.RowCellCustomDrawEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailFreightOtherTaxControl.gvwFreightOtherTax_CellValueChanged(System.Object,DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs)">
	<summary>
 Handles the CellValueChanged event of gvwFreightOtherTax; updates the Freight Other Tax grid views and tab pages, and calls UpdateTaxTotal
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A CellValueChangedEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailFreightOtherTaxControl.gvwFreightOtherTax_EndGrouping(System.Object,System.EventArgs)">
	<summary>
 Handles the EndGrouping event of gvwFreightOtherTax; expands all groups of the Freight Other Tax grid view
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailFreightOtherTaxControl.gvwFreightOtherTax_CustomUnboundColumnData(System.Object,DevExpress.XtraGrid.Views.Base.CustomColumnDataEventArgs)">
	<summary>
 Handles the CustomUnboundColumnData event of gvwFreightOtherTax; overridable, has no methods
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A CustomColumnDataEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailFreightOtherTaxControl.gvwFreightOtherTax_FocusedRowChanged(System.Object,DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs)">
	<summary>
 Handles the FocusedRowChanged event of gvwFreightOtherTax; sets the text for the Line Item Tax and Freight Other Tax tab pages, and calls UpdateTaxTotal
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A FocusedRowChangedEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailFreightOtherTaxControl.gvwFreightOtherTax_CustomDrawGroupRow(System.Object,DevExpress.XtraGrid.Views.Base.RowObjectCustomDrawEventArgs)">
	<summary>
 Handles the CustomDrawGroupRow event of gvwFreightOtherTax; draws the text containing item and tax details on the row using CustomDrawGridView
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A RowObjectCustomDrawEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailFreightOtherTaxControl.hypTaxDetailCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Handles the OpenLink event of hypLineTaxDetailCode and hypLineTaxDetailCode; opens the Setup Tax Component form
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An OpenLinkEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailFreightOtherTaxControl.hypTaxDescription_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Handles the OpenLink event of hypLineTaxDescription; opens the Setup Tax Component form
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An OpenLinkEventArgs containing the data for the event</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailFreightOtherTaxControl.rcboAccountCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Handles the OpenLink event of rcboAccountCode and rcboLineAccountCode; opens the Accounting Tools Chart of Account form
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An OpenLinkEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailFreightOtherTaxControl.rcboAccountCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Handles the PopupClose event of rcboAccountCode; assigns the default values to the Account Code column
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="eRow">An RowSelectedEventArgs containing the data for the event</param>
</member><member name="P:Interprise.Presentation.Component.SharedControl.BaseBusinessIntelligenceControl.Caption">
	<summary>
 Get / set the caption of the dashboard control.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseBusinessIntelligenceControl.OnPrint">
	<summary>
 '
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailForm.BaseTaxDetailForm_Closed(System.Object,System.EventArgs)">
	<summary>
 Handles the Closed event of this object; closes the form that this form is on
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A CellValueChangedEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailForm.Dispose(System.Boolean)">
	<summary>
 Overrides System.Windows.Forms.Form.Dispose; disposes of all associated components 
 </summary>
	<param name="disposing">True, to release both managed and unmanaged resources; False, to release only unmanaged resources</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseTaxDetailForm.#ctor">
	<summary>
 Initializes a new instance of the BaseTaxDetailForm class
 </summary>
</member><member name="E:Interprise.Presentation.Component.SharedControl.BaseShipToGeneralControl.IsWithStateChanged">
	<summary>
 Occurs when the state is changed
 </summary>
</member><member name="P:Interprise.Presentation.Component.SharedControl.BaseShipToGeneralControl.ShipToDetailRow">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseShipToGeneralControl.BaseShipToControl_Load(System.Object,System.EventArgs)">
	<summary>
 Handles the Load event of this class; sets the Ship to Code combo control as the active control
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseShipToGeneralControl.cboShipToCode_GotFocus(System.Object,System.EventArgs)">
	<summary>
 Handles the GotFocus event of cboShipToCode; overrridable, has no methods
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseShipToGeneralControl.ControlTelephone_Leave(System.Object,System.EventArgs)">
	<summary>
 Update changes made in the ControlTelephone.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseShipToGeneralControl.ShipToAddressControl_Leave(System.Object,System.EventArgs)">
	<summary>
 Update changes made in the ShipToAddress.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseShipToForm.#ctor">
	<summary>
 Initializes a new instance of the BaseBillToForm class
 </summary>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseShipToControlOld.#ctor">
	<summary>
 Initializes a new instance of the BaseShipToControl class
 </summary>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseShipToControlOld.Dispose(System.Boolean)">
	<summary>
 Overrides System.Windows.Forms.Form.Dispose; disposes of all associated components 
 </summary>
	<param name="disposing">True, to release both managed and unmanaged resources; False, to release only unmanaged resources</param>
</member><member name="E:Interprise.Presentation.Component.SharedControl.BaseShipToControlOld.IsWithStateChanged1">
	<summary>
 Occurs when the state is changed
 </summary>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseShipToControlOld.BaseShipToControl_Load(System.Object,System.EventArgs)">
	<summary>
 Handles the Load event of this class; sets the Ship to Code combo control as the active control
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseShipToControlOld.cboShipToCode_GotFocus(System.Object,System.EventArgs)">
	<summary>
 Handles the GotFocus event of cboShipToCode; overrridable, has no methods
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="E:Interprise.Presentation.Component.SharedControl.BaseShipToControl.IsWithStateChanged">
	<summary>
 Occurs when the state is changed
 </summary>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseShipFromGeneralControl.BaseShipToControl_Load(System.Object,System.EventArgs)">
	<summary>
 Handles the Load event of this class; sets the Ship to Code combo control as the active control
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseShipFromGeneralControl.cboShipToCode_GotFocus(System.Object,System.EventArgs)">
	<summary>
 Handles the GotFocus event of cboShipToCode; overrridable, has no methods
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseShipFromForm.#ctor">
	<summary>
 Initializes a new instance of the BaseBillToForm class
 </summary>
</member><member name="P:Interprise.Presentation.Component.SharedControl.BasePhoneControl.Telephone">
	<summary>
 Gets or sets the telephone number in the Telephone text editor; raises the TelephoneChanged event upon setting
 </summary>
	<value>The telephone number in the Telephone text editor</value>
	<returns>The telephone number in the Telephone text editor</returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.BasePhoneControl.Extension">
	<summary>
 Gets or sets the extension in the Extension text editor; raises the ExtensionChanged event upon setting
 </summary>
	<value>The extension in the Extension text editor</value>
	<returns>The extension in the Extension text editor</returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.BasePhoneControl.IsReadOnly">
	<summary>
 Gets or sets the value indicating if the current control is read only (True) or not (False); the properties of
 TextTelephone and TextExtension is set as read-only if the value given is True and not read-only if False.
 </summary>
	<value>The value indicating if the current control is read only (True) or not (False)</value>
	<returns>The value indicating if the current control is read only (True) or not (False)</returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.BasePhoneControl.Country">
	<summary>
 Gets or sets the country of the given contact; saves the appropriate country phone format 
 and raises the CountryChanged event upon setting
 </summary>
	<value>The country of the given contact</value>
	<returns>The country of the given contact</returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.BasePhoneControl.LabelWidth">
	<summary>
 Gets or sets the width of the label which will display the telephone number
 </summary>
	<value>The width of the label which will display the telephone number</value>
	<returns>The width of the label which will display the telephone number</returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.BasePhoneControl.NumberType">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.BasePhoneControl.CountryPhoneFormat">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BasePhoneControl.#ctor">
	<summary>
 Initializes a new instance of the BasePhoneControl class
 </summary>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BasePhoneControl.BindingCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
	<summary>
 Handles the CollectionChanged event Me.DataBindings; calls IntilizeSettings if a binding was added to the collection
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A CollectionChangeEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BasePhoneControl.IntilizeSettings(System.Windows.Forms.Control,System.Windows.Forms.Binding)">
	<summary>
 Sets the binding and Help text, and calls UpdateUI 
 </summary>
	<param name="editorControl">The control to be initialized</param>
	<param name="bindingElement">The binding element</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BasePhoneControl.IsValueNumeric(System.String)">
	<summary>
	</summary>
	<param name="stringToTest"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BasePhoneControl.TrimEditValue(System.Object)">
	<summary>
	</summary>
	<param name="editValue"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BasePhoneControl.UpdateUI">
	<summary>
 Updates the phone and phone extension labels
 </summary>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BasePhoneControl.phoneNumber_Format(System.Object,System.Windows.Forms.ConvertEventArgs)">
	<summary>
 Handles the Format event of TextTelephone.DataBindings(0); sets the format of the telephone number to the country phone format
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A ConvertEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BasePhoneControlDesigner.Initialize(System.ComponentModel.IComponent)">
	<summary>
 Overrides System.ComponentModel.Design.ComponentDesigner.Initialize; prepares the designer to view, edit and design the specified component
 </summary>
	<param name="component">The component for this designer</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BasePhoneControl.Dispose(System.Boolean)">
	<summary>
 Overrides System.Windows.Forms.Form.Dispose; disposes of all associated components 
 </summary>
	<param name="disposing">True, to release both managed and unmanaged resources; False, to release only unmanaged resources</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseNSFChargeControl.#ctor">
	<summary>
 Initializes a new instance of the BaseNSFChargeControl class
 </summary>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseNSFChargeControl.Dispose(System.Boolean)">
	<summary>
 Overrides System.Windows.Forms.Form.Dispose; disposes of all associated components 
 </summary>
	<param name="disposing">True, to release both managed and unmanaged resources; False, to release only unmanaged resources</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseNSFChargeControl.BaseNSFChargeControl_Load(System.Object,System.EventArgs)">
	<summary>
 Handles the Load event of BaseNSFChargeControl; sets the current date as the value for the date editor
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseNSFChargeControl.SearchComboBankAccount_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Handles the PopupClose event of SearchComboBankAccount; overridable, has no methods
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="eRow">A RowSelectedEventArgs containing the data for the event</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseNotesControl.UpdateValue(System.Object,System.String)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="value"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.BaseNotesControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseNotesControl.FindFacade(System.Windows.Forms.Control)">
	<summary>
	</summary>
	<param name="control"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseNotesControl.IntilizeSettings(System.Windows.Forms.Control,System.Windows.Forms.Control,System.Windows.Forms.Binding)">
	<summary>
	</summary>
	<param name="labelControl"></param>
	<param name="editorControl"></param>
	<param name="bindingElement"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseNotesControl.IntilizeSettings(Interprise.Presentation.Base.ExtendedLayoutControlItem,System.Windows.Forms.Control,System.Windows.Forms.Binding)">
	<summary>
	</summary>
	<param name="labelControl"></param>
	<param name="editorControl"></param>
	<param name="bindingElement"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseNotesControl.Validate">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.BaseItemMatrixEntryControl.GroupDescription">
	<summary>
 Sets the text describing the item group
 </summary>
	<value>The text describing the item group</value>
</member><member name="P:Interprise.Presentation.Component.SharedControl.BaseItemMatrixEntryControl.MatrixBatch">
	<summary>
 Gets or sets the number denoting the batch of the matrix
 </summary>
	<value>The number denoting the batch of the matrix</value>
	<returns>The number denoting the batch of the matrix</returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.BaseItemMatrixEntryControl.MatrixGroup">
	<summary>
 Gets or sets the text representing the command for the hyperlink editor
 </summary>
	<value>The text representing the command for the hyperlink editor</value>
	<returns>The text representing the command for the hyperlink editor</returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.BaseItemMatrixEntryControl.UnitMeasureCode">
	<summary>
 Gets or sets the unit measure code
 </summary>
	<value>The unit measure code</value>
	<returns>The unit measure code</returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.BaseItemMatrixEntryControl.WarehouseCode">
	<summary>
 Gets or sets the warehouse code
 </summary>
	<value>The warehouse code</value>
	<returns>The warehouse code</returns>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseItemMatrixEntryControl.Focus">
	<summary>
 Displays the editor for the focused column and returns the value indicating if the input focus request was successful (True) or not (False)
 </summary>
	<returns>The value indicating if the input focus request was successful (True) or not (False)</returns>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseItemMatrixEntryControl.GetAvailability(System.String,System.String)">
	<summary>
 Returns the number of free stock of an item with the given matrix item code
 </summary>
	<param name="matrixItemCode">The given matrix item code</param>
	<returns>The number of free stock of an item with the given matrix item code</returns>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseItemMatrixEntryControl.BGridViewMatrixQuantity1_CellValueChanged(System.Object,DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs)">
	<summary>
 Handles the CellValueChanged event of BGridViewMatrixQuantity1; overridable, has no methods
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A CellValueChangedEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseItemMatrixEntryControl.BGridViewMatrixQuantity2_CellValueChanged(System.Object,DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs)">
	<summary>
 Handles the CellValueChanged event of BGridViewMatrixQuantity2; overridable, has no methods
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A CellValueChangedEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseItemMatrixEntryControl.bgvwMatrixDiscount_CellValueChanged(System.Object,DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs)">
	<summary>
 Handles the CellValueChanged event of bgvwMatrixDiscount; overridable, has no methods
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A CellValueChangedEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseItemMatrixEntryControl.bgvwMatrixSalesPrice_CellValueChanged(System.Object,DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs)">
	<summary>
 Handles the CellValueChanged event of bgvwMatrixSalesPrice; overridable, has no methods
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A CellValueChangedEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseItemMatrixEntryControl.BGridView_CustomDrawCell(System.Object,DevExpress.XtraGrid.Views.Base.RowCellCustomDrawEventArgs)">
	<summary>
 Handles the CustomDrawCell event of BGridView; colors the cell involved
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A RowCellCustomDrawEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseItemMatrixEntryControl.BGridView_CustomRowCellEdit(System.Object,DevExpress.XtraGrid.Views.Grid.CustomRowCellEditEventArgs)">
	<summary>
 Handles the CustomRowCellEdit event of BGridView; overridable, has no methods
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A CustomRowCellEditEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseItemMatrixEntryControl.BGridViewMatrixQuantity1_EndSorting(System.Object,System.EventArgs)">
	<summary>
 Handles the EndSorting event of BGridViewMatrixQuantity1; assigns the sort order of BGridViewMatrixQuantity2, bgvwMatrixDiscount and bgvwMatrixSalesPrice to
 be the same as that of BGridViewMatrixQuantity1
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseItemMatrixEntryControl.BGridViewMatrixQuantity2_EndSorting(System.Object,System.EventArgs)">
	<summary>
 Handles the EndSorting event of BGridViewMatrixQuantity2; assigns the sort order of BGridViewMatrixQuantity1, bgvwMatrixDiscount and bgvwMatrixSalesPrice to
 be the same as that of BGridViewMatrixQuantity2
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseItemMatrixEntryControl.bgvwMatrixDiscount_EndSorting(System.Object,System.EventArgs)">
	<summary>
 Handles the EndSorting event of bgvwMatrixDiscount; assigns the sort order of BGridViewMatrixQuantity1, BGridViewMatrixQuantity2 and bgvwMatrixSalesPrice to
 be the same as that of bgvwMatrixDiscount
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseItemMatrixEntryControl.bgvwMatrixSalesPrice_EndSorting(System.Object,System.EventArgs)">
	<summary>
 Handles the EndSorting event of bgvwMatrixSalesPrice; assigns the sort order of BGridViewMatrixQuantity1, BGridViewMatrixQuantity2 and bgvwMatrixDiscount to
 be the same as that of bgvwMatrixSalesPrice
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseItemMatrixEntryControl.bgvwMatrixDiscount_ShowingEditor(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Handles the ShowingEditor event of BGridViewMatrixQuantity1, bgvwMatrixDiscount and bgvwMatrixSalesPrice; sets the event to be cancelled
 if the focused column contains String values
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A CancelEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseItemMatrixEntryControl.BaseItemMatrixEntryControl_Load(System.Object,System.EventArgs)">
	<summary>
 Handles the Load event of BaseItemMatrixEntryControl; creates four new grid controls with standard layout and sets the focus on the spin editor
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseItemMatrixEntryControl.HyperlinkMatrixGroup_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Handles the OpenLink event of HyperlinkMatrixGroup; opens the Inventory Find Item form using the Execute function
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An OpenLinkEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseItemMatrixEntryControl.tabMatrix_SelectedPageChanged(System.Object,DevExpress.XtraTab.TabPageChangedEventArgs)">
	<summary>
 Handles the SelectedPageChanged event of tabMatrix; sets the sort order using the appropriate handlers (BGridViewMatrixQuantity1_EndSorting, BGridViewMatrixQuantity2_EndSorting,
 bgvwMatrixSalesPrice_EndSorting, bgvwMatrixDiscount_EndSorting) depending on the selected page's tab index
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A TabPageChangedEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseItemMatrixEntryControl.#ctor">
	<summary>
 Initializes a new instance of the BaseItemMatrixEntryControl class
 </summary>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseItemMatrixEntryControl.Dispose(System.Boolean)">
	<summary>
 Overrides System.Windows.Forms.Form.Dispose; disposes of all associated components 
 </summary>
	<param name="disposing">True, to release both managed and unmanaged resources; False, to release only unmanaged resources</param>
</member><member name="E:Interprise.Presentation.Component.SharedControl.BaseBillToGeneralControl.IsWithStateChanged">
	<summary>
 Occurs when 
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseBillToGeneralControl.BaseBillToControl_Load(System.Object,System.EventArgs)">
	<summary>
 Handles the Load event of BaseBillToControl; sets the active control as the current text editor
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseBillToGeneralControl.ControlTelephone_Leave(System.Object,System.EventArgs)">
	<summary>
 Update changes made in the ControlTelephone.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseBillToGeneralControl.ShipToAddressControl_Leave(System.Object,System.EventArgs)">
	<summary>
 Update changes made in the ShipToAddress.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseBillToForm.#ctor">
	<summary>
 Initializes a new instance of the BaseBillToForm class
 </summary>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseBillToControlOld.#ctor">
	<summary>
 Initializes a new instance of the BaseBillToControl class
 </summary>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseBillToControlOld.Dispose(System.Boolean)">
	<summary>
 Overrides System.Windows.Forms.Form.Dispose; disposes of all associated components 
 </summary>
	<param name="disposing">True, to release both managed and unmanaged resources; False, to release only unmanaged resources</param>
</member><member name="E:Interprise.Presentation.Component.SharedControl.BaseBillToControlOld.IsWithStateChanged">
	<summary>
 Occurs when 
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.BaseBillToControlOld.BaseBillToControl_Load(System.Object,System.EventArgs)">
	<summary>
 Handles the Load event of BaseBillToControl; sets the active control as the current text editor
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AvailabilityControl.Dispose(System.Boolean)">
	<summary>
 Overrides System.Windows.Forms.Form.Dispose; disposes of all associated components 
 </summary>
	<param name="disposing">True, to release both managed and unmanaged resources; False, to release only unmanaged resources</param>
</member><member name="E:Interprise.Presentation.Component.SharedControl.AvailabilityControl.MouseEnter">
	<summary>
 Occurs when the mouse pointer enters the control
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="E:Interprise.Presentation.Component.SharedControl.AvailabilityControl.MouseLeave">
	<summary>
 Occurs when the mouse pointer leaves the control
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="P:Interprise.Presentation.Component.SharedControl.AvailabilityControl.AvailabilityDataset">
	<summary>
 Gets the AvailabilityDatasetGateway object associated with the control
 </summary>
	<value>The AvailabilityDatasetGateway object associated with the control</value>
	<returns>The AvailabilityDatasetGateway object associated with the control</returns>
	<remarks>STRICTLY FOLLOW THE STEPS BELOW IN ORDER TO IMPLEMENT DATASET SHARING
ACCROSS MULTIPLE USER CONTROLS AND/OR WINFORM CONTROLS

NOTE: MAKE SURE YOU HAVE A REFERENCE TO THE FRAMEWORK DATASET COMPONENT IN YOUR TOOLBOX

1.  SWITCH TO DESIGN VIEW OF YOUR PROJECT
2.  ADD AN "AvailabilityDatasetGateway" COMPONENT
3.  IF THIS IS A PUGIN CONTROL, SET THE "Instantiate" PROPERTY TO "False"
4.  IF THIS IS THE MAIN PLUGIN CONTAINER, SET THE "Instantiate" PROPERTY TO "True"
5.  SWITCH TO CODE VIEW OF YOUR PROJECT
6.  ADD THE FF. CODES BELOW AND PLACE IT OUTSIDE THIS FUNCTION

       #Region " Private Variables "
            Private m_availabilityDataset As Interprise.Framework.Base.DatasetGateway.AvailabilityDatasetGateway
        #End Region

        #Region " Properties "
        #Region "AvailabilityDataset"
            Public ReadOnly Property AvailabilityDataset As Interprise.Framework.Base.DatasetGateway.AvailabilityDatasetGateway
                Get
                    Return Me.m_availabilityDataset
                End Get
            End Property
        #End Region
        #End Region</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.AvailabilityControl.IsReadOnly">
	<summary>
 Gets or sets the value indicating if the current control is read only (True) or not (False); disables the current control
 if the value is True and enables the current control if the value is False
 </summary>
	<value>The value indicating if the current control is read only (True) or not (False)</value>
	<returns>The value indicating if the current control is read only (True) or not (False)</returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.AvailabilityControl.SetGridViewForInventory">
	<summary>
 Sets the value indicating if the grid column view values used for inventory will be set (False) or not (True) (???)  
 </summary>
	<value>The value indicating if the grid column view values used for inventory will be set (False) or not (True)</value>
</member><member name="P:Interprise.Presentation.Component.SharedControl.AvailabilityControl.Quantity">
	<summary>
 Property is used to get/set the value of the quantity which is submitted as a parameter on reading the availability information on the database.
 </summary>
	<value>Integer</value>
	<returns></returns>
	<remarks>Value should be assigned a value before a call to read the availability information is made.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.AvailabilityControl.OriginalQuantity">
	<summary>
 Property is used to get/set the value of the quantity which is submitted as a parameter on reading the availability information on the database.
 </summary>
	<value>Integer</value>
	<returns></returns>
	<remarks>Value should be assigned a value before a call to read the availability information is made.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.AvailabilityControl.UMInformation">
	<summary>
 Stores in an object array all of the related UM and it's corresponsing qty for items included in the order
 </summary>
	<value>Array Object</value>
	<returns>Array Object</returns>
	<remarks>Element 0 for UMCode and 1 for UMQty</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AvailabilityControl.#ctor">
	<summary>
 Initializes a new instance of the AvailabilityControl class
 </summary>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AvailabilityControl.MergeAvailability(System.Data.DataTable)">
	<summary>
 Creates an instance of the AvailabilityView class and populates it with identical values from a given DataTable where the column names are the same
 </summary>
	<param name="availabilityTable">The DataTable where the new AvailabilityView instance will get its values from</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AvailabilityControl.LoadGridSettings">
	<summary>
 Sets up the current GridView object; overloads and overrides Interprise.Presentation.Base.BaseControl.LoadGridSettings
 </summary>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AvailabilityControl.BeginLoadDataset(System.String,System.String,System.String,System.String,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
 Reads the data of a current AvailabilityView object onto the current AvailabilityFacade object using a specified command set 
 produced by the given parameters 
 </summary>
	<param name="itemCode">The given item code</param>
	<param name="unitMeasureCode">The given unit measure code</param>
	<param name="warehouseCode">The given warehouse code</param>
	<param name="itemDescription">The description of the item</param>
	<param name="clearTableType">This is a enumeration that determines what tables to clear: 
 None - No tables will be cleared. Specific - Only the tables specified will be cleared. All - All tables will be cleared.</param>
	<remarks>Uses the function Interprise.Facade.Base.BaseFacade.LoadDataSet</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AvailabilityControl.BeginLoadDataSet(System.String,System.String,System.String,System.String,System.AsyncCallback)">
	<summary>
	</summary>
	<param name="itemCode"></param>
	<param name="unitMeasureCode"></param>
	<param name="warehouseCode"></param>
	<param name="itemDescription"></param>
	<param name="callback"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AvailabilityControl.BeginLoadDataset(System.String[][])">
	<summary>
	</summary>
	<param name="commandSset"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AvailabilityControl.BeginLoadDataset(Interprise.Framework.Base.Shared.Structure.AvailabilityParameter[],Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
 Reads the data of a current AvailabilityView object onto the current AvailabilityFacade object using a specified command set 
 produced by the given instance of an AvailabilityParameter structure
 </summary>
	<param name="availabilityParam">The given instance of an AvailabilityParameter structure</param>
	<param name="clearTableType">This is a enumeration that determines what tables to clear: 
 None - No tables will be cleared. Specific - Only the tables specified will be cleared. All - All tables will be cleared.</param>
	<remarks>Uses the function Interprise.Facade.Base.BaseFacade.LoadDataSet</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AvailabilityControl.grdAvailability_Load(System.Object,System.EventArgs)">
	<summary>
 Handles the Load event of grdAvailability; overridable, has no methods
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AvailabilityControl.grdAvailability_MouseEnter(System.Object,System.EventArgs)">
	<summary>
 Handles the MouseEnter event of grdAvailability; raises the MouseEnter event with this class's current instance and an empty EventArgs as parameters
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AvailabilityControl.grdAvailability_MouseLeave(System.Object,System.EventArgs)">
	<summary>
 Handles the MouseLeave event of grdAvailability; raises the MouseLeave event with this class's current instance and an empty EventArgs as parameters
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AvailabilityControl.m_availabilityFacade_WorkCompleted(System.Object,System.Object)">
	<summary>
 Handles the WorkCompleted event of m_availabilityFacade; calls the appropriate LoadDataSet subroutine and displays "Ready" in the status bar of the form
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An object containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AvailabilityControl.rhypLink_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Handles the OpenLink event of rhypLink; opens the appropriate form using the appropriate Execute function
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An OpenLinkEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AvailabilityControl.rhypStockTotals_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Handles the OpenLink event of rhypStockTotals; displays the appropriate dialog box according to the stock detail type in focus
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An OpenLinkEventArgs containing the data for the event</param>
</member><member name="P:Interprise.Presentation.Component.SharedControl.AttachDocumentGeneralControl.IsOpenExistingAttachment">
	<summary>
 Gets or sets the value indicating if the search document code will be set (True) or not (False)
 </summary>
	<value>The value indicating if the search document code will be set (True) or not (False)</value>
	<returns>The value indicating if the search document code will be set (True) or not (False)</returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.AttachDocumentGeneralControl.SearchDocumentCode">
	<summary>
 Gets or sets the document code to be searched
 </summary>
	<value>The document code to be searched</value>
	<returns>The document code to be searched</returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.AttachDocumentGeneralControl.SearchDocumentType">
	<summary>
 Gets or sets the type of the document to be searched; adjusts the combo box edit value accordingly upon setting
 </summary>
	<value>The type of the document to be searched</value>
	<returns>The type of the document to be searched</returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.AttachDocumentGeneralControl.HasSelectedRows">
	<summary>
 Gets the value indicating if there are rows selected in the grid control (True) or not (False)
 </summary>
	<value>The value indicating if there are rows selected in the grid control (True) or not (False)</value>
	<returns>The value indicating if there are rows selected in the grid control (True) or not (False)</returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.AttachDocumentGeneralControl.CurrentDataset">
	<summary>
 Gets the current DataSet for the document
 </summary>
	<value>The current DataSet for the document</value>
	<returns>The current DataSet for the document</returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.AttachDocumentGeneralControl.CurrentFacade">
	<summary>
 Gets the current facade for the document
 </summary>
	<value>The current facade for the document</value>
	<returns>The current facade for the document</returns>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentGeneralControl.#ctor(Interprise.Framework.Base.DatasetComponent.BaseDataset,Interprise.Facade.Base.AttachDocumentFacade,Interprise.Facade.Base.AttachDocumentFacade.enumEntityType)">
	<summary>
 Initializes a new instance of the AttachDocumentControl class
 </summary>
	<param name="entityType">The Enum value for the entity type</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentGeneralControl.SetupCriteriaControls">
	<summary>
 Enables the edit and search fields if SelectedIndex of radioCriteria is set to 1
 </summary>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentGeneralControl.AbortGetThumbnailImage">
	<summary>
 Returns a value indicating that getting a thumbnail image is aborted (False)
 </summary>
	<returns>A value indicating that getting a thumbnail image is aborted (False)</returns>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentGeneralControl.InitializeContextMenu">
	<summary>
 Initializes the context menu for the control
 </summary>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentGeneralControl.InitializeControl">
	<summary>
 Initializes the associated controls
 </summary>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentGeneralControl.InitializeDatasource">
	<summary>
 Initializes the attach document data source 
 </summary>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentGeneralControl.LoadDataset">
	<summary>
 Reads the data of a current AttachDocumentDataset object onto the current AttachDocumentFacade object 
 using a specified command set determined by the values of certain controls; overloads Interprise.Facade.Base.AttachDocumentFacade.LoadDataSet
 </summary>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentGeneralControl.LoadDataSet(System.String,System.Data.DataRow,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
 Reads the data of a current AttachDocumentDataset object onto the current AttachDocumentFacade object using a specified command set;
 overloads Interprise.Facade.Base.AttachDocumentFacade.LoadDataSet
 </summary>
	<param name="documentCode">The given document code</param>
	<param name="row">The specified row of the AttachDocumentDataset table (not used?)</param>
	<param name="clearTableType">This is a enumeration that determines what tables to clear: 
 None - No tables will be cleared. Specific - Only the tables specified will be cleared. All - All tables will be cleared.</param>
	<returns>(no return value?)</returns>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentGeneralControl.ShowAttachMenu(System.Windows.Forms.Control)">
	<summary>
 Displays the context menu of the control
 </summary>
	<param name="button">The control where the context menu will be shown</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentGeneralControl.ShowPanelCriteria(System.Int32)">
	<summary>
 Display the panel specified as the selected index of the associated radio button
 </summary>
	<param name="index">The selected index of the associated radio button</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentGeneralControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Updates the data to the appropriate tables in the AttachDocumentDataset
 </summary>
	<param name="confirm">A value indicating if confirmation will be asked from the user whether to save or cancel saving (True), or if data is automatically saved
 without confirmation (False)</param>
	<param name="clear">A value indicating if all previously saved data will be cleared before saving (True), or if data is saved without affecing previously saved data (False)</param>
	<param name="isUseCache">The value which determines if the saving of the tables should be done in the cache database</param>
	<returns>????</returns>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentGeneralControl.SelectAll(System.Boolean)">
	<summary>
 Selects all text in the control; uses Interprise.Facade.Base.AttachDocumentFacade.SelectAll
 </summary>
	<param name="isSelect">The value which marks if a certain row is selected (True) or not (False)</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentGeneralControl.comboAttachTo_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>
 Handles the SelectIndexChanged event of comboAttachTo; calls UpdateDataSet, InitializeDatasource and LoadDataset
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentGeneralControl.comboFrom_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Handles the PopupClose event of comboFrom; calls UpdateDataSet and LoadDataset
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="eRow">A RowSelectedEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentGeneralControl.comboTo_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Handles the PopupClose event of comboTo; calls UpdateDataSet and LoadDataset
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="eRow">A RowSelectedEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentGeneralControl.BarManagerAttachDocument_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary>
 Handles the ItemClick event of BarManagerAttachDocument; performs appropriate action when the context menus (mnukeyContextAttachDocument and mnukeyContextDeleteSelection) 
 are clicked
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A ItemClickEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentGeneralControl.RadioBooleanCriteria_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>
 Handles the SelectedIndexChanged event of RadioBooleanCriteria; calls UpdateDataSet and LoadDataset
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A RowSelectedEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentGeneralControl.radioCriteria_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>
 Handles the SelectedIndexChanged event of radioCriteria; calls UpdateDataSet, SetupCriteriaControls and LoadDataset
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A RowSelectedEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentGeneralControl.ComboSearchBy_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>
 Handles the SelectedIndexChanged event of ComboSearchBy; initiates the appropriate panel criteria according to the given search field
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A RowSelectedEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentGeneralControl.rhypDocument_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Handles the OpenLink event of rhypDocument; opens the indicated file
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An OpenLinkEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentGeneralControl.viewAttachTo_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
 Handles the MouseDown event of viewAttachTo; displays the popup menu if the right mouse button was clicked
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A MouseEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentGeneralControl.viewDocument_CustomUnboundColumnData(System.Object,DevExpress.XtraGrid.Views.Base.CustomColumnDataEventArgs)">
	<summary>
 Handles the CustomUnboundColumnData event of viewDocument; if the icon column is picked, the icon is saved to CustomColumnDataEventArgs
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A CustomColumnDataEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentGeneralControl.viewDocument_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
 Handles the MouseDown event of viewDocument; displays the popup menu if the right mouse button was clicked
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A MouseEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentGeneralControl.Dispose(System.Boolean)">
	<summary>
 Overrides System.Windows.Forms.Form.Dispose; disposes of all associated components 
 </summary>
	<param name="disposing">True, to release both managed and unmanaged resources; False, to release only unmanaged resources</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentForm.#ctor(Interprise.Facade.Base.AttachDocumentFacade.enumEntityType)">
	<summary>
 Initializes a new instance of the AttachDocumentForm class; creates a new Attach Document control
 </summary>
	<param name="entityType">The entity type of the new Attach Document control</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentForm.LoadData(System.String,System.String)">
	<summary>
 Loads the data of a current AttachDocumentDataset object onto the current AttachDocumentFacade object using the document code
 </summary>
	<param name="documentcode">The given document code</param>
	<param name="documenttype">The type of the document</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentForm.Dispose(System.Boolean)">
	<summary>
 Overrides System.Windows.Forms.Form.Dispose; disposes of all associated components 
 </summary>
	<param name="disposing">True, to release both managed and unmanaged resources; False, to release only unmanaged resources</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.AttachDocumentForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SharedControl.IAttachDocumentInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentControl.#ctor(Interprise.Facade.Base.AttachDocumentFacade.enumEntityType)">
	<summary>
 Initializes a new instance of the AttachDocumentControl class
 </summary>
	<param name="entityType">The Enum value for the entity type</param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.AttachDocumentControl.CurrentDataset">
	<summary>
 Gets the current DataSet for the document
 </summary>
	<value>The current DataSet for the document</value>
	<returns>The current DataSet for the document</returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.AttachDocumentControl.CurrentFacade">
	<summary>
 Gets the current facade for the document
 </summary>
	<value>The current facade for the document</value>
	<returns>The current facade for the document</returns>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentControl.Dispose(System.Boolean)">
	<summary>
 Overrides System.Windows.Forms.Form.Dispose; disposes of all associated components 
 </summary>
	<param name="disposing">True, to release both managed and unmanaged resources; False, to release only unmanaged resources</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AttachDocumentControl.PluginContainerGeneral_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.SharedControl.AttachDocumentControl.PluginContainerGeneralPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SharedControl.IAttachDocumentGeneralInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AccessoryAvailabilityControl.#ctor">
	<summary>
 Initializes a new instance of the AccessoryAvailabilityControl class
 </summary>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AccessoryAvailabilityControl.Dispose(System.Boolean)">
	<summary>
 Overrides System.Windows.Forms.Form.Dispose; disposes of all associated components 
 </summary>
	<param name="disposing">True, to release both managed and unmanaged resources; False, to release only unmanaged resources</param>
</member><member name="E:Interprise.Presentation.Component.SharedControl.AccessoryAvailabilityControl.AddButtonClick">
	<summary>
 Occurs when the Add button is clicked
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="E:Interprise.Presentation.Component.SharedControl.AccessoryAvailabilityControl.MouseEnter">
	<summary>
 Occurs when the mouse pointer enters the control
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="E:Interprise.Presentation.Component.SharedControl.AccessoryAvailabilityControl.MouseLeave">
	<summary>
 Occurs when the mouse pointer leaves the control
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="P:Interprise.Presentation.Component.SharedControl.AccessoryAvailabilityControl.AccessoryAvailabilityDataset">
	<summary>
 Gets the AccessoryAvailabilityDatasetGateway object associated with the control
 </summary>
	<value>The AccessoryAvailabilityDatasetGateway object associated with the control</value>
	<returns>The AccessoryAvailabilityDatasetGateway object associated with the control</returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.AccessoryAvailabilityControl.AccessoryCode">
	<summary>
 Gets the accessory code
 </summary>
	<value>The accessory code</value>
	<returns>The accessory code</returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.AccessoryAvailabilityControl.IsViewOnly">
	<summary>
 Sets the value indicating if a GridColumn is visible (False) or not (True)
 </summary>
	<value>The value indicating if a GridColumn is visible (False) or not (True)</value>
</member><member name="P:Interprise.Presentation.Component.SharedControl.AccessoryAvailabilityControl.UnitMeasureCode">
	<summary>
 Gets the unit measure code
 </summary>
	<value>The unit measure code</value>
	<returns>The unit measure code</returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.AccessoryAvailabilityControl.Quantity">
	<summary>
 Gets the decimal value of the quantity
 </summary>
	<value>The decimal value of the quantity; Nothing, if the quantity is a null value</value>
	<returns>The decimal value of the quantity; Nothing, if the quantity is a null value</returns>
</member><member name="P:Interprise.Presentation.Component.SharedControl.AccessoryAvailabilityControl.WarehouseCode">
	<summary>
 Gets the warehouse code
 </summary>
	<value>The warehouse code</value>
	<returns>The warehouse code</returns>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AccessoryAvailabilityControl.LoadGridSettings">
	<summary>
 Sets up the current GridView object; overloads and overrides Interprise.Presentation.Base.BaseControl.LoadGridSettings
 </summary>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AccessoryAvailabilityControl.ConfigureGrid">
	<summary>
 Sets the quantity and add GridColumns as Visible if the private Boolean variable m_isViewOnly is False; 
 the GridColumns are not visible otherwise
 </summary>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AccessoryAvailabilityControl.LoadDataset(System.String,System.String,System.String)">
	<summary>
 Reads the data of a current AccessoryAvailabilityView object onto the current AccessoryAvailabilityFacade object using a specified command set 
 produced by the given parameters 
 </summary>
	<param name="itemCode">The given item code</param>
	<param name="unitMeasureCode">The given unit measure code</param>
	<param name="warehouseCode">The given warehouse code</param>
	<remarks>Uses the function Interprise.Facade.Base.BaseFacade.LoadDataSet</remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AccessoryAvailabilityControl.LoadDataset(System.String,System.String,System.String,System.String)">
	<summary>
	</summary>
	<param name="itemCode"></param>
	<param name="unitMeasureCode"></param>
	<param name="warehouseCode"></param>
	<param name="currencyCode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AccessoryAvailabilityControl.ButtonEditAdd_Click(System.Object,System.EventArgs)">
	<summary>
 Handles the Click event of ButtonEditAdd; raises the event AddButtonClick with this class's current instance and an empty EventArgs as parameters
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AccessoryAvailabilityControl.grdAccessories_Load(System.Object,System.EventArgs)">
	<summary>
 Handles the Load event of grdAccessories; calls ConfigureGrid
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AccessoryAvailabilityControl.gvwAccessories_EndGrouping(System.Object,System.EventArgs)">
	<summary>
 Handles the EndGrouping event of gvwAccessories; expands all group rows in the gvwAccessories GridView
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AccessoryAvailabilityControl.grdAccessories_MouseEnter(System.Object,System.EventArgs)">
	<summary>
 Handles the MouseEnter event of grdAccessories; raises the event MouseEnter with this class's current instance and an empty EventArgs as parameters
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AccessoryAvailabilityControl.grdAccessories_MouseLeave(System.Object,System.EventArgs)">
	<summary>
 Handles the MouseLeave event of grdAccessories; raises the event MouseLeave with this class's current instance and an empty EventArgs as parameters
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An EventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AccessoryAvailabilityControl.rhypAccessory_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Handles the OpenLink event of rhypLink; displays the Item Detail form
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">An OpenLinkEventArgs containing the data for the event</param>
</member><member name="M:Interprise.Presentation.Component.SharedControl.AccessoryAvailabilityControl.grdAccessories_ProcessGridKey(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
 Handles the ProcessGridKey event of grdAccessories; activates an editor for the focused row cell if the Enter key is pressed
 </summary>
	<param name="sender">The source that raised the event</param>
	<param name="e">A KeyEventArgs containing the data for the event</param>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources._16px_AddUserLog">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources._16px_ApproveJobPlan">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources._16px_DuplicateActivity">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources._16px_EditLegend">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources._16px_EventLog">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources._16px_ManageJobPlanExcception">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources._16px_ManageJobsCalendarView">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources._16px_PurgeLog">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources._16px_ResetReportsToDefault">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources._16px_ShowAll">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources._16px_TestPlugin">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources._16px_ViewJobPlanInCalendar">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources._16TimelineLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources._next">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources._Option">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.AccountingViewJournalSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.AddUserLog">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.ApproveJobPlan">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.ArrowDown12px">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.ArrowDownCenter9px">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.AssignAllLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.AssignAllSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.AssignNoneLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.AssignNoneSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.attach">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.attach_docs">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.AttachFileFromDocumentManagmentSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.AttachFromCRMDocumentManagerLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.AttachFromCRMDocumentManagerSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.AttachFromThisComputerLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.AttachFromThisComputerSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.AttachmentLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.AttachmentSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.auto_preview">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.BouncedEmailSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.CallBackSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.CallSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.Cancel">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.cancelled">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.CancelSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.CB_Upgrade__dark">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.CheckNamesEmailSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.CheckOnly">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.ClearPasswordSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.Close">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.Close12px">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.CloseSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.completed">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.completed_successfully">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.completed_with_error">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.Copy">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.CopyPopupLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.Create_CallBack">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.create_new_email">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.CRMNewActivityLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.CRMNewActivitySmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.CRMNewCaseLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.CRMNewCaseSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.CRMNewContactLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.CRMNewContactSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.CRMNewDocumentSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.CRMNewNoteLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.CRMNewNoteSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.CRMNewOpportunityLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.CRMNewOpportunitySmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.CRMWriteEmailSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.CustomerNewInvoiceLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.CustomerNewInvoiceSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.CustomerNewSalesOrderLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.CustomerNewSalesOrderSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.day_1">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.DeleteAllSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.DeleteSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.Display_email_by">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.down">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.Duplicate_Activity">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.DuplicateActivity">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.EditLegend">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.Email_Account">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.EmailAccountLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.EmailAccountSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.EmailAddressBookSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.EmailAttachmentSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.EmailExclamationPointSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.EmailFaxSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.EmailForwardSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.EventLog">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.expand">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.failed_to_execute">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.Fax">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.FaxDirectorySmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.FindSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.gantt">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.group_by">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.HelpSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.HideToolbar_16px">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.HideToolbar_32px">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.High">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.HighImportanceLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.HighImportanceSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.HTML">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.HTMLFormatLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.HTMLFormatSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.HTTP40px">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.IMAP40px">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.ImportDataLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.ImportDataSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.Info">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.inprogress">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.left">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.list">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.LowImportanceLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.LowImportanceSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.mail_delete">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.Mail_Forward">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.Manage_Job_Plan">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.ManageJobPlanExcception">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.ManageJobsCalendarView">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.Mark_as_read">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.Message_accounts">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.move_to_folder">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.MoveDownLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.MoveDownSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.MoveLeftAllMedium">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.MoveLeftLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.MoveLeftNewSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.MoveLeftSelectedMedium">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.MoveRightLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.MoveRightNewSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.MoveRightSelectedMedium">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.MoveUpLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.MoveUpSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.New_Activity">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.New_Apportunity">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.new_approve_job_plan">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.New_blue">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.New_Case">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.New_Contact">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.New_Documents">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.new_event_log">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.New_Invoice">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.new_job_plan">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.New_Mail">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.New_mail_message">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.New_Note">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.New_Quote">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.new_reply_to_all">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.New_Sales_Order">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.NewEmailSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.NewFaxLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.NewFaxSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.NewLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.NewMailMessageLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.NewMailMessageSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.NewSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.not_execute">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.notyet_approve">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.OK">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.OKSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.on_que">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.Open_logs_folder">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.Open_selected_mail">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.OpenedEmailSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.PageSetupSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.Plain_Text">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.POP3">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.PrintPreviewSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.PrintSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.purge_log">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.PurgeLog">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.reading_pane">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.reasign">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.ReassignLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.Refresh">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.RefreshLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.RefreshSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.Reply">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.ReplySmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.reset">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.ResetFile">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.right">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.save_message">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.SaveAndCloseLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.SaveAndCloseSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.SaveAndNewSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.SaveEmailLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.SaveEmailSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.SaveLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.SaveSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.select_all">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.select_all_mail">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.select_none">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.SelectAllLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.SelectAllSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.SelectNoneLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.SelectNoneSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.Send">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.send_as_private">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.Send_Recieve">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.SendAllSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.SendAsPrivateLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.SendAsPrivateSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.SendEmailSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.SendLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.SendSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.Show_all">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.Show_Document_ToolBar">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.Show_meeting">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.ShowAll">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.ShowMeetingLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.ShowMeetingSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.ShowToolbar_16px">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.ShowToolbar_32px">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.signature_male">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.test">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.TestPlugin">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.today">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.TodoSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.TXTFormatLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.TXTFormatSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.UndoSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.UnreadEmailSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.up">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.View_Journal">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.ViewJobPlanInCalendar">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.Viewlogx16">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.ViewLogx32">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.Voucher">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.week">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.work_month">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.work_week">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.Write_letter">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.ZoomInSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Component.My.Resources.Resources.ZoomOutSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="T:Interprise.Presentation.Component.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="M:Interprise.Presentation.Component.MenuActionAttribute.#ctor(Interprise.Framework.Base.Shared.Enum.MenuAction.MenuAccounting)">
	<summary>
 Create instance of this class.
 </summary>
	<param name="action">Indicates action or usage to be performed by the class.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.MenuActionAttribute.#ctor(Interprise.Framework.Base.Shared.Enum.MenuAction.MenuAssetManager)">
	<summary>
 Create instance of this class.
 </summary>
	<param name="action">Indicates action or usage to be performed by the class.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.MenuActionAttribute.#ctor(Interprise.Framework.Base.Shared.Enum.MenuAction.MenuBanking)">
	<summary>
 Create instance of this class.
 </summary>
	<param name="action">Indicates action or usage to be performed by the class.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.MenuActionAttribute.#ctor(Interprise.Framework.Base.Shared.Enum.MenuAction.MenuCRM)">
	<summary>
 Create instance of this class.
 </summary>
	<param name="action">Indicates action or usage to be performed by the class.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.MenuActionAttribute.#ctor(Interprise.Framework.Base.Shared.Enum.MenuAction.MenuCustomer)">
	<summary>
 Create instance of this class.
 </summary>
	<param name="action">Indicates action or usage to be performed by the class.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.MenuActionAttribute.#ctor(Interprise.Framework.Base.Shared.Enum.MenuAction.MenueCommerce)">
	<summary>
 Create instance of this class.
 </summary>
	<param name="action">Indicates action or usage to be performed by the class.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.MenuActionAttribute.#ctor(Interprise.Framework.Base.Shared.Enum.MenuAction.MenuSupplier)">
	<summary>
 Create instance of this class.
 </summary>
	<param name="action">Indicates action or usage to be performed by the class.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.MenuActionAttribute.#ctor(Interprise.Framework.Base.Shared.Enum.MenuAction.MenuSystemManager)">
	<summary>
 Create instance of this class.
 </summary>
	<param name="action">Indicates action or usage to be performed by the class.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.Wizard.MainForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.Wizard.MainForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.JobScheduler.Wizard.IJobSchedulerWizardInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.Wizard.MainControl.CurrentDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.Wizard.MainControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.Wizard.MainControl.EndCurrentEdit(System.String[])">
	<summary>
	</summary>
	<param name="relatedTables"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.Wizard.MainControl.BeginGenerateJobQueue">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.Wizard.MainControl.CloseProgressForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.Wizard.MainControl.GenerateJobQueue">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.Wizard.MainControl.GenerateJobQueueCompleted(System.IAsyncResult)">
	<summary>
	</summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.Wizard.MainControl.SetControlDataBindings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.Wizard.MainControl.ShowProgressForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.Wizard.MainControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.Wizard.MainControl.OnWizardFinished">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.Wizard.MainControl.PluginContainerControlTrigger_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.Wizard.MainControl.PluginContainerControlTriggerPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.JobScheduler.Wizard.ITriggerInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.Wizard.MainControl.PluginContainerControlAction_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.Wizard.MainControl.PluginContainerControlActionPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.JobScheduler.JobPlan.IActionInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.Wizard.MainControl.PluginContainerControlPlanDependency_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.Wizard.MainControl.PluginContainerControlPlanDependencyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.JobScheduler.JobPlan.IDependencyInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.Wizard.TriggerControl.CurrentDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.Wizard.TriggerControl.AddData(System.String)">
	<summary>
	</summary>
	<param name="documentCode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.Wizard.TriggerControl.CheckEditDays_Changed">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.Wizard.TriggerControl.CheckEditAllDays_Changed">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.Wizard.TriggerControl.EnableDisableControls(System.Boolean)">
	<summary>
	</summary>
	<param name="isReadOnly"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.Wizard.TriggerControl.EndCurrentEdit(System.String[])">
	<summary>
	</summary>
	<param name="relatedTables"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.Wizard.TriggerControl.RadioGroupInterval_Changed">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.Wizard.TriggerControl.SetControlDataBindings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.Wizard.TriggerControl.UndoChanges">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.Wizard.TriggerControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.Wizard.TriggerControl.CheckEditDays_Checked(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.Wizard.TriggerControl.CheckEditAllDays_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.Wizard.TriggerControl.RadioGroupInterval_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.MainForm.CurrentViewType">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.MainForm.InitializeControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.MainForm.PanelBodyPluginInstance_JobPlanChanged(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.MainForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.MainForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.JobScheduler.IMainInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.MainControl.CurrentViewType">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.MainControl.CurrentDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.MainControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.MainControl.ApproveJobPlan">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.MainControl.DeleteData">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.MainControl.LoadDataSet(System.String,System.Data.DataRow,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
	</summary>
	<param name="documentCode"></param>
	<param name="row"></param>
	<param name="clearTableType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.MainControl.MoveDown">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.MainControl.MoveLeft">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.MainControl.MoveRight">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.MainControl.MoveUp">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.MainControl.RefreshCalendar">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.MainControl.ShowHideControls(Interprise.Framework.Base.Shared.Enum.JobSchedulerViewType)">
	<summary>
	</summary>
	<param name="viewType"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.MainControl.ShowNewForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.MainControl.SwitchCalendarView(Interprise.Framework.Base.Shared.Enum.JobCalendarView,Interprise.Framework.Base.Shared.Enum.JobGanttViewType)">
	<summary>
	</summary>
	<param name="viewType"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.MainControl.UndoChanges">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.MainControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.MainControl.m_jobSchedulerFacade_InvalidatedOnSaving(System.Object,System.String)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="errorMessage"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.MainControl.PluginContainerControlGeneralPluginInstance_JobPlanChanged(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.MainControl.TabbedControlGroupMain_SelectedPageChanged(System.Object,DevExpress.XtraLayout.LayoutTabPageChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.MainControl.TabbedControlGroupMain_SelectedPageChanging(System.Object,DevExpress.XtraLayout.LayoutTabPageChangingEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.MainControl.PluginContainerControlCalendar_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.MainControl.PluginContainerControlCalendarPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.JobScheduler.ICalendarInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.Legend.LegendPreferenceForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.Legend.LegendPreferenceForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.JobScheduler.Legend.ILegendPreferenceInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.Legend.LegendPreferenceControl.CurrentDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.Legend.LegendPreferenceControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.Legend.LegendPreferenceControl.LoadDataset">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.Legend.LegendPreferenceControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.ActiveTreeListName">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.JobSchedulerDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.JobSchedulerFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.AddAllSelectedJobItem">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.AddContextMenuItem(System.String,System.String)">
	<summary>
	</summary>
	<param name="jobOccurrenceCode"></param>
	<param name="verb"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.AddSelectedJobItem(DevExpress.XtraTreeList.Nodes.TreeListNode)">
	<summary>
	</summary>
	<param name="selectedNode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.BarItemClick(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.CloseAndUpdateEditor(System.Boolean)">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.EndCurrentEdit(System.String[])">
	<summary>
	</summary>
	<param name="relatedTables"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.InitializeControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.LoadDataset">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.ManageTreeListActionEvents(System.Boolean)">
	<summary>
	</summary>
	<param name="add"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.ManageTreeListSelectedJobItemsEvents(System.Boolean)">
	<summary>
	</summary>
	<param name="add"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.MoveAllSelectedToLeft">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.MoveAllSelectedToRight">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.MoveSelectedToLeft">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.MoveSelectedToRight">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.MoveDown">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.MoveLeft">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.MoveRight">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.MoveUp">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.OnGridViewParametersCustomRowCellEdit(System.Object,DevExpress.XtraGrid.Views.Grid.CustomRowCellEditEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.OnPopupMenuContextBeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.OnSimpleButtonMoveAllToRightClick(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.OnSimpleButtonMoveRightClick(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.OnSimpleButtonMoveLeftClick(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.OnSimpleButtonMoveAllToLeftClick(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.OnTreeListActionDoubleClick(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.OnTreeListActionDragDrop(System.Object,System.Windows.Forms.DragEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.OnTreeListActionDragOver(System.Object,System.Windows.Forms.DragEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.OnTreeListActionEditorKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.OnTreeListActionFocusedNodeChanged(System.Object,DevExpress.XtraTreeList.FocusedNodeChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.OnTreeListActionKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.OnTreeListSelectedJobItemsAfterDragNode(System.Object,DevExpress.XtraTreeList.NodeEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.OnTreeListSelectedJobItemsBeforeFocusNode(System.Object,DevExpress.XtraTreeList.BeforeFocusNodeEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.OnTreeListSelectedJobItemsDoubleClick(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.OnTreeListSelectedJobItemsDragDrop(System.Object,System.Windows.Forms.DragEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.OnTreeListSelectedJobItemsDragOver(System.Object,System.Windows.Forms.DragEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.OnTreeListSelectedJobItemsEditorKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.OnTreeListSelectedJobItemsFocusNode(System.Object,DevExpress.XtraTreeList.FocusedNodeChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.OnTreeListSelectedJobItemsKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.OnTreeListSelectedJobItemsMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.PopulateContextMenu">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.PopulateJobItemTreeList">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.RemoveAllSelectedJobItem">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.RemoveContextItem(Interprise.Framework.Base.DatasetComponent.JobSchedulerDataset.SystemJobPlanDetailRow)">
	<summary>
	</summary>
	<param name="jobOccurrenceRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.RemoveContextItem">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.RemoveSelectedJobItem(DevExpress.XtraTreeList.Nodes.TreeListNode)">
	<summary>
	</summary>
	<param name="selectedNode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.RenameJobItemDescription">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.ShowPluginForm(System.String)">
	<summary>
	</summary>
	<param name="jobOccurrenceCode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.UndoChanges">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.UpdateJobItemInputParameter(System.Data.DataRowView)">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.UpdateTreesListActionFocusedNode(System.Boolean)">
	<summary>
	</summary>
	<param name="updateDatabase"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.UpdateTreeListSelectedJobItemsFocusedNode(System.Boolean)">
	<summary>
	</summary>
	<param name="updateDatabase"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.UpdateJobItemDescription(DevExpress.XtraTreeList.TreeList,System.Boolean)">
	<summary>
	</summary>
	<param name="treeList"></param>
	<param name="updateDatabase"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.BarItem_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.GridViewParameters_CustomRowCellEdit(System.Object,DevExpress.XtraGrid.Views.Grid.CustomRowCellEditEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.PopupMenuContext_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.SimpleButtonMoveAllToRight_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.SimpleButtonMoveRight_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.SimpleButtonMoveLeft_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.SimpleButtonMoveAllToLeft_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.TreeListAction_DoubleClick(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.TreeListAction_DragDrop(System.Object,System.Windows.Forms.DragEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.TreeListAction_DragOver(System.Object,System.Windows.Forms.DragEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.TreeListAction_EditorKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.TreeListAction_FocusedNodeChanged(System.Object,DevExpress.XtraTreeList.FocusedNodeChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.TreeListAction_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.TreeListAction_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.TreeListSelectedJobItems_AfterDragNode(System.Object,DevExpress.XtraTreeList.NodeEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.TreeListSelectedJobItems_BeforeFocusNode(System.Object,DevExpress.XtraTreeList.BeforeFocusNodeEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.TreeListSelectedJobItems_DoubleClick(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.TreeListSelectedJobItems_DragDrop(System.Object,System.Windows.Forms.DragEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.TreeListSelectedJobItems_DragOver(System.Object,System.Windows.Forms.DragEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.TreeListSelectedJobItems_EditorKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.TreeListSelectedJobItems_FocusedNodeChanged(System.Object,DevExpress.XtraTreeList.FocusedNodeChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.TreeListSelectedJobItems_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.JobActionControl.TreeListSelectedJobItems_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="E:Interprise.Presentation.Component.JobScheduler.JobPlan.GeneralControl.JobPlanChanged">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.JobPlan.GeneralControl.CurrentDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.GeneralControl.AddData(System.String)">
	<summary>
	</summary>
	<param name="documentCode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.GeneralControl.CheckEditDays_Changed">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.GeneralControl.CheckEditAllDays_Changed">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.GeneralControl.EnableDisableControls(System.Boolean)">
	<summary>
	</summary>
	<param name="isReadOnly"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.GeneralControl.EndCurrentEdit(System.String[])">
	<summary>
	</summary>
	<param name="relatedTables"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.GeneralControl.OnSelectedJobPlan(System.String)">
	<summary>
	</summary>
	<param name="jobPlanCode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.GeneralControl.RadioGroupInterval_Changed">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.GeneralControl.SetControlDataBindings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.GeneralControl.UndoChanges">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.GeneralControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.GeneralControl.CheckEditDays_Checked(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.GeneralControl.CheckEditAllDays_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.GeneralControl.SpinEditThreshold_EditValueChanged(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.GeneralControl.SearchComboJobPlan_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.GeneralControl.RadioGroupInterval_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.GeneralControl.CheckEditIsActive_EditValueChanging(System.Object,DevExpress.XtraEditors.Controls.ChangingEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.DependencyControl.LoadGridSettings">
	<summary> Method use to loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.DependencyControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.DependencyControl.m_jobSchedulerFacade_InvalidatedOnSaving(System.Object,System.String)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="errorMessage"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.DependencyControl.repHyperlinkSearchComboDepedencyCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlan.DependencyControl.repHyperlinkSearchComboDepedencyCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlanForm.InitializeControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlanForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.JobPlanForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.JobScheduler.IJobPlanListInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.JobPlanControl.CurrentDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.JobPlanControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlanControl.ApproveJobPlan">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlanControl.DeleteData">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlanControl.BeginGenerateJobQueue">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlanControl.CloseProgressForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlanControl.GenerateJobQueue">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlanControl.GenerateJobQueueCompleted(System.IAsyncResult)">
	<summary>
	</summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlanControl.MoveDown">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlanControl.MoveLeft">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlanControl.MoveRight">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlanControl.MoveUp">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlanControl.ShowProgressForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlanControl.UndoChanges">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlanControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlanControl.PluginContainerBaseDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.JobPlanControl.PluginContainerBaseDetailPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.JobScheduler.JobPlan.IGeneralInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlanControl.PluginContainerControlAction_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.JobPlanControl.PluginContainerControlActionPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.JobScheduler.JobPlan.IActionInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobPlanControl.PluginContainerControlDependecy_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.JobPlanControl.PluginContainerControlDependecyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.JobScheduler.JobPlan.IDependencyInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobItem.MainForm.AddNewJobItemRow(Interprise.Framework.Base.Shared.Structure.JobItem)">
	<summary>
	</summary>
	<param name="jobItem"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobItem.MainForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.JobItem.MainForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.JobScheduler.JobItem.IMainInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.JobItem.MainControl.CurrentDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.JobItem.MainControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.JobItem.MainControl.JobSchedulerDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobItem.MainControl.AddData(Interprise.Framework.Base.Shared.Structure.JobItem)">
	<summary>
	</summary>
	<param name="jobItem"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobItem.MainControl.DeleteData">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobItem.MainControl.EnableDisableControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobItem.MainControl.LoadDataSet(System.String,System.Data.DataRow,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
	</summary>
	<param name="documentCode"></param>
	<param name="row"></param>
	<param name="clearTableType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobItem.MainControl.UndoChanges">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobItem.MainControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobItem.MainControl.PluginContainerControlScheduler_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.JobItem.MainControl.PluginContainerControlSchedulerPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.Generic.IBaseFormSectionInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobItem.MainControl.PluginContainerControlAction_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.JobItem.MainControl.PluginContainerControlActionPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.JobScheduler.JobItem.IActionInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobItem.ActionControl.AddDataBinding(DevExpress.XtraEditors.BaseEdit,System.String)">
	<summary>
	</summary>
	<param name="baseEdit"></param>
	<param name="columnName"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobItem.ActionControl.SetControlDataBindings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobItem.ActionControl.UndoChanges">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.JobItem.ActionControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.ExceptionForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.ExceptionForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.JobScheduler.IExceptionInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.ExceptionControl.LoadGridSettings">
	<summary> Method use to loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.ExceptionControl.LoadDataSet(System.String,System.Data.DataRow,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
	</summary>
	<param name="documentCode"></param>
	<param name="row"></param>
	<param name="clearTableType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.ExceptionControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.EventLog.PurgeLogForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.EventLog.PurgeLogForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.JobScheduler.EventLog.IEventLogInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.EventLog.PurgeLogControl.PluginContainerControlPurgeLog_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.EventLog.PurgeLogControl.PluginContainerControlPurgeLogPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.JobScheduler.EventLog.IEventLogInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.EventLog.EventLogForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.EventLog.EventLogForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.JobScheduler.EventLog.IEventLogInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.EventLog.EventLogControl.PluginContainerBaseDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.JobScheduler.EventLog.EventLogControl.PluginContainerBaseDetailPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.JobScheduler.EventLog.IEventLogInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.CalendarControl.AddCancelContextMenu(DevExpress.XtraScheduler.SchedulerPopupMenu,System.Drawing.Image,System.Boolean)">
	<summary>
	</summary>
	<param name="popupMenu"></param>
	<param name="image"></param>
	<param name="beginGroup"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.CalendarControl.AddShowNotesContextMenu(DevExpress.XtraScheduler.SchedulerPopupMenu,System.Drawing.Image,System.Boolean)">
	<summary>
	</summary>
	<param name="popupMenu"></param>
	<param name="image"></param>
	<param name="beginGroup"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.CalendarControl.AddContextMenu(DevExpress.XtraScheduler.SchedulerPopupMenu,System.String,System.Drawing.Image,System.Boolean)">
	<summary>
	</summary>
	<param name="popupMenu"></param>
	<param name="tagName"></param>
	<param name="image"></param>
	<param name="beginGroup"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.CalendarControl.CancelExecutionPerQueue(DevExpress.XtraScheduler.Appointment)">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.CalendarControl.CancelExecution(DevExpress.XtraScheduler.Appointment)">
	<summary>
	</summary>
	<param name="appointment"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.CalendarControl.FindContextMenuItem(DevExpress.XtraScheduler.SchedulerPopupMenu,System.String)">
	<summary>
	</summary>
	<param name="popupMenu"></param>
	<param name="tag"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.CalendarControl.OnPopupMenuShowing(System.Object,DevExpress.XtraScheduler.PopupMenuShowingEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.CalendarControl.ShowHideCancelButtonContextMenu(DevExpress.Utils.Menu.DXMenuItem,DevExpress.XtraScheduler.SchedulerControl)">
	<summary>
	</summary>
	<param name="contextMenuItem"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.CalendarControl.ShowHideShowNotesButtonContextMenu(DevExpress.Utils.Menu.DXMenuItem,DevExpress.XtraScheduler.SchedulerControl)">
	<summary>
	</summary>
	<param name="contextMenuItem"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.CalendarControl.CancelButton_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobScheduler.CalendarControl.ShowNotesButton_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.JobItemLog.ViewlogMainControl.PluginContainerControl1_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.JobItemLog.ViewlogMainControl.PluginContainerControl1PluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.JobItemLog.IViewLogDetailInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.JobItemLog.ViewlogForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.JobItemLog.ViewlogForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.JobItemLog.IViewLogMainInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.HelpManager.HelpViewerForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.HelpManager.HelpViewerForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.HelpManager.IDashboardInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.HelpManager.HelpManagerForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.HelpManager.HelpManagerForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.HelpManager.IHelpManagerControl</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.HelpManager.HelpManagerControl.PluginContainerTopics_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.HelpManager.HelpManagerControl.PluginContainerTopicsPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.HelpManager.ITopicListcontrol</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.HelpManager.HelpManagerControl.PluginContainerHelpContent_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.HelpManager.HelpManagerControl.PluginContainerHelpContentPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.Generic.IBaseFormSectionInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.HelpManager.HelpManagerControl.PluginContainerDefaultContent_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.HelpManager.HelpManagerControl.PluginContainerCustomContent_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.HelpManager.DashboardControl.PluginContainerContent_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.HelpManager.DashboardControl.PluginContainerContentPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.ICRMBodyInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.HelpManager.DashboardControl.PluginContainerTopics_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.HelpManager.DashboardControl.PluginContainerTopicsPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.HelpManager.ITopicListcontrol</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CustomTable.MainForm.ControlStyle">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CustomTable.MainForm.TableName">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CustomTable.MainControl.ControlStyle">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CustomTable.MainControl.CurrentDataset">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CustomTable.MainControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CustomTable.MainControl.Tablename">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CustomTable.MainControl.AddData(System.String)">
	<summary>
	</summary>
	<param name="documentCode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CustomTable.MainControl.InitializeRepositoryEditor">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CustomTable.MainControl.InitializeControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CustomTable.MainControl.UndoChanges">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CustomTable.MainControl.LoadDataset(System.String)">
	<summary>
	</summary>
	<param name="documentCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CustomTable.MainControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CustomTable.MainControl.PluginContainerBaseDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CustomTable.MainControl.PluginContainerBaseDetailPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SharedControl.ICustomFieldInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.WaveActivity.TargetListControl.NewFileNames">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.WaveActivity.TargetListControl.CurrentExportType">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.WaveActivity.TargetListControl.CurrentFilePath">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.WaveActivity.TargetListControl.AssignDatasource">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.WaveActivity.TargetListControl.BaseControl_Disposed(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.WaveActivity.TargetListControl.WorkSheet">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.WaveActivity.TargetListControl.ExportImportTransactionType">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.WaveActivity.TargetListControl.ExportCompleted(System.IAsyncResult)">
	<summary>
	</summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.WaveActivity.TargetListControl.CloseProgressForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.WaveActivity.TargetListControl.ShowProgressForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Reminder.ReminderListControl.SetReminderInfo(System.Boolean,System.Data.DataRowView)">
	<summary>
 Sets the reminder info based on the settings set by end user 
 </summary>
	<param name="p_setReminder"></param>
	<param name="p_currentRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Reminder.ReminderForm.GetReminderListControl(System.Data.DataTable,Interprise.Framework.Base.Shared.Enum.CRMReminderType,Interprise.Extendable.Base.Presentation.CRM.Reminder.IReminderListInterface)">
	<summary>
	</summary>
	<param name="p_dataSource"></param>
	<param name="p_reminderType"></param>
	<param name="plugin"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Reminder.ReminderForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Reminder.ReminderForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Reminder.IReminderListInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Preference.ServiceLevelControl.IsReadOnly">
	<summary>
 Method use to in the new company wizard to enable disable control
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Preference.PreferenceControl.CurrentDataset">
	<summary>
	</summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Preference.PreferenceControl.CurrentFacade">
	<summary>
	</summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Preference.PreferenceControl.IsReadOnly">
	<summary>
 Method use to in the new company wizard to enable disable control
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Preference.PreferenceControl.LoadDataset">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Preference.PreferenceControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Preference.PreferenceControl.InitializePreference">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Preference.PreferenceControl.PluginContainerActivity_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Preference.PreferenceControl.PluginContainerCase_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Preference.PreferenceControl.PluginContainerOpportunity_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Preference.PreferenceControl.PluginContainerWave_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Preference.PreferenceControl.PluginContainerSLA_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Preference.OpportunityControl.IsReadOnly">
	<summary>
 Method use to in the new company wizard to enable disable control
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Preference.PreferenceForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Preference.PreferenceForm.PanelBodyInitializePluginInstance">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Preference.CaseControl.IsReadOnly">
	<summary>
 Method use to in the new company wizard to enable disable control
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Preference.CampaignWaveControl.IsReadOnly">
	<summary>
 Method use to in the new company wizard to enable disable control
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Preference.CalendarDashboardControl.IsReadOnly">
	<summary>
 Method use to in the new company wizard to enable disable control
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Note.NoteForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Note.NoteForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Note.INoteInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Note.NoteControl.EntityCode">
	<summary> Gets the current Entity Code </summary>
	<value> String </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Note.NoteControl.PluginContainerDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Note.NoteControl.PluginContainerDetailPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.ICRMBodyInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Note.NoteControl.PluginContainerHeader_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Note.NoteControl.PluginContainerHeaderPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Note.IHeaderInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Note.ListControl.EndLoadDataSet(System.IAsyncResult)">
	<summary>
	</summary>
	<param name="result"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Note.ListControl.FinalizeLoadDataset">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Note.HeaderControl.EntityCode">
	<summary> Gets the current Entity Code </summary>
	<value> String </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Document.ListForm.InitializeControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Document.ListForm.GetMainControl(Interprise.Extendable.Base.Presentation.CRM.Document.IListInterface)">
	<summary>
	</summary>
	<param name="plugin"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Document.ListForm.GetDocumentControl(Interprise.Extendable.Base.Presentation.CRM.Document.IListInterface)">
	<summary>
	</summary>
	<param name="plugin"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Document.AttachDocumentControl.GetDocumentListControl(Interprise.Extendable.Base.Presentation.CRM.Document.IListInterface)">
	<summary>
	</summary>
	<param name="plugin"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Contact.RelatedContactControl.EmailAdress">
	<summary>
 Gets the email address of the current selected contact
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Contact.RelatedContactControl.BusinessFax">
	<summary>
 Gets the business fax of the current selected contact
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Contact.RelatedContactControl.Country">
	<summary>
 Gets or sets the country of the given contact; saves the appropriate country phone format 
 and raises the CountryChanged event upon setting
 </summary>
	<value>The country of the given contact</value>
	<returns>The country of the given contact</returns>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.RelatedContactControl.EndLoadDataSet(System.IAsyncResult)">
	<summary>
	</summary>
	<param name="result"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.RelatedContactControl.FinalizeLoadDataset">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.RelatedContactControl.RelationDetailRows(System.String,System.String,System.String)">
	<summary>
 Function that returns the contact's information to be added in the relation table.
 </summary>
	<param name="parentCode">Define which contacts to return filtered by the document code</param>
	<param name="relationType">Defines what type of relationship the calling class is. </param>
	<returns>System.Object</returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Contact.RelatedContactControl.CountryPhoneFormat">
	<summary>
 Formats the business phone according to country
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.RelatedContactControl.TrimEditValue(System.Object)">
	<summary>
	</summary>
	<param name="editValue"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.RelatedContactControl.IsValueNumeric(System.String)">
	<summary>
	</summary>
	<param name="stringToTest"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.Password.PasswordGeneratorForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Contact.Password.PasswordGeneratorForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Contact.Password.IPasswordGeneratorInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Contact.Password.PasswordForm.ForgotPasswordInfo">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.Password.PasswordForm.GetPasswordControl(System.String,System.String,System.String,Interprise.Extendable.Base.Presentation.CRM.Contact.Password.IPasswordInterface)">
	<summary>
	</summary>
	<param name="p_currentPassword"></param>
	<param name="p_passwordVector"></param>
	<param name="p_passwordSalt"></param>
	<param name="plugin"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.Password.PasswordForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Contact.Password.PasswordControl.Password">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Contact.Password.PasswordControl.ForgotPasswordInfo">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Contact.Password.PasswordControl.PasswordForm">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.Password.PasswordControl.GenerateOldPassword">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.Password.PasswordControl.ErrorWhenSendingEmail">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.Password.PasswordControl.SendCompleted">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.Password.PasswordControl.SetInitialSettingsWhileSendingEmial">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.Password.PasswordControl.GetErrorMessage(Interprise.Presentation.Component.CRM.Contact.Password.PasswordControl.ErrorType,System.String)">
	<summary>
	</summary>
	<param name="p_errortype"></param>
	<param name="columnName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.Password.PasswordControl.GeneratedOldPasswordCompleted(System.IAsyncResult)">
	<summary>
	</summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.Password.PasswordControl.linkLabelForgotPassword_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactWebOptionsControl.LoadWebStores(System.String)">
	<summary>
 Loads the contact's allowed website configuration
 </summary>
	<param name="contactCode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactWebOptionsControl.LoadContactWebLog">
	<summary>
 Loads the contact's log data from the selected website
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactWebOptionsControl.DeleteContactWebLog(System.String,System.String)">
	<summary>
 Calls the DeleteContactWebLog method on the facade which will delete contact specific log data
 </summary>
	<param name="dateFrom"></param>
	<param name="dateTo"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Contact.ContactDetailForm.EnableMenuCustomer">
	<summary>Gets or sets wether the menu item customer is enabled.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Contact.ContactDetailForm.EnableMenuQuote">
	<summary>Gets or sets wether the menu item quote is enabled.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Contact.ContactDetailForm.EnableMenuSalesOrder">
	<summary>Gets or sets wether the menu item sales order is enabled.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Contact.ContactDetailForm.EnableMenuInvoice">
	<summary>Gets or sets wether the menu item sales invoice is enabled.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Contact.ContactDetailForm.IsFromEntity">
	<summary>Gets or sets wether the Contact came from an entity form.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactDetailForm.AddContact(System.String,System.String)">
	<summary>Creates a new Contact based on default values.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactDetailForm.LoadData(System.String,System.String)">
	<summary>Loads an existing Contact based on Contact ID.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactDetailForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="E:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.EMailAddressChanged">
	<summary>Triggers when contact's email address changed.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.EntityCodeChanged">
	<summary>Triggers when Contact's entity changed.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.DocumentCode">
	<summary>
	</summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.EntityCode">
	<summary>Gets or sets the Contact's entity ID.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.EMailAddress">
	<summary>Gets or sets the Contact's email address.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.CurrentDataset">
	<summary>
	</summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.CurrentFacade">
	<summary>
	</summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.IsReadOnly">
	<summary>
	</summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.IsFromEntity">
	<summary>Gets or sets if Contact came from entity form.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.ShowNewForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.AddData(System.String,System.String)">
	<summary>
 Insert a new blank datarow on the datatable
 </summary>
	<param name="p_entityCode">The entity ID for the new Contact. i.e. Customer ID, Supplier ID, WarehouseID</param>
	<param name="p_contactName">The name for the new Contact</param>
	<remarks>Adds a new Contact record with the default values</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.LoadDataSet(System.String,System.String)">
	<summary>Loads an existing Contact.</summary>
	<param name="entityCode">The entity ID for the Contact.</param>
	<param name="contactCode">The contact ID to be opened.</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.UndoChanges">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.ZoomDetail(System.Boolean)">
	<summary>
	</summary>
	<param name="blnZoomIn"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.ProcessKeyPreview(System.Windows.Forms.Message@)">
	<summary>
 Detects and handles the key pressed down by the user
 </summary>
	<param name="m"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.Find">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.AddNote">
	<summary>Adds a new Note to the Contact.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.AddActivity">
	<summary>Adds a new Activity to the Contact.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.AddCase">
	<summary>Adds a new Case to the Contact.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.AddDocument">
	<summary>Adds a new Document to the Contact.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.AddOpportunity">
	<summary>Adds a new Opportunity to the Contact.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.WriteEmail">
	<summary>Creates a new email message for the Contact.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.AddFax">
	<summary>Creates a new fax message for the contact.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.BeforeNewChildDocument(System.Object,System.Boolean@,System.String@,System.String@,Interprise.Framework.Base.Shared.Enum.FilterType@)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="isCancel"></param>
	<param name="newEntityCode"></param>
	<param name="newContactCode"></param>
	<param name="newFilterBy"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.PluginContainerHeader_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.PluginContainerNotes_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.PluginContainerActivities_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.PluginContainerCases_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.PluginContainerOpportunities_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.PluginContainerEmail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.PluginContainerDocuments_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.PluginContainerWaveActivity_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactDetailControl.PluginContainerTransactions_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactControl.PluginContainerContactInformation_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Contact.ContactControl.PluginContainerContactInformationPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Contact.IContactInformationInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactControl.PluginContainerAdditionalInformation_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Contact.ContactControl.PluginContainerAdditionalInformationPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Contact.IAdditionalInformationInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactControl.PluginContainerWebOption_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Contact.ContactControl.PluginContainerWebOptionPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Contact.IContactWebOptionsInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactControl.PluginContainerCustomField_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Contact.ContactControl.PluginContainerCustomFieldPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.SharedControl.ICustomFieldInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Contact.ContactControl.PluginContainerProductFilter_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Contact.ContactControl.PluginContainerProductFilterPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Contact.IProductFilterInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.ServerPassword.ServerPasswordForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.ServerPassword.ServerPasswordForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Connect.ServerPassword.IServerPasswordInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.ServerPassword.ServerPasswordControl.PluginContainerDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.ServerPassword.ServerPasswordControl.PluginContainerDetailPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Connect.ServerPassword.IServerPasswordDetailInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.SendAndReceive.SendAndReceiveForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.SendAndReceive.SendAndReceiveForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Connect.SendAndReceive.ISendAndReceiveInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.SendAndReceive.SendAndReceiveBodyControl.SendOrReceiveCallback(System.IAsyncResult)">
	<summary>
	</summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.SendAndReceive.SendAndReceiveControl.PluginContainerSendAndReceive_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.SendAndReceive.SendAndReceiveControl.PluginContainerSendAndReceivePluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Connect.SendAndReceive.ISendAndReceiveBodyInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.SendAndReceive.SendAndReceiveControl.PluginContainerSendAndReceiveAfterInitializePlugin(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.NewFolderForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.NewFolderForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Connect.INewFolderInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.NewFolderControl.PluginContainerDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.NewFolderControl.PluginContainerDetailPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Connect.INewFolderDetailInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.MoveToFolderForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.MoveToFolderForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Connect.IMoveToFolderInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.MoveToFolderControl.PluginContainerDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.MoveToFolderControl.PluginContainerDetailPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Connect.IMoveToFolderDetailInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.Rename.RenameForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.Rename.RenameForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Connect.Rename.IRenameControlInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.FolderListControl.treelistFolder_GetStateImage(System.Object,DevExpress.XtraTreeList.GetStateImageEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EMailViewer.EmailViewerForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.EMailViewer.EmailViewerForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Connect.EMailViewer.IEMailViewerInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EMailViewer.EMailViewerControl.ShowMeeting">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailSignature.EmailSignatureWizardForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.EmailSignature.EmailSignatureWizardForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Connect.EmailSignature.IEmailSignatureWizardInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailSignature.ComposeEmailSignatureControl.PluginContainerWordProcessor_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="T:Interprise.Presentation.Component.CRM.Connect.EMailHeaderListControl.MarkEmailAsReadDelegate">
	<summary>
	</summary>
	<param name="read"></param>
	<param name="messageCodes"></param>
	<remarks></remarks>
</member><member name="E:Interprise.Presentation.Component.CRM.Connect.EMailHeaderListControl.SaveEmail">
	<summary>
 Triggers when the control initiates to save the changes made to the
 dataset.
 </summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Connect.EMailHeaderListControl.FocusedEMailChanged">
	<summary>Triggers after focused email changed.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Connect.EMailHeaderListControl.SelectionChanged">
	<summary>Triggers after selection changed.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Connect.EMailHeaderListControl.ShowContextMenu">
	<summary>Triggers when the control initiates to display the context menu.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Connect.EMailHeaderListControl.OnNewEmailMessage">
	<summary>Triggers when the control initiates to create a new email message.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Connect.EMailHeaderListControl.OnReplyMessage">
	<summary>Triggers when the control initiates to create a reply email message.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Connect.EMailHeaderListControl.OnReplyAllMessage">
	<summary>Triggers when the control initiates to create a reply-all email message.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Connect.EMailHeaderListControl.OnForwardMessage">
	<summary>Triggers when the control initiates to create a forwarding email message.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Connect.EMailHeaderListControl.OnDeleteMessage">
	<summary>Triggers when the control initiates to delete selected email messages.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Connect.EMailHeaderListControl.OnMoveToFolder">
	<summary>
 Triggers when the control initiates to move email message to another
 folder.
 </summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Connect.EMailHeaderListControl.OnMarkMessageAsUnread">
	<summary>
 Triggers when the control initiates to mark selected email messages as
 unread
 </summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Connect.EMailHeaderListControl.OnIsPrivateChanged">
	<summary>
 Triggers when the control initiates to mark selected email messages as private or
 public.
 </summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.EMailHeaderListControl.SelectedMessages(System.Boolean)">
	<summary>Gets the selected email messages.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.EMailHeaderListControl.SelectedMessageCount(System.Boolean)">
	<summary>Gets the number of selected email messages.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.EMailHeaderListControl.FolderName(System.Boolean)">
	<summary>Gets or sets the selected email folder.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.EMailHeaderListControl.DataSourceView">
	<summary>Gets the datasorce of email messages.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.EMailHeaderListControl.GridViewEmail">
	<summary>
 Gets the grid view control itself, which display the list of email
 messages.
 </summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.EMailHeaderListControl.IsFromEntity">
	<summary>Gets or sets if the control came from an entity form.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EMailHeaderListControl.MoveMessage(System.String,Interprise.Framework.Base.Shared.Enum.MessageMovementDirection,Interprise.Framework.Base.Shared.Enum.MessageMovementType,System.Boolean@)">
	<summary>Navigates to next or previous email message.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EMailHeaderListControl.OpenSelectedItems">
	<summary>Loads all selected email messages.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EMailHeaderListControl.MarkEmailAsReadAsync(System.Boolean,System.String[])">
	<summary>
	</summary>
	<param name="read"></param>
	<param name="messageCodes"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EMailHeaderListControl.MarkEmailAsReadCallback(System.IAsyncResult)">
	<summary>
	</summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EMailHeaderListControl.ShowRowPreview(System.Boolean)">
	<summary>Displays the email message's preview.</summary>
	<param name="p_show">Determines wethe to display the preview or not.</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EMailHeaderListControl.GroupColumn(System.String,System.Boolean,System.Boolean)">
	<summary>Groups the columns.</summary>
	<param name="p_fieldName">The column to group.</param>
	<param name="p_group">Determines wether to group or not.</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EMailHeaderListControl.ExpandGroup(System.Boolean)">
	<summary>Expands the groupings.</summary>
	<param name="p_all">Determines if all groups will be expanded.</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailForm.LoadEmail(System.String)">
	<summary>Loads the email form.</summary>
	<param name="userCode">The user who owns the email.</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.EmailForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Connect.IEMailListInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailComposer.HeaderControl.FillSearchContact">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="T:Interprise.Presentation.Component.CRM.Connect.EmailComposer.HeaderControl.FillSearchContactDelegate">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailComposer.HeaderControl.DoFillSearchContact">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailComposer.HeaderControl.EndFillSearchContact(System.IAsyncResult)">
	<summary>
	</summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="T:Interprise.Presentation.Component.CRM.Connect.EmailComposer.HeaderControl.EndFillSearchContactDelegate">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailComposer.HeaderControl.EndFillSearchContact">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailComposer.EmailComposerForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.EmailComposer.EmailComposerForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Connect.EmailComposer.IEmailComposerInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailComposer.EmailComposerControl.SaveDraft(System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailComposer.EmailComposerControl.ShowMeeting">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailComposer.EmailComposerControl.PluginContainerHeader_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.EmailComposer.EmailComposerControl.PluginContainerHeaderPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Connect.EmailComposer.IHeaderInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailComposer.EmailComposerControl.PluginContainerDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.EmailComposer.EmailComposerControl.PluginContainerDetailPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.ICRMBodyInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.EmailAccountWizardForm.NotifyOnSaved(Interprise.Framework.Base.Shared.Delegates.OnSavedNotification)">
	<summary>
	</summary>
	<param name="method"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.EmailAccountWizardForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.EmailAccount.EmailAccountWizardForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Connect.EmailAccount.IEmailAccountWizardInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.EmailAccountWizardControl.GetHTTPControl">
	<summary>
 Method use to create the section control and attached them to the main control. 
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.EmailAccountWizardControl.GetIMAPControl">
	<summary>
 Method use to create the section control and attached them to the main control. 
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.EmailAccountWizardControl.GetPOP3Control">
	<summary>
 Method use to create the section control and attached them to the main control. 
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.EmailAccountWizardControl.GetServerTypeControl">
	<summary>
 Method use to create the section control and attached them to the main control. 
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.EmailAccountWizardControl.AddData(System.String,System.Boolean)">
	<summary>
 Create a blank datarow on the first index of the related tables.
 </summary>
	<param name="ownerCode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.EmailAccountWizardControl.DoLoadDataSet(System.String,System.String,System.String,System.String,System.Boolean,Interprise.Framework.Base.Shared.Enum.ClearType,System.AsyncCallback,System.Object,System.Boolean)">
	<summary>
	</summary>
	<param name="userCode"></param>
	<param name="emailAddress"></param>
	<param name="emailAccountCode"></param>
	<param name="clearTableType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.EmailAccountWizardControl.UpdateAccountFolderName(System.Boolean@)">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.EmailAccountWizardControl.TabEmailAccountMainWizardControl_BeforePageDisplayed(System.Object,Interprise.Presentation.Base.ExtendedXtraTabContol.SelectedPageChangingEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.EmailAccountWizardControl.TabEmailAccountMainWizardControl_SelectedPageChanged(System.Object,DevExpress.XtraTab.TabPageChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.EmailAccountWizardControl.TabEmailAccountWizard_Finished(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.AccountSettings.GeneralControl.InitializeDisplayName">
	<summary> Initializes the control's text display name </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.AccountSettings.GeneralControl.Focus">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.EmailAccount.ServerTypeControl.SelectedAccountType">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.ServerTypeControl.Focus">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.EmailAccount.AccountsControl.CurrentDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.EmailAccount.AccountsControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.POP3Control.Focus">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.POP3Control.Validate(System.String)">
	<summary>
	</summary>
	<param name="controlName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.POP3Control.btnMoreSettings_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.POP3Control.btnPassword_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.IMAPControl.Focus">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.IMAPControl.btnMoreSettings_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.IMAPControl.btnPassword_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.HTTPControl.Focus">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.HTTPControl.btnMoreSettings_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.HTTPControl.btnPassword_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.EmailAccount.AccountSettings.AccountSettingsControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.AccountSettings.AccountSettingsControl.PluginContainerGeneral_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.EmailAccount.AccountSettings.AccountSettingsControl.PluginContainerGeneralPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Connect.EmailAccount.AccountSettings.IGeneralInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.AccountSettings.AccountSettingsControl.PluginContainerOutgoingServer_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.EmailAccount.AccountSettings.AccountSettingsControl.PluginContainerOutgoingServerPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Connect.EmailAccount.AccountSettings.IOutgoingServerInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.AccountSettings.AccountSettingsControl.PluginContainerAdvance_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.EmailAccount.AccountSettings.AccountSettingsControl.PluginContainerAdvancePluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Connect.EmailAccount.AccountSettings.IAdvancedInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.AccountSettings.AccountSettingsControl.PluginContainerOther_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.EmailAccount.AccountSettings.AccountSettingsControl.PluginContainerOtherPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Connect.EmailAccount.AccountSettings.IOtherOptionInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.AccountSettings.OutgoingServerControl.Focus">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.AccountSettings.OutgoingServerControl.btnPassword_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.AccountSettings.OutgoingServerControl.chkOutgoingServerSMTP_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.AccountSettings.OtherOptionControl.Focus">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.AccountSettings.AdvancedControl.Focus">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.AccountSettings.AdvancedControl.chkLeaveCopyMessageServer_CheckStateChanged(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.AccountSettings.AccountSettingsForm.EmailAccountSettingsForm_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.AccountSettings.AccountSettingsForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.EmailAccount.AccountSettings.AccountSettingsForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Connect.EmailAccount.AccountSettings.IAccountSettingsInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailListControl.LoadDataSet(System.String,System.String,System.String,System.String,System.String,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>Loads the email accounts and email folders.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailListControl.BeginLoadDataSet(System.String,System.String,System.String,System.String,System.String,Interprise.Framework.Base.Shared.Enum.ClearType,System.AsyncCallback,System.Object)">
	<summary>Loads the email accounts and email folders asynchronbously.</summary>
	<param name="p_userCode">The user who owns the email accounts.</param>
	<param name="p_entityCode">The entity for the email messages</param>
	<param name="p_contactCode">The comtact for the email messages</param>
	<param name="p_parentType">The parent type for the email messages</param>
	<param name="p_emailAccountCode">The email account ID</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailListControl.RefreshEmailList">
	<summary>Reloads the list of email messages.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailListControl.SendAndReceive(System.String)">
	<summary>Invokes the send and receive process of email messages.</summary>
	<param name="emailAccountCode">
 The email account to use for send or receive. Set to nothing to send or receive
 in all email accounts of user.
 </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailListControl.RetrieveEmails(System.String)">
	<summary>Invokes the retrieve email message process.</summary>
	<remarks>
 Set the email account ID to nothing to retrieve emails of all email accounts.
 This includes only the email accounts of the user.
 </remarks>
	<param name="emailAccountCode">The email account ID to use for retrieving email.</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailListControl.SendPendingEmails(System.String)">
	<summary>Send all pending emails in the outbox folder.</summary>
	<param name="emailAccountCode">The email account ID.</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailListControl.NewMessage(System.String,System.String,System.String[],Interprise.Framework.Base.Shared.Enum.EmailMessageType)">
	<summary>
 Creates a new email message, reply email message or forwarding email
 message.
 </summary>
	<param name="recipeintAddress">The recipient or to address.</param>
	<param name="mimeData">A preset email message, mostly used for reply and forwarding emails.</param>
	<param name="originalMessageCodes">
 The email message code of the original email message, the to be replied or
 forwarded email message.
 </param>
	<param name="messageType">The type of email message: Normal, Reply, Forwarded, Draft</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailListControl.NewMessage(System.String,System.Byte[],System.String[],Interprise.Framework.Base.Shared.Enum.EmailMessageType)">
	<summary>Creates a new email message based on an array of bytes.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailListControl.ShowEmailAccount(System.Boolean)">
	<summary>Loads the email account wizard.</summary>
	<param name="isShowDialog">Determines if the email account wizard is show as a dialog form.</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailListControl.ShowEmailSignature">
	<summary>Loads the Email Signature wizard.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailListControl.UpdateContent">
	<summary>Updates the email message viewer based on selected email.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailListControl.CollapseGroup(System.Boolean)">
	<summary>Collapse cloumn groupings.</summary>
	<param name="all">Determines if all groupings will be collapsed.</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailListControl.ExpandGroup(System.Boolean)">
	<summary>Expand cloumn groupings.</summary>
	<param name="all">Determines if all column groupings will be expanded.</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailListControl.GroupColumn(System.String,System.Boolean,System.Boolean)">
	<summary>Groups a column.</summary>
	<param name="fieldName">The column to group.</param>
	<param name="group">Determines whether to group or not.</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailListControl.ShowInGroup(System.Boolean)">
	<summary>Displays the grouping of grouped columns or not.</summary>
	<param name="p_showGroup">Determine whether to display the groupings or not.</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailListControl.InitializeEndProcessMenu(System.Data.DataRow)">
	<summary>
	</summary>
	<param name="currentRow"></param>
	<remarks></remarks>
</member><member name="T:Interprise.Presentation.Component.CRM.Connect.EmailListControl.SetAsBusyDelegate">
	<summary>
	</summary>
	<param name="busy"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailListControl.SetAsBusy(System.Boolean)">
	<summary>
	</summary>
	<param name="busy"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailListControl.m_formEMailComposer_EmailSentToOutbox(System.Object,System.Boolean@)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="cancelSendingEmail"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailListControl.m_formEMailComposer_EmailSent(System.Object,System.String,System.Boolean)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="messagecode"></param>
	<param name="sent"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailListControl.PluginContainerFolders_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.EmailListControl.PluginContainerFoldersPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Connect.IFolderListInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailListControl.PluginContainerEmailList_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.EmailListControl.PluginContainerEmailListPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Connect.IEMailHeaderListInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailListControl.PluginContainerMessageBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.EmailListControl.PluginContainerMessageBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Connect.EMailViewer.IEMailViewerInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.EmailAccount.TestAccountSettings.TestAccountSettingsForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.EmailAccount.TestAccountSettings.TestAccountSettingsForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Connect.TestAccountSettings.ITestAccountSettingsMainControlInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="E:Interprise.Presentation.Component.CRM.Connect.AttachmentControl.OnAttachLocalFileMenuClick">
	<summary>Triggers after the end user clicks the "Attach Local File" menu item.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Connect.AttachmentControl.OnAttachDocumentManagementMenuClick">
	<summary>
 Triggers after the end user clicks the "Attach Document Management" menu
 item.
 </summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.AttachmentControl.Attachments">
	<summary>Gets the collection of attachments.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.AttachmentControl.DeletedAttachments">
	<summary>Gets the collection of attachments.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.AttachmentControl.SelectedAttachments">
	<summary>Gets the list of selected attachments.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.AttachmentControl.IsFaxAttachment">
	<summary>Determines if the control is used for fax attachments.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.AttachmentControl.HasChanges">
	<summary>Gets or sets if there are changes made on the list.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Connect.AttachmentControl.ShowSaveAttachment">
	<summary>Display the save attachament menu item.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.AttachmentControl.#ctor">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.AttachmentControl.InitializeComponent">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.AttachmentControl.LoadEmail(System.String)">
	<summary>Loads the file attachments based on the email mime string.</summary>
	<param name="mimeString">The email mime string.</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.AttachmentControl.LoadEmail(System.Byte[])">
	<summary>Loads the file attachments based on the email in array of bytes.</summary>
	<param name="mimeBytes">The email message in array of bytes.</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.AttachmentControl.LoadEmail(Chilkat.Email)">
	<summary>Loads the file attachments based on the email object.</summary>
	<param name="emailMessage">The email object.</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.AttachmentControl.AddAttachment">
	<summary>
 Adds an attachment to the control.
 </summary>
	<overloads>Opens a file dialog for the user to select the items for attachment.</overloads>
	<returns>An a list of key-value pair of filenames and filedata that were selected from the file dialog.</returns>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.AttachmentControl.AddAttachment(System.String,System.Byte[],System.Boolean,Interprise.Framework.Base.Shared.Enum.FileSource)">
	<summary>Adds an attachment to the control.</summary>
	<overloads>Adds an attachment using the specified filename.</overloads>
	<param name="fileName">The name of the file.</param>
	<param name="fileData">The actaul data in array of bytes.</param>
	<param name="isAdd">Determine if it will add record .</param>
	<param name="fileSource">Either local system or document management.</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.AttachmentControl.AddAttachFromDocumentManagement">
	<summary>Adds attachment from document management.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.AttachmentControl.OpenSelectedFiles">
	<summary>Loads all selected file attachments.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.AttachmentControl.SaveAttachments(System.Collections.Generic.List{Interprise.Framework.Base.Shared.Structure.FileAttachment},System.Boolean,System.Boolean)">
	<summary>Saves attachments either to local system or document management.</summary>
	<param name="attachments">The attachments to be saved.</param>
	<param name="toDocumentManagement">Determines wether to save files to document management.</param>
	<param name="allAttachments">Determines if all attachments will be saved.</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.AttachmentControl.Dispose(System.Boolean)">
	<summary>
	</summary>
	<param name="disposing"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Connect.AttachmentControl.ClearAttachmentData(System.Boolean)">
	<summary>
 Clears the data field of all attachments for faster performance
 </summary>
	<param name="includeDeleted">Determines if the deleted attachments should also be cleared</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.AnalysisPieChartControl.SetDataSource(System.Data.DataTable)">
	<summary>
 Set the chart datasource.
 </summary>
	<param name="datasource"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.AnalysisPieChartControl.SetTitle(System.String)">
	<summary>
 Set the chart title.
 </summary>
	<param name="content"></param>
	<remarks></remarks>
</member><member name="T:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.AnalysisType">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="T:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.DisplayMode">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.CurrentDataset">
	<summary>
	</summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.CurrentFacade">
	<summary>
	</summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.Criteria">
	<summary>
	</summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.EnableGrouping">
	<summary>
	</summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.ShowMainMenu">
	<summary>
	</summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.OpportunityDisplayMode">
	<summary>
	</summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.Initialize">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.GetDataSummaryControl">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.GetGridControl">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.GetChartControl">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.CreateFilterControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.AddOpportunity">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.LoadDataSet(System.String,System.String,Interprise.Framework.Base.Shared.Enum.FilterType,System.Boolean,System.Boolean,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
	</summary>
	<param name="customerCode"></param>
	<param name="contactCode"></param>
	<param name="enmFilterBy"></param>
	<param name="isCampaign"></param>
	<param name="isLoadParent"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.DoLoadDataSet(System.String,System.String,Interprise.Framework.Base.Shared.Enum.FilterType,System.Boolean,System.Boolean,Interprise.Framework.Base.Shared.Enum.ClearType,System.AsyncCallback,System.Boolean)">
	<summary>
	</summary>
	<param name="customerCode"></param>
	<param name="contactCode"></param>
	<param name="enmFilterBy"></param>
	<param name="isCampaign"></param>
	<param name="isLoadParent"></param>
	<param name="callback"></param>
	<param name="isAsync"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.UpdateDataSet">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.SetOpportunityStatus(System.String)">
	<summary>
 Changes the status of each selected case.
 </summary>
	<param name="newStatus"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.RefreshDataSummaryAnalysis(System.String)">
	<summary>
	</summary>
	<param name="p_finalCriteria"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.RefreshChart(System.String,Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.AnalysisType)">
	<summary>
	</summary>
	<param name="p_finalCriteria"></param>
	<param name="p_analysisType"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.EnableStatusButtons(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="p_notStarted"></param>
	<param name="p_inProgress"></param>
	<param name="p_sold"></param>
	<param name="p_lost"></param>
	<param name="p_cancelled"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.SetChartSelection">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.EnableChartMenuKeys(System.Boolean)">
	<summary>
	</summary>
	<param name="p_enable"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.EnableAnalysisMenuKeys(System.Boolean)">
	<summary>
	</summary>
	<param name="p_enable"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.ShowChartMenuKeys(DevExpress.XtraBars.BarItemVisibility)">
	<summary>
	</summary>
	<param name="p_show"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.OnWorkCompleted(System.Object,System.Object)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.m_opportunityFacade_OnErrorRaised(System.Exception)">
	<summary>
	</summary>
	<param name="ex"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.RefreshData(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.FilterChanged(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.OnChartFilterChanged(System.String)">
	<summary>
	</summary>
	<param name="p_criteria"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.toolbarOpportunity_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.OnGridSelectionChanged(System.Object,System.Object)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.ListControl.ListControl_BackColorChanged(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Chart.Opportunity.GridViewControl.CurrentDataset">
	<summary>
	</summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Chart.Opportunity.GridViewControl.CurrentFacade">
	<summary>
	</summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Chart.Opportunity.GridViewControl.SelectedOpportunities">
	<summary>
 Gets selected cases as well as under group rows.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.GridViewControl.GetChildRows(System.Int32,System.Collections.ArrayList)">
	<summary>
 Method to retrieve rows under a group row.
 </summary>
	<param name="p_groupRowHandle"></param>
	<param name="p_opportunityCodes"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Chart.Opportunity.GridViewControl.EnableGrouping">
	<summary>
	</summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.GridViewControl.InitializeDisplayName">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.GridViewControl.SelectAllRows">
	<summary>This method selects all the rows on the grid.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.GridViewControl.ChangeRowOpportunityStatus(System.String)">
	<summary>
	</summary>
	<param name="p_ActivityStatus"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.GridViewControl.GridViewControl_Load(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.GridViewControl.m_tempForm_Closed(System.Object,System.Windows.Forms.FormClosedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.GridViewControl.gvwOpportunity_SelectionChanged(System.Object,DevExpress.Data.SelectionChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.GridViewControl.gvwOpportunity_CellValueChanged(System.Object,DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.GridViewControl.gvwOpportunity_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.GridViewControl.gvwOpportunity_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
 Event to check the location information of the pointer within the grid
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Chart.Opportunity.DataSummaryControl.CurrentDataset">
	<summary>Get or set the instance of the current dataset.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Chart.Opportunity.DataSummaryControl.CurrentFacade">
	<summary>Get or set the instance of the current facade.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.DataSummaryControl.RefreshData">
	<summary>This method refresh the the data.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.DataSummaryControl.GetAverageCertainty">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.DataSummaryControl.GetAverageRevenue">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.DataSummaryControl.GetForecast">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.DataSummaryControl.GetWeightedForecast">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Opportunity.DataSummaryControl.GetWeightedAverage">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="E:Interprise.Presentation.Component.CRM.Chart.Cases.ListControl.BeforeNewCase">
	<summary>triggers before creating a new case record.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Chart.Cases.ListControl.BeforeRefreshData">
	<summary>Triggers before refreshing the data.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Chart.Cases.ListControl.CurrentDataset">
	<summary>Get or set the instance of current dataset.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Chart.Cases.ListControl.CurrentFacade">
	<summary>Get or set the instance of current facade.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Chart.Cases.ListControl.IsReadOnly">
	<summary>Gets or set the readonly property of the control.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Cases.ListControl.AddCase(System.String,System.String,System.DateTime)">
	<summary>This method creates new case record.</summary>
	<param name="p_entityCode">entity code of the case.</param>
	<param name="p_contactCode">contact code of the case.</param>
	<param name="p_startDate">start date of the case.</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Cases.ListControl.AddCase(System.DateTime)">
	<summary>This method creates new case record.</summary>
	<param name="startdate">start date of the case.</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Cases.ListControl.BeginLoadDataSet(System.String,System.String,Interprise.Framework.Base.Shared.Enum.FilterType,System.Boolean,Interprise.Framework.Base.Shared.Enum.ClearType,System.AsyncCallback,System.Object)">
	<summary>This function begins the asyncronous loading of data to the control.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Cases.ListControl.LoadDataSet(System.String,System.String,Interprise.Framework.Base.Shared.Enum.FilterType,System.Boolean,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>This function loads the data to the control.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Cases.ListControl.EndLoadDataSet(System.IAsyncResult)">
	<summary>This function ends the asyncronous loading of data to the control.</summary>
</member><member name="T:Interprise.Presentation.Component.CRM.Chart.Cases.ListControl.LoadActivityResourceDelegate">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Cases.ListControl.LoadActivityResource">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Cases.ListControl.SetActivityStatus(System.String)">
	<summary>
 Changes the status of each selected case.
 </summary>
	<param name="newStatus"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Cases.ListControl.SetColumnVisibility(System.String,System.Boolean)">
	<summary>This method sets the visibility of a specific column.</summary>
	<param name="p_columnName">the column name</param>
	<param name="p_visible">the visibility of of the column</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Cases.ListControl.RepaintChart">
	<summary>This method repaints the chart.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Cases.ListControl.OnErrorRaised(System.Exception)">
	<summary>
 Handles the Activity Facade OnErrorRaised event
 </summary>
	<param name="ex">The System.Exception raised from Activity Facade</param>
	<remarks></remarks>
</member><member name="E:Interprise.Presentation.Component.CRM.Chart.Cases.GridControl.OnCellValueChanged">
	<summary>Triggers when the value of a cell on the grid changed.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Chart.Cases.GridControl.OnSelectionChanged">
	<summary>Triggers when selection of the grid changed.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Chart.Cases.GridControl.RefreshData">
	<summary>Triggers when the control refresh its data.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Chart.Cases.GridControl.SaveChanges">
	<summary>triggers when the changes on the data is saved.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Chart.Cases.GridControl.OnOpenCase">
	<summary>Triggers when a subject column link is clicked</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Chart.Cases.GridControl.OnShowContextMenu">
	<summary>Triggers when context menu is shown.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Chart.Cases.GridControl.CurrentDataset">
	<summary>Gets or sets the instance of the current Dataset</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Chart.Cases.GridControl.CurrentFacade">
	<summary>Gets or sets the instance of the current Facade.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Chart.Cases.GridControl.SelectedCases">
	<summary>
 Gets selected cases as well as under group rows.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Cases.GridControl.GetChildRows(System.Int32,System.Collections.ArrayList)">
	<summary>
 Method to retrieve rows under a group row.
 </summary>
	<param name="p_groupRowHandle"></param>
	<param name="p_caseCodes"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Chart.Cases.GridControl.EnableGrouping">
	<summary>Get or set the visibility of the group panel of the grid.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Chart.Cases.GridControl.EnableEntityColumn">
	<summary>Gets or sets the visibilty of the entity column.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Chart.Cases.GridControl.EnableContactColumn">
	<summary>Get or set the visibility of contact column.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Cases.GridControl.SelectAllRows">
	<summary>This method select all the row on the grid.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Cases.GridControl.ExpandAllGroupRows">
	<summary>This method expands all the grouped rows on the grid.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Cases.GridControl.ChangeGridActivityStatus(System.String)">
	<summary>
		<para>This method changes the value of column status for each selected row on the
    grid.</para>
		<para>Triggers the CellValueChanged event and removes the previous processed from
    selection on each loop.</para>
	</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Cases.GridControl.SetColumnVisibility(System.String,System.Boolean)">
	<summary>This method sets the visibilty of columns on the grid.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Chart.Cases.GridControl.PrivateActivityRestrictionMessage">
	<summary>This sets the restriction for a private activity.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Chart.Cases.GridControl.PrivateActivityTitle">
	<summary>This sets the titte message for a private activity.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Chart.Cases.GridControl.PrivateActivityDescription">
	<summary>This sets the description for a private activity.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Chart.Cases.GridControl.rlinkControl_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Depecrated by gridview_doubleclick
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Calendar.CalendarForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Calendar.CalendarForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Activity.Calendar.IListInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Calendar.CalendarControl.ModuleClassType">
	<summary>
	</summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Calendar.CalendarControl.Execute(Interprise.Framework.Base.Shared.Enum.DashboardActionType,Interprise.Framework.Base.Shared.Structure.SearchParameters,System.Object[])">
	<summary>
	</summary>
	<param name="actionType"></param>
	<param name="searchParameters"></param>
	<param name="param"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Calendar.CalendarControl.InitiliazeLoadingTimer">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Calendar.CalendarControl.LoadingTimer_Elapsed(System.Object,System.Timers.ElapsedEventArgs)">
	<summary>
 Private m_loadingTimer As Timers.Timer
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Calendar.CalendarContainerControl.InitiliazeLoadingTimer">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Calendar.CalendarContainerControl.LoadingTimer_Elapsed(System.Object,System.Timers.ElapsedEventArgs)">
	<summary>
 Private m_loadingTimer As Timers.Timer
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Calendar.CalendarContainerControl.PluginContainerContainer_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Calendar.CalendarContainerControl.PluginContainerContainerPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Activity.Calendar.ICalendarInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="E:Interprise.Presentation.Component.CRM.Activity.ActivityControl.EntityCodeChanged">
	<summary>Triggers after the entity changed.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Activity.ActivityControl.OnStartTimer">
	<summary>Triggers after the end user starts the timer.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Activity.ActivityControl.ActivityStatusChanged">
	<summary>Triggers after the status changed.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Activity.ActivityControl.OnSelectedTypeChanged">
	<summary>Triggers after the Activity type changed.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Activity.ActivityControl.OnStartDateChanged">
	<summary>Triggers after the start date changed.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.ActivityControl.CurrentDataset">
	<summary> Gets the CRMActivityGateway </summary>
	<value> Interprise.Framework.Base.DatasetComponent.BaseDataset </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.ActivityControl.CurrentFacade">
	<summary> Gets the CRMActivityFacade </summary>
	<value> Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.ActivityControl.DocumentCode">
	<summary> Gets or sets the CRM Activity Code </summary>
	<value> String </value>
	<remarks> Cascade changes made in CRM Activity Code to it's child controls </remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.ActivityControl.ContactCode">
	<summary> Gets the current Contact Code </summary>
	<value> String </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.ActivityControl.EntityCode">
	<summary>Gets or sets the Entity ID</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.ActivityControl.IsReadOnly">
	<summary> Get or sets a value indicating whether Activity Control is readonly </summary>
	<value>
		<para>True - Acitivty Form is readonly.</para>
		<para>False - Activity Form is editable.</para>
	</value>
	<remarks> Cascade changes to its child controls </remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.ActivityControl.TransactionType">
	<summary> Gets or sets the control's TransactionType </summary>
	<value> Interprise.Framework.Base.Shared.Enum.TransactionType </value>
	<remarks> The value depends on activity's entity </remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.ActivityControl.ActivityStatus">
	<summary> Gets or sets the current status of Activity </summary>
	<value> String </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.ActivityControl.IsFromEntity">
	<summary>Gets or sets if the activity came from an enitity form.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.ShowNewForm">
	<summary> Shows a new Activity Form </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.AddData(System.String,System.String,System.DateTime,System.String,System.String,System.String)">
	<summary> Insert a new blank row in CRM Activity Table </summary>
	<param name="p_entityCode"><para>The entity ID who owns the new Activity.</para></param>
	<param name="p_contactCode">The contact ID for the new Activity.</param>
	<param name="p_startDate">The start date for the new Activity.</param>
	<param name="p_type">The Activity type.</param>
	<param name="p_opportunityCode">The Opportunity ID assigned for the new Activity.</param>
	<param name="p_waveCode">The Campaign Wave ID assigned for thew new Activity.</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.DeleteData">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.LoadDataSet(System.String,System.Boolean)">
	<summary>
 Gets an Activity based on Activity Code
 </summary>
	<param name="activityCode"> The value where data retrieval is based </param>
	<param name="isLoadParent"> Indicates whether to retrieve an existing Activity </param>
	<remarks> Only reads the data for child controls if isLoadParent is set to false </remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.LoadSubControlsData(System.String,System.Boolean)">
	<summary> 
 Executes child controls' ReadData 
 </summary>
	<remarks>
	</remarks>
	<param name="activityCode "> The value where data retrieval is based </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.LoadTabFooterData(System.String)">
	<summary>
 Executes child controls' ReadData
 </summary>
	<param name="activityCode"> The value where data retrieval is based </param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Saves the current Activity and all child rows
 </summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<returns>Returns DialogResult.Yes if save is successful </returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.UndoChanges">
	<summary> Reject changes made to the current Activity </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.ZoomDetail(System.Boolean)">
	<summary> Handles whether to expand the Detail Tab </summary>
	<remarks>
	</remarks>
	<param name="blnZoomIn "> The value whether to expand the Detail Tab </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.Find">
	<summary> Closes the form to show the Main Search Dashboard </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.ProcessKeyPreview(System.Windows.Forms.Message@)">
	<summary> Detects and handles the key pressed down by the user </summary>
	<remarks>
	</remarks>
	<param name="m "> Indicates the key to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.SetTabSelection(System.String)">
	<summary> Prepares the Activity Control whenever Activity Type is changed </summary>
	<remarks>
	</remarks>
	<param name="p_activityType "> Value indicating the new Activity Type </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.CreateCallbackSchedule">
	<summary> Creates a new call back Activity </summary>
	<remarks> Data in the new activity is based from the previous Activity </remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.AddDocument(System.Boolean)">
	<summary>
 Invokes the DocumentListControl's AddData
 </summary>
	<param name="p_isFollowUp">is load using CRMFollowUp Form</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.AddNote">
	<summary>
 Invokes the NoteListControl's AddData
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.ValidateMenuGroup">
	<summary>
 Remove duplication Text Options from group menu tab
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.DuplicateActivity">
	<summary>
	</summary>
	<remarks>Duplicate CRM Activity</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.DuplicateCRMActivityView(System.Object[])">
	<summary>
	</summary>
	<param name="p_rowCRMActivityItemArray">Current CrmActivityView Array</param>
	<remarks>Duplicate CrmActivityView</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.DuplicateCrmActivityAttendeeAndCaseItem(Interprise.Framework.Base.DatasetComponent.CRM.ActivityDataSet)">
	<summary>
	</summary>
	<param name="p_TempCRMActivity">Set CRMActivityDataset</param>
	<remarks> Duplicate Crm Activity Attendee and Case Item </remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.DuplicateDocumentsAndNotes(System.Boolean,System.Boolean,System.String,System.String)">
	<summary>
	</summary>
	<param name="p_isDuplicateDocuments">Set isDuplicate Documents</param>
	<param name="p_isDuplicateNotes">Set isNotes</param>
	<param name="p_newActivityCode">Get Lates New Activity Code</param>
	<param name="p_oldActivityCode">Set previous activity code</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.ShowDuplicateActivity(System.String)">
	<summary>
	</summary>
	<param name="p_newActivityCode">New Activity Code</param>
	<remarks> Show Duplicate Activity</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.m_activityFacade_ErrorRaised(System.Exception)">
	<summary> Handles the Activity Facade OnErrorRaised event </summary>
	<remarks>
	</remarks>
	<param name="ex "> The System.Exception raised from Activity Facade </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.m_activityFacade_ActivityStatusChanged(System.String)">
	<summary> Handles the ActivityFacade's OnActivityStatusChanged event </summary>
	<remarks>
	</remarks>
	<param name="p_Status "> Indicates the new Activity Status </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.m_headerControl_OnTransactionTypeChanged(Interprise.Framework.Base.Shared.Enum.TransactionType)">
	<summary> Handles the HeaderControl's TransactionTypeChanged event </summary>
	<remarks>
	</remarks>
	<param name="p_transactionType "> Indicates the new Transaction Type </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.m_headerControl_OnSelectedTypeChanged(System.String)">
	<summary>
	</summary>
	<param name="p_type"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.BeforeNewChildDocument(System.Object,System.Boolean@,System.String@,System.String@,Interprise.Framework.Base.Shared.Enum.FilterType@)">
	<summary>
 Handles the Activity Control's BeforeNewChildDocument event
 </summary>
	<param name="isCancel">Cancel creation of child row</param>
	<param name="newEntityCode">The new entity code</param>
	<param name="newContactCode">The new contact code</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.TabGroupFooter_SelectedPageChanged(System.Object,DevExpress.XtraLayout.LayoutTabPageChangedEventArgs)">
	<summary> Handles the Footer tab's SelectedTabChanged event </summary>
	<remarks>
	</remarks>
	<param name="sender "> Represents the TabFooter </param>
	<param name="e "> The event argument to be processed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.PluginContainerHeader_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.PluginContainerCustomFields_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.PluginContainerDetails_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.PluginContainerProblem_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.PluginContainerSolution_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.PluginContainerItems_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.PluginContainerAttendees_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.PluginContainerAvailability_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.PluginContainerDocuments_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.PluginContainerNotes_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityControl.PluginContainerHistory_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.SelectStatusControl.SelectedStatus">
	<summary>Gets the selected status.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.SelectStatusControl.ShowActivity">
	<summary>Gets whether to load the activity form.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Duplicate.DuplicateMainControl.isDuplicateDocuments">
	<summary>
	</summary>
	<value></value>
	<returns>Duplicate With Documents</returns>
	<remarks>Duplicate CRM With Documents</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Duplicate.DuplicateMainControl.isDuplicateNotes">
	<summary>
	</summary>
	<value></value>
	<returns>Duplicate With Notes</returns>
	<remarks>Duplicate CRM With Notes</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.Duplicate.DuplicateMainControl.PluginContainerDuplicateMainControl_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Duplicate.DuplicateMainControl.PluginContainerDuplicateMainControlPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Activity.Duplicate.IDuplicateControlInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Duplicate.DuplicateForm.IsDuplicateDocuments">
	<summary>
	</summary>
	<value></value>
	<returns>Duplicate With Documents</returns>
	<remarks>Duplicate CRM With Documents</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Duplicate.DuplicateForm.IsDuplicateNotes">
	<summary>
	</summary>
	<value></value>
	<returns>Duplicate With Notes</returns>
	<remarks>Duplicate CRM With Notes</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.Duplicate.DuplicateForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Duplicate.DuplicateForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Activity.Duplicate.IDuplicateMainControlInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Duplicate.DuplicateControl.isDuplicaeDocuments">
	<summary>
	</summary>
	<value></value>
	<returns>Duplicate With Documents</returns>
	<remarks>Duplicate CRM With Documents</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Duplicate.DuplicateControl.isDuplicateNotes">
	<summary>
	</summary>
	<value></value>
	<returns>Duplicate With Notes</returns>
	<remarks>Duplicate CRM With Notes</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.CallBack.CallBackForm.CallBackScheduleDate">
	<summary> Gets the new DueDate for the new Callback Activity </summary>
	<value>
	</value>
	<remarks> The new StartDate is the current Date </remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.CallBack.CallBackForm.GetMainControl(System.Windows.Forms.Control)">
	<summary>
	</summary>
	<param name="plugIn"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.CallBack.CallBackForm.GetCallBackScheduleControl(System.Windows.Forms.Control)">
	<summary> Gets or creates the CallBackScheduleControl </summary>
	<returns>
	</returns>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.CallBack.CallBackForm.CallBackForm_Closing(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary> Handles the form's closing event </summary>
	<remarks> Validates if the callback date is valid </remarks>
	<param name="sender "> Represent the form </param>
	<param name="e "> The System.ComponentModel.CancelEventArgs to be preocessed </param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.CallBack.CallBackForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.CallBack.CallBackForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Activity.Callback.ICallBackInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="E:Interprise.Presentation.Component.CRM.Activity.Calendar.OwnerActivityListControl.SaveChanges">
	<summary>Triggers when the controls requires to save changes made to the dataset.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Activity.Calendar.OwnerActivityListControl.OnSelectionChanged">
	<summary>Triggers when the selection changed.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Activity.Calendar.OwnerActivityListControl.RefreshData">
	<summary>Triggers when the control requires to reload the list.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Activity.Calendar.OwnerActivityListControl.OnOpenActivity">
	<summary>Triggers when the control initiates to load selected activities.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.OwnerActivityListControl.ActivityTypeFilter">
	<summary>Gets or sets whether to filter the list by callback or to-do's</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.OwnerActivityListControl.PrivateActivityRestrictionMessage">
	<summary>Sets the message for accessing or modifying restricted activities.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.OwnerActivityListControl.PrivateActivityTitle">
	<summary>Set the message for restricted activities' title.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.OwnerActivityListControl.PrivateActivityDescription">
	<summary>Set the message for restricted activities' description.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.Calendar.OwnerActivityListControl.SelectAllItems">
	<summary>Selects all activities in the list.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.Calendar.OwnerActivityListControl.ChangeActivityStatus(System.String)">
	<summary>Change the selected activities' status based on status arguement.</summary>
	<param name="p_status">The new status for the selected activities.</param>
</member><member name="E:Interprise.Presentation.Component.CRM.Activity.Calendar.ListControl.BeforeNewActivity">
	<summary>Triggers before a new activity is to be created.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Activity.Calendar.ListControl.BeforeRefreshData">
	<summary>Triggers before the list is to be reloaded.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.ListControl.OwnerCriteria">
	<summary>Gets the owner criteria.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.ListControl.EntityCode">
	<summary>Gets or sets the entity which owns the activities.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.ListControl.ContactCode">
	<summary>Gets or sets the contact of the activities.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.ListControl.WaveCode">
	<summary>Gets or sets the Campaign Wave assigned to the list.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.ListControl.ParentType">
	<summary>Gets or sets the parent type of the list.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.ListControl.EnableGrouping">
	<summary>Gets or sets whethe to enable column grouping or not.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.ListControl.EnableEntityColumn">
	<summary>Gets or sets whethe to enable entity column or not.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.ListControl.EnableContactColumn">
	<summary>Gets or sets whethe to enable contact column or not.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.ListControl.EnableParentTypeColumn">
	<summary>Gets or sets whethe to enable parentType column or not.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.ListControl.IsFromEntity">
	<summary>Gets or sets wether the control came from an entity form.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.ListControl.EnableSalesRepFilter">
	<summary>Gets or sets whether to enable the sales rep filter.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.Calendar.ListControl.AddActivity(System.DateTime)">
	<summary>Adds a new activity to the list.</summary>
	<param name="p_startdate">The start date of the new activity.</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.Calendar.ListControl.ExecuteMenuItem(System.String)">
	<summary>
 Executes corresponding methods/functions of the item link
 </summary>
	<param name="itemName">Menu item name</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.Calendar.ListControl.m_activityFacade_ErrorRaised(System.Exception)">
	<summary>
 Handles the Activity Facade OnErrorRaised event
 </summary>
	<param name="ex"></param>
	<remarks>The System.Exception raised from Activity Facade</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.Calendar.ListControl.PluginContainerCalendar_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.Calendar.ListControl.PluginContainerCalendar_AfterInitializePlugin(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.ListControl.PluginContainerCalendarPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Activity.Calendar.ICalendarInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.Calendar.ListControl.PluginContainerGrid_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.Calendar.ListControl.PluginContainerGrid_AfterInitializePlugin(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.ListControl.PluginContainerGridPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Activity.Calendar.IGridInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="E:Interprise.Presentation.Component.CRM.Activity.Calendar.GridControl.OnSelectionChanged">
	<summary>Triggers after selection changed.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Activity.Calendar.GridControl.RefreshData">
	<summary>Triggers when the control requires to reload the list.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Activity.Calendar.GridControl.SaveChanges">
	<summary>Triggers when the control requires to save changes made to dataset.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Activity.Calendar.GridControl.OnOpenActivity">
	<summary>Triggers when the control requires to load selected activities.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.GridControl.PrivateActivityRestrictionMessage">
	<summary>Sets the message for accessing or modifying restricted activities.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.GridControl.PrivateActivityTitle">
	<summary>Set the message for restricted activities' title.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.GridControl.PrivateActivityDescription">
	<summary>Set the message for restricted activities' description.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.GridControl.EnableEntityColumn">
	<summary>Gets or sets whether to enable the entity column.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.GridControl.EnableContactColumn">
	<summary>Gets or sets whether to enable the contact column.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.GridControl.EnableParentTypeColumn">
	<summary>Gets or sets whether to enable the parenType column.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.GridControl.IsFromEntity">
	<summary>Gets or sets if the control came from an entity form.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.GridControl.AllowStrikethroughForCompletedActivities">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.Calendar.GridControl.SelectAllRows">
	<summary>Selects all activities in the list.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.Calendar.GridControl.ChangeActivityStatus(System.String)">
	<summary>Changes the status of selected activities based on the status arguement.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.Calendar.Filter.ToDoForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.Calendar.Filter.ToDoControl.PluginContainerToDo_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.Calendar.Filter.DayViewForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.Calendar.Filter.DayViewControl.PluginContainerDayView_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.Calendar.Filter.DateNavigatorForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.Calendar.Filter.DateNavigatorControl.PluginContainerDateNavigator_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.Calendar.Filter.CallBackForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.Calendar.Filter.CallBackControl.PluginContainerCallBack_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.Filter.ActivityFilterForm.DateFilterControl">
	<summary>Gets the date filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.Filter.ActivityFilterForm.PriorityFilterControl">
	<summary>Gets the priority filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.Filter.ActivityFilterForm.StatusFilterControl">
	<summary>Gets the status filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.Filter.ActivityFilterForm.SalesRepFilterControl">
	<summary>Gets the sales rep filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.Filter.ActivityFilterForm.TerritoryFilterControl">
	<summary>Gets the territory filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.Filter.ActivityFilterForm.ActivityCategoryFilterControl">
	<summary>Gets the Activity Category filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.Filter.ActivityFilterForm.OwnerFilterControl">
	<summary>Gets the owner filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.Filter.ActivityFilterForm.TypeFilterControl">
	<summary>Gets the type filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.Filter.ActivityFilterForm.EnableSalesRepFilter">
	<summary>Gets or sets whether to enable the sales rep filter.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.Calendar.Filter.ActivityFilterForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.Filter.ActivityFilterControl.DateFilterControl">
	<summary>Gets the date filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.Filter.ActivityFilterControl.PriorityFilterControl">
	<summary>Gets the priority filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.Filter.ActivityFilterControl.StatusFilterControl">
	<summary>Gets the status filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.Filter.ActivityFilterControl.SalesRepFilterControl">
	<summary>Gets the sales rep filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.Filter.ActivityFilterControl.TerritoryFilterControl">
	<summary>Gets the territory filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.Filter.ActivityFilterControl.ActivityCategoryFilterControl">
	<summary>Gets the Activity Category filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.Filter.ActivityFilterControl.OwnerFilterControl">
	<summary>Gets the owner filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.Filter.ActivityFilterControl.TypeFilterControl">
	<summary>Gets the type filter.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.Filter.ActivityFilterControl.EnableSalesRepFilter">
	<summary>Gets or sets whether to enable the sales rep filter.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.Calendar.Filter.ActivityFilterControl.PluginContainerActivityFilter_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="E:Interprise.Presentation.Component.CRM.Activity.Calendar.CalendarControl.RefreshData">
	<summary>Reloads the list.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Activity.Calendar.CalendarControl.SaveChanges">
	<summary>
 Triggers when the control's requires to save the changes made to the
 dataset.
 </summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Activity.Calendar.CalendarControl.OnSelectionChanged">
	<summary>Triggers after the selection changed.</summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Activity.Calendar.CalendarControl.OnCreateNewActivity">
	<summary>
 Triggers when the control initiates to create a new activity, mainly by the
 user.
 </summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Activity.Calendar.CalendarControl.OnOpenActivity">
	<summary>
 Tiggers when the control initiates to load an activity or set of activities,
 mainly by users.
 </summary>
</member><member name="E:Interprise.Presentation.Component.CRM.Activity.Calendar.CalendarControl.OnDeleteActivity">
	<summary>
	</summary>
	<param name="p_activityRow"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.CalendarControl.CalendarDisplayMode">
	<summary>Gets or sets the calendar display mode.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.CalendarControl.CalendarScheduler">
	<summary>Gets the calendar control itself, which displays the list of activities.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.CalendarControl.CalendarStorage">
	<summary>Gets the calendar control storage itself, which stores the activities.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.CalendarControl.DateNavigator">
	<summary>Gets the date navigator control itself.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.CalendarControl.PrivateActivityRestrictionMessage">
	<summary>Sets the message for accessing or modifying restricted activities.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.CalendarControl.PrivateActivityTitle">
	<summary>Set the message for restricted activities' title.</summary>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.Calendar.CalendarControl.PrivateActivityDescription">
	<summary>Set the message for restricted activities' description.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.Calendar.CalendarControl.ChangeActivityStatus(System.String)">
	<summary>Change the selected activities based on status arguement.</summary>
	<param name="p_ActivityStatus">The new status for the selected activities.</param>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.Calendar.CalendarControl.SelectAllItems">
	<summary>Selects all activity in the calendar.</summary>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.Calendar.CalendarControl.calScheduler_AppointmentViewInfoCustomizing(System.Object,DevExpress.XtraScheduler.AppointmentViewInfoCustomizingEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.AttendeeControl.CurrentDataset">
	<summary> Gets the CRM Activity Gateway </summary>
	<value> Interprise.Framework.Base.DatasetComponent.BaseDataset </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.AttendeeControl.CurrentFacade">
	<summary> Gets the CRM Activity Facade </summary>
	<value> Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.AttendeeControl.DocumentCode">
	<summary> Gets or sets the Document Code </summary>
	<value>
	</value>
	<remarks> Represents the current Activity Code </remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.AttendeeControl.PluginContainerUsers_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.AttendeeControl.PluginContainerUsersPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Activity.IAttendeeGridInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.AttendeeControl.PluginContainerTeams_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.AttendeeControl.PluginContainerTeamsPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Activity.IAttendeeGridInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.AttendeeControl.PluginContainerResources_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Component.CRM.Activity.AttendeeControl.PluginContainerResourcesPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.CRM.Activity.IResourceInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.CRM.Activity.ActivityForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Component.BaseAppModule.GetHostExecuteResult(System.String,Interprise.Framework.Base.Shared.Structure.SearchParameters)">
	<summary>
	</summary>
	<param name="menuAction"></param>
	<param name="searchParam"></param>
	<returns></returns>
	<remarks></remarks>
</member>
</members>
</doc>