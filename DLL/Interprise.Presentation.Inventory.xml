<?xml version="1.0"?>
<doc>
<assembly>
<name>
Interprise.Presentation.Inventory
</name>
</assembly>
<members>
<member name="P:Interprise.Presentation.Inventory.WebOption.WebSiteControl.IsReadOnly">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.WebSiteControl.WebSiteCode">
	<summary>
 Returns selected web site code.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.WebSiteControl.Focus">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.WebSiteControl.LoadWebSite">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.WebSiteControl.gridviewWebSite_FocusedRowChanged(System.Object,DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.WebSiteControl.hypWebSiteCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.WebRatingControl.CurrentDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.WebRatingControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.WebRatingControl.ItemDetailDataset">
	<summary> Property that gets the value of ItemDetailDataset. </summary>
	<value> Interprise.Framework.Inventory.DatasetGateway.ItemDetailDatasetGateway</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.WebRatingControl.BeginLoadDataSet(System.String[][],Interprise.Framework.Base.Shared.Enum.ClearType,System.AsyncCallback,System.Object)">
	<summary>
	</summary>
	<param name="commandSet"></param>
	<param name="clearTableType"></param>
	<param name="callBack"></param>
	<param name="asyncState"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.WebRatingControl.LoadGridSettings">
	<summary>
 Method use to sets grid options.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.WebRatingControl.btnZoomComments_Click(System.Object,System.EventArgs)">
	<summary> Event use to set the docking into fill or bottom. </summary>
	<remarks>
	</remarks>
	<param name="sender">
	</param>
	<param name="e">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.WebRatingControl.gridviewRating_FocusedRowChanged(System.Object,DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.WebRatingControl.LoadDataset_Completed(System.IAsyncResult)">
	<summary>
	</summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.WebRatingControl.IsBinded">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.WebRatingControl.UpdateComments">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.WebRatingControl.rephypCustomerName_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.WebRatingControl.rhypContactName_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.StockPageSettingControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.StockPageSettingControl.IsReadOnly">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.StockPageSettingControl.ItemDetailDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.StockPageSettingControl.WebSiteCode">
	<summary>
 Gets /sets the currently selected web site.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.StockPageSettingControl.XMLPackages">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.StockPageSettingControl.MobileXMLPackages">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.StockPageSettingControl.LoadXMLPackages(System.String[])">
	<summary>
	</summary>
	<param name="xmlPackages"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.StockPageSettingControl.LoadXMLPackages">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.StockPageSettingControl.LoadMobileXMLPackages(System.String[])">
	<summary>
	</summary>
	<param name="xmlPackages"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.StockPageSettingControl.LoadMobileXMLPackages">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.StockPageSettingControl.cboXMLPackage_ButtonClick(System.Object,DevExpress.XtraEditors.Controls.ButtonPressedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.StockPageSettingControl.cboXMLPackage_QueryPopUp(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.StockPageSettingControl.cboMobileXMLPackage_ButtonClick(System.Object,DevExpress.XtraEditors.Controls.ButtonPressedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.StockPageSettingControl.cboMobileXMLPackage_QueryPopUp(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.StockPageSettingControl.memoShipNote_QueryPopUp(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.LocationItemControl.CurrentDataset">
	<summary> Property that gets the value of CurrentDataset . </summary>
	<value>  Interprise.Framework.Base.DatasetComponent.BaseDataset</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.LocationItemControl.CurrentFacade">
	<summary> Returns the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Interprise.Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.LocationItemControl.IsClearItems">
	<summary> Property to read or write IsClearItems </summary>
	<value>Boolean, If true then the property will clear items, otherwise not. </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.LocationItemControl.LocationInfo">
	<summary> Property that gets or sets the value of LocationRow. </summary>
	<value> Framework.Inventory.DatasetComponent.WarehouseDataset.InventoryLocationRow</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.LocationItemControl.LoadDataset">
	<summary> Method use to fetch data from the daTabase and populates the Tables specified in the parameters. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.LocationItemControl.ClearItems">
	<summary>Method use to clear items in the current location </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.LocationItemControl.ClearItemsFinished(System.IAsyncResult)">
	<summary>Method use to callback procedure of ClearItems </summary>
	<remarks>
	</remarks>
	<param name="ar ">Sets as IAsyncResult. </param>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.LocationItemControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Method use to save changes of dataTable to daTabase.
 </summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.LocationItemControl.CreateStockingLevelsControl">
	<summary> Method use to create the section control and attached them to the main control. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.LocationItemControl.LoadGridSettings">
	<summary> Method use to loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.LocationItemControl.gvwLocationItems_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary>  Event use to initialize new row. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.LocationItemControl.WarehouseLocationItemControl_Load(System.Object,System.EventArgs)">
	<summary> Event use to call ReadData </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.LocationItemControl.rcboItemCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.LocationItemControl.rcboItemCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Event use to assign the values of the selected item from the dropdown list to the selected row </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.LocationItemControl.gvwLocationItems_InvalidRowException(System.Object,DevExpress.XtraGrid.Views.Base.InvalidRowExceptionEventArgs)">
	<summary> Event use to discard duplicate record </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.LocationItemControl.gvwLocationItems_InvalidValueException(System.Object,DevExpress.XtraEditors.Controls.InvalidValueExceptionEventArgs)">
	<summary> Event to handle duplicate error </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.LocationItemControl.gvwLocationItems_GotFocus(System.Object,System.EventArgs)">
	<summary> Event to show the caret in the grid when focused. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.LocationItemControl.grdLocationItems_ProcessGridKey(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary> Event use to check the keyboard key combination that was pressed. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.LocationItemControl.btnClose_Click(System.Object,System.EventArgs)">
	<summary> Event use to close the form. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.LocationItemControl.Description_QueryPopUp(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>  Event use to make popupsize of memo edit controls same size as parent control. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.LocationItemControl.TabLocation_SelectedPageChanged(System.Object,DevExpress.XtraTab.TabPageChangedEventArgs)">
	<summary>
 Event use to determine the page you have selected to impost appropriate action.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.LocationControl.WarehouseDataset">
	<summary> Property that gets the value of WarehouseDataset . </summary>
	<value> Interprise.Framework.Inventory.DatasetGateway.WarehouseDatasetGateway </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.LocationControl.IsReadOnly">
	<summary> Property that gets to enable/disable controls for editing. </summary>
	<value>Boolean, If true then the property will set to readonly otherwise not. </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.LocationControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>Interprise.Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.LocationControl.CurrentDataset">
	<summary> Property that gets the value of CurrentDataset . </summary>
	<value>Interprise.Framework.Base.DatasetComponent.BaseDataset </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.LocationControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.LocationControl.UpdateDatasetFunction">
	<summary>
 Property that use to update dataset
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.LocationControl.WarehouseCode">
	<summary>Property that gets the value of WarehouseCode. </summary>
	<value> String </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.LocationControl.LoadGridSettings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.LocationControl.LoadDataSet(System.String[][],System.String[][],Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
	</summary>
	<param name="commandSet"></param>
	<param name="parameters"></param>
	<param name="clearTableType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.LocationControl.ShowLocationItemsForm(System.Boolean@)">
	<summary> Method use to display items in the current locaton </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.LocationControl.gridviewLocation_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary> Method use to initialize new row. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.LocationControl.gridviewLocation_InvalidRowException(System.Object,DevExpress.XtraGrid.Views.Base.InvalidRowExceptionEventArgs)">
	<summary> Event to handle duplicate error </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.LocationControl.gridviewLocation_InvalidValueException(System.Object,DevExpress.XtraEditors.Controls.InvalidValueExceptionEventArgs)">
	<summary> Event to handle duplicate error </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.LocationControl.gridviewLocation_ValidateRow(System.Object,DevExpress.XtraGrid.Views.Base.ValidateRowEventArgs)">
	<summary> Event to validate the current row. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.LocationControl.gridviewLocation_FocusedRowChanged(System.Object,DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs)">
	<summary> Event to focus in Location Code if focused row is new. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.LocationControl.gridviewLocation_GotFocus(System.Object,System.EventArgs)">
	<summary> Event to show the caret in the grid when focused. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.LocationControl.grdLocations_ProcessGridKey(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary> Event to check the keyboard key combination that was pressed. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.LocationControl.rhypLocationCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.HeaderControl.CurrentFacade">
	<summary> Returns CurrentFacade. </summary>
	<value>  Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.HeaderControl.IsReadOnly">
	<summary> Property that gets to enable/disable controls for editing. </summary>
	<value>Boolean, If true then the property will set to readonly otherwise not. </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.HeaderControl.WarehouseDataset">
	<summary> Returns  WarehouseDataset . </summary>
	<value> Framework.Inventory.DatasetGateway.WarehouseDatasetGateway</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.HeaderControl.IsNew">
	<summary> Method use to Determine if the record is new one. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.HeaderControl.Focus">
	<summary>
 Method use to set the focus
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.HeaderControl.cboWarehouseCode_Enter(System.Object,System.EventArgs)">
	<summary> Event use to select all text when Warehouse Code received focus by keyboard. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.HeaderControl.cboWarehouseCode_Leave(System.Object,System.EventArgs)">
	<summary> Event use to display [To be generated] when user didnt specify a WarehouseCode. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.HeaderControl.cboWarehouseCode_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary> Event use to select all text when Warehouse Code received focus by mouse. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.AddressControl.CurrentDataset">
	<summary> Property that gets the value of CurrentDataset. </summary>
	<value> Framework.Base.DatasetComponent.BaseDataset</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.AddressControl.CurrentFacade">
	<summary> Returns the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.AddressControl.IsReadOnly">
	<summary> Property that gets to enable/disable controls for editing. </summary>
	<value>Boolean, If true then the property will set to readonly otherwise not. </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.AddressControl.WarehouseDataset">
	<summary> Property that gets the value of WarehouseDataset . </summary>
	<value> Interprise.Framework.Inventory.DatasetGateway.WarehouseDatasetGateway</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.UnitMeasure.UnitMeasureControl.CurrentDataset">
	<summary> Property that gets the value of CurrentDataset. </summary>
	<value>Framework.Base.DatasetComponent.BaseDataset </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.UnitMeasure.UnitMeasureControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.UnitMeasure.UnitMeasureControl.AddData(System.String)">
	<summary>
	</summary>
	<param name="documentCode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.UnitMeasure.UnitMeasureControl.LoadDataSet(System.String)">
	<summary>
	</summary>
	<param name="documentCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.UnitMeasure.UnitMeasureControl.Print(System.Boolean)">
	<summary>
 Print report for current transaction.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.UnitMeasure.UnitMeasureControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.UnitMeasure.UnitMeasureControl.UndoChanges">
	<summary>
 Reject changes made to the datasouce.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.UnitMeasure.UnitMeasureControl.m_unitMeasureFacade_Validated(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.ValidatedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.UnitMeasure.UnitMeasureControl.UnitMeasureControl_Load(System.Object,System.EventArgs)">
	<summary> disable print menu </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Category.CategoryAccountsControl.CurrentDataset">
	<summary> Property that gets the value of CurrentDataset. </summary>
	<value> Framework.Base.DatasetComponent.BaseDataset</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Category.CategoryAccountsControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Category.CategoryAccountsControl.CategoryDataset">
	<summary> Property that gets the value of CategoryDataset. </summary>
	<value>Framework.Inventory.DatasetGateway.SystemManager.CategoryDatasetGateway  </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryAccountsControl.LoadDataSet(System.String[][],Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
	</summary>
	<param name="commandSet"></param>
	<param name="clearTableType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryAccountsControl.LoadGlassTemplateGridSettings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryAccountsControl.LoadGridSettings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryAccountsControl.cborepGlClassCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryAccountsControl.cborepGlClassCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryAccountsControl.repcboAccountCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryAccountsControl.repcboAccountCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryAccountsControl.rephypWarehouseCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryAccountsControl.repcboAccountCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>Filter account code to show only active account codes if ishideGLCode is set to true in accountingpreference table
 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Warehouse.HeaderControl.CurrentFacade">
	<summary> Property that gets the value of CurrentFacade. </summary>
	<value> Interprise.Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Warehouse.HeaderControl.IsReadOnly">
	<summary> Property that use to gets or sets the value to enable or disable grid column. </summary>
	<value>Boolean, If true then the property wil set to readonly. </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Warehouse.HeaderControl.StockTransferDataset">
	<summary> Returns  StockTransferDataset . </summary>
	<value> Interprise.Framework.Inventory.DatasetGateway.StockTransferDatasetGateway</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.HeaderControl.Focus">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferByLocationControl.InternalStockTransferDataset">
	<summary> Property that gets the value of InternalStockTransferDataset. </summary>
	<value>Interprise.Framework.Inventory.DatasetGateway.InternalStockTransferDatasetGateway </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferByLocationControl.RowHandle">
	<summary> Property that use to gets the value of RowHandle. </summary>
	<value> Integer</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferByLocationControl.LocationTo">
	<summary> Property that use to get the value LocationTo. </summary>
	<value>String  </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferByLocationControl.LocationFrom">
	<summary>Property that use to gets LocationFrom. </summary>
	<value>  String</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferByLocationControl.CurrentFacade">
	<summary> Property that use to gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>Interprise.Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferByLocationControl.IsReadOnly">
	<summary> Property to enable/disable controls for editing. </summary>
	<value>Boolean, If true then the property will set to readonly, otherwise not.  </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferByLocationControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferByLocationControl.LoadGridSettings">
	<summary> Method use to loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferByLocationControl.repcboFromAccountCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Evemt use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferByLocationControl.repcboFromAccountCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Evemt use to brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferByLocationControl.repcboLocationFrom_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Evemt use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferByLocationControl.repcboLocation_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Evemt use to brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferByLocationControl.gridviewLocation_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary> Evemt use to initialize new row. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferByLocationControl.repcboLocationTo_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Evemt use to brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferByLocationControl.repcboLocationTo_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>Evemt use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferByLocationControl.repcboLocationTo_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary> Evemt use to triggers before the search combo list shows / use to assign filtering of the combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferByLocationControl.repcboLocationFrom_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>Event use to triggers before the search combo list shows / use to assign filtering of the combo list.   </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferByLocationControl.gridviewLocation_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
	</summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferByLocationControl.gridviewLocation_FocusedColumnChanged(System.Object,DevExpress.XtraGrid.Views.Base.FocusedColumnChangedEventArgs)">
	<summary>Event use to validate errors while the focused changed in the grid control.  </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferByLocationControl.TransferByLocationControl_Enter(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.CurrentFacade">
	<summary>Event use to gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>Interprise.Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.Focus">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.InternalStockTransferDataset">
	<summary>Property that use to gets the value of InternalStockTransferDataset. </summary>
	<value> Interprise.Framework.Inventory.DatasetGateway.InternalStockTransferDatasetGateway</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.ItemCode">
	<summary> Property that use to display value of the specified cell. </summary>
	<value>  String</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.ItemName">
	<summary>
 Return the selected item name.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.IsReadOnly">
	<summary> Property that use to enable/disable controls for editing. </summary>
	<value> Boolean, If true then the property will set to readonly otherwise not.</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.RowHandle">
	<summary> Method use to gets the focused row by its handle. </summary>
	<value> Integer</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.LoadGridSettings">
	<summary> Method use to loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.AssignSourceAccount">
	<summary> Method use to assign source account. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.repcboFromAccountCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.repcboUnitMeasureCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary> Use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.repcboUnitMeasure_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.repcboItemCode_AddNewValue(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Event that adds new value in combo list..
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.repcboItemCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.gridviewItems_FocusedColumnChanged(System.Object,DevExpress.XtraGrid.Views.Base.FocusedColumnChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.gridviewItems_FocusedRowChanged(System.Object,DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.gridviewItems_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary> Initialize new row. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.gridviewItems_InvalidValueException(System.Object,DevExpress.XtraEditors.Controls.InvalidValueExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.gridviewItems_InvalidRowException(System.Object,DevExpress.XtraGrid.Views.Base.InvalidRowExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.gridviewItems_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.gridviewItems_ShowingEditor(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.repcboToAccountCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.barMngrGridContextMenu_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary> Event in clicking for barMngrGridContextMenu. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.repcboToAccountCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary> Triggers before the search combo list shows / use to assign filtering of the combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.repcboFromAccountCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary> Triggers before the search combo list shows / use to assign filtering of the combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.repcboItemCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Brings you to particular item of the selected code. </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.repcboUnitMeasureCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.repcboLocationTo_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.repcboLocationTo_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.repcboLocationTo_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary> Triggers before the search combo list shows / use to assign filtering of the combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.repcboLocationFrom_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary> Triggers before the search combo list shows / use to assign filtering of the combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.repcboLocationFrom_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.repcboLocationFrom_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.repcboItemCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary> Triggers before the search combo list shows / use to assign filtering of the combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.TransferItemControl.TransferItemControl_Enter(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Internal.MainControl.CurrentFacade">
	<summary> Property that use to gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>Interprise.Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Internal.MainControl.CurrentDataset">
	<summary> Property that gets the value of CurrentDataset. </summary>
	<value>Interprise.Framework.Base.DatasetComponent.BaseDataset </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Internal.HeaderControl.CurrentFacade">
	<summary> Method use to gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>Interprise.Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Internal.HeaderControl.CurrentDataset">
	<summary>
 Returns the dataset used by this transaction.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Internal.HeaderControl.InternalStockTransferDataset">
	<summary> Returns InternalStockTransferDataset. </summary>
	<value>Interprise.Framework.Inventory.DatasetGateway.InternalStockTransferDatasetGateway </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Internal.HeaderControl.IsReadOnly">
	<summary> Property that use to enable/disable controls for editing. </summary>
	<value>Boolean, If true then property will set to readonly otherwise not.  </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Internal.HeaderControl.WarehouseCode">
	<summary> Property that use to gets the value of WarehouseCode </summary>
	<value>String  </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.HeaderControl.PopulateTransferType">
	<summary>
 Populate transfer type list .
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.HeaderControl.cboTransferType_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary> Event use to determines if transfer type is changed </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.HeaderControl.cboTransferType_Enter(System.Object,System.EventArgs)">
	<summary> Event use to enable/disable changing of transfer type </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.HeaderControl.cboWarehouseCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Redirect you to the warehouse form.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.HeaderControl.cboWarehouseCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Event use to assign selected values from the search combo list </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.HeaderControl.HeaderControl_Enter(System.Object,System.EventArgs)">
	<summary>
 Set focus to warehouse search combo.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.HeaderControl.memNotes_QueryPopUp(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Event use to set PopupStartSize.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.StockTakeValueControl.IsReadOnly">
	<summary> Property that use to enable/disable controls for editing. </summary>
	<value> Boolean, Check if it is readonly or not.</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.StockTakeValueControl.StockTakeDataset">
	<summary>Property that use to StockTakeDataset. </summary>
	<value>Interprise.Framework.Inventory.DatasetGateway.StockTakeDatasetGateway </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.StockTakeValueControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeValueControl.Focus">
	<summary>
 Method use to sets the focus when it loads.
 </summary>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeValueControl.LoadGridSettings">
	<summary> Loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.StockTakeValueControl.ShowItemInZeroQuantityByLocation">
	<summary>
 Method use to show item in zero quantity by location.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeValueControl.InitializeGridUpdate(System.Boolean)">
	<summary>
	</summary>
	<param name="beginUpdate"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeValueControl.gridviewStockTakeValue_CustomDrawCell(System.Object,DevExpress.XtraGrid.Views.Base.RowCellCustomDrawEventArgs)">
	<summary>
		<summary> Use to draw custom cell. </summary>
	</summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeValueControl.gridviewStockTakeValue_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary> Use to set the focus. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeValueControl.rephypItemCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeValueControl.rephypUnitMeasureCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Opens the item unit measure setup transaction.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.StockTakeListControl.CurrentDataset">
	<summary> Property that use to gets the value of CurrentDataset. </summary>
	<value>Interprise.Framework.Base.DatasetComponent.BaseDataset </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.StockTakeListControl.EnableItemSelection">
	<summary>  Property that use to sets the value of EnableItemSelection. </summary>
	<value>Boolean, Check if it is enable to select items. </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.StockTakeListControl.GroupByLocation">
	<summary> Property that use to gets or sets the value GroupByLocation. </summary>
	<value> Boolean, Check if the value is group by location, otherwise it will sets location of the groups. </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.StockTakeListControl.IsReadOnly">
	<summary> Property that use to enable/disable controls for editing. </summary>
	<value>Boolean, Check if it is readonly. </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.StockTakeListControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.StockTakeListControl.StockTakeDataset">
	<summary>  Property that use to gets the value of StockTakeDataset. </summary>
	<value> Interprise.Framework.Inventory.DatasetGateway.StockTakeDatasetGateway</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeListControl.CheckItems(System.String,System.Boolean)">
	<summary>
	</summary>
	<param name="locationCode"></param>
	<param name="isIncluded"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeListControl.LoadGridSettings">
	<summary> Loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeListControl.SetLocationFilter(System.String)">
	<summary>
 Filter items in the grid.
 </summary>
	<param name="locationCode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeListControl.gridStockTakeList_MouseEnter(System.Object,System.EventArgs)">
	<summary> Event use to select all text when Item Code received focus by keyboard. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeListControl.rephypItemCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>Event use to brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeListControl.StockTakeListControl_Enter(System.Object,System.EventArgs)">
	<summary> Event use to select all text when Item Code received focus by keyboard. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.LocationControl.CurrentDataset">
	<summary> Property that use to gets the value of CurrentDataset. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.LocationControl.CurrentFacade">
	<summary> Property that use to gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.LocationControl.FocusRowByLocationCode">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.LocationControl.LocationCode">
	<summary> Property that use to gets the value of LocationCode. </summary>
	<value>String </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.LocationControl.IsReadOnly">
	<summary> Property that use to enable/disable controls for editing. </summary>
	<value>Boolean </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.LocationControl.IsLocationEnabled">
	<summary> Property that use to gets or sets the value IsLocationEnabled. </summary>
	<value> Boolean</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.LocationControl.RowHandle">
	<summary> Property that use to gets the value of Rowhandle. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.LocationControl.SelectAllLocations">
	<summary> Property that use to sets the value of SelectAllLocations. </summary>
	<value> Boolean </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.LocationControl.StockTakeDataset">
	<summary> Property that gets the value of StockTakeDataset. </summary>
	<value> Interprise.Framework.Inventory.DatasetGateway.StockTakeDatasetGateway</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.LocationControl.CloseEditor">
	<summary> Method use to close editor. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.LocationControl.CheckAllLocations(System.Boolean)">
	<summary> Method use to check all locations. </summary>
	<remarks>
	</remarks>
	<param name="checked ">Retrieves checked. </param>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.LocationControl.LoadGridSettings">
	<summary> Loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.LocationControl.gridviewLocation_CellValueChanged(System.Object,DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs)">
	<summary> Event use to changed cell value. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.LocationControl.gridviewLocation_CellValueChanging(System.Object,DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.LocationControl.gridviewLocation_FocusedRowChanged(System.Object,DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs)">
	<summary> Event use to changed row focused. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.HeaderControl.CurrentFacade">
	<summary>Method use to gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Interprise.Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.HeaderControl.IsCurrentStockTakeDateReadOnly">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.HeaderControl.IsPrintedCheckEnabled">
	<summary> Method use to sets the value of IsPrintedCheckEnabled. </summary>
	<value>Boolean </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.HeaderControl.IsReadOnly">
	<summary> Property that use to enable/disable controls for editing. </summary>
	<value>Boolean </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.HeaderControl.StockTakeDataset">
	<summary> Returns StockTakeDataset. </summary>
	<value>Interprise.Framework.Inventory.DatasetGateway.StockTakeDatasetGateway </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.HeaderControl.Focus">
	<summary> Method use to set the focus. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.HeaderControl.SetLastStockTake(System.String)">
	<summary> Method use to set last stock take. </summary>
	<remarks>
	</remarks>
	<param name="WarehouseCode ">Retrieves the warehousecode to get the last stock take. </param>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.HeaderControl.dateCurrentStockTake_Closed(System.Object,DevExpress.XtraEditors.Controls.ClosedEventArgs)">
	<summary>
 Event use to refresh stock take list.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.HeaderControl.memoNotes_QueryPopUp(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Event use to set PopupStartSize to memoNotes.Size.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.WarehouseInfoControl.IsReadOnly">
	<summary> Property that use to enable/disable controls for editing. </summary>
	<value> Boolean</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.WarehouseInfoControl.UpdateDetails">
	<summary> Property that use to set the show details. </summary>
	<value> Boolean</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.WarehouseInfoControl.WarehouseAddress">
	<summary> Property that sets the value of warehouse address. </summary>
	<value>String </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.WarehouseInfoControl.WarehouseCode">
	<summary> Property that gets or sets the value of warehouse code. </summary>
	<value>String </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.WarehouseInfoControl.WarehouseDescription">
	<summary> Property that sets the value of warehouse description. </summary>
	<value> String</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.WarehouseInfoControl.cboWarehouseCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Event use to brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.WarehouseInfoControl.Focus">
	<summary> Method use to set the focus. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.WarehouseInfoControl.ShowDetails">
	<summary> Method use to show details. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.WarehouseInfoControl.UndoChanges">
	<summary> Method use to undo changes made to the dataset. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.WarehouseInfoControl.memDescription_QueryPopUp(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Event use to set PopupStartSize to memoNotes.Size.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferDetailControl.ItemCode">
	<summary> Property that gets the value of ItemCode. </summary>
	<value> String </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferDetailControl.ItemName">
	<summary>
 Return the selected item name.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferDetailControl.LocationCode">
	<summary> Property that gets the value of LocationCode. </summary>
	<value> String  </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferDetailControl.StockTransferDataset">
	<summary> Propert that gets the value of StockTransferDataset . </summary>
	<value> Interprise.Framework.Inventory.DatasetGateway.StockTransferDatasetGateway</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferDetailControl.IsReadOnly">
	<summary> Property that gets to enable/disable controls for editing. </summary>
	<value>Boolean, If true then the property will set to readonly otherwise not. </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferDetailControl.MoveNext">
	<summary> Method use to move next. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferDetailControl.MovePrevious">
	<summary> Method use to move previous. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferDetailControl.LoadGridSettings">
	<summary> Method loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferDetailControl.repcboItemCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferDetailControl.repcboItemCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>Event use to brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferDetailControl.repcboItemCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>Event use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferDetailControl.repcboLocationCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>Event use to triggers before the search combo list shows / use to assign filtering of the combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferDetailControl.repcboLocationCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>Event use to brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferDetailControl.repcboLocationTo_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>Event use to triggers before the search combo list shows / use to assign filtering of the combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferDetailControl.repcboLocationTo_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>Event use to brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferDetailControl.repcboLocationCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> 
 Event use to assign selected values from the search combo list. 
 </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferDetailControl.gridviewItemList_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary> Event use to initialize new row. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferDetailControl.gridviewItemList_HideCustomizationForm(System.Object,System.EventArgs)">
	<summary> Event use to save grid settings. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferDetailControl.gridviewItemList_InvalidValueException(System.Object,DevExpress.XtraEditors.Controls.InvalidValueExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferDetailControl.gridviewItemList_FocusedRowChanged(System.Object,DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferDetailControl.gridviewItemList_FocusedColumnChanged(System.Object,DevExpress.XtraGrid.Views.Base.FocusedColumnChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferDetailControl.gridviewItemList_InvalidRowException(System.Object,DevExpress.XtraGrid.Views.Base.InvalidRowExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferDetailControl.repcboUnitMeasureCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferDetailControl.repcboUnitMeasureCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferDetailControl.repcboUnitMeasureCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.ReloadData">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.CallingEntityType">
	<summary> Property that gets or sets the value of CallingEntityType. </summary>
	<value>Framework.Inventory.Shared.Enum.CallingEntity  </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.CurrentDataset">
	<summary> Property that gets the value of CurrentDataset . </summary>
	<value>Interprise.Framework.Base.DatasetComponent.BaseDataset </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.DocumentCode">
	<summary> Property that gets the value of transactions document code. </summary>
	<value>String</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.ItemCode">
	<summary> Property that use to read ItemCode of focused inventory item in the grid. </summary>
	<value> String </value>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.ItemName">
	<summary> Property that use to read ItemCode of focused inventory item in the grid. </summary>
	<value> String </value>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.ItemDescription">
	<summary>Property to read ItemDescription of focused inventory item in the grid.  </summary>
	<value> String</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.IsReadAsync">
	<summary>
 Indicates if loading of stock total is in asynchronous mode.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.RowHandle">
	<summary>Property that gets the value of RowHandle.  </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.StockTotalView">
	<summary>  Property that gets or sets the value of StockTotalView.</summary>
	<value>Framework.Inventory.Shared.Enum.StockTotalView  </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.WarehouseCode">
	<summary> Property use to read WarehouseCode of focused inventory item in the grid. </summary>
	<value>String </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.UnitMeasureQuantity">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.BeginLoadDataSet(System.String[][],Interprise.Framework.Base.Shared.Enum.ClearType,System.AsyncCallback,System.Object)">
	<summary>
	</summary>
	<param name="commandSet"></param>
	<param name="clearTableType"></param>
	<param name="callBack"></param>
	<param name="asyncState"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.LoadGridSettings">
	<summary>Method use to loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.LoadDataSet(System.String[][],Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
	</summary>
	<param name="commandSet"></param>
	<param name="clearTableType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.UpdateQuantity">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Method use to update the specified Tables in the daTabase.
 </summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.UndoChanges">
	<summary> Method use to undo changes made to the dataset. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.SetStockTotalView">
	<summary>  Method use to set the stock total view.</summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.ViewWarehouse">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.ViewOtherLocation">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.ViwStockDetail(Interprise.Framework.Base.Shared.Enum.StockDetailType)">
	<summary>
	</summary>
	<param name="stockType"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.cboAccountCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>Event use to assign selected values from the search combo list.  </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.LoadDataset_Completed(System.IAsyncResult)">
	<summary>
	</summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.rcboAccountCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>Event use to assign selected values from the search combo list.  </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.repcboLocationCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>Event use to triggers before the search combo list shows / use to assign filtering of the combo list.   </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.rephypUnitMeasureCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>Event use to brings you to particular item of the selected code.  </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.rephypUnitsInStockOherLocation_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>Event use to brings you to particular item of the selected code.</summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.rhypWarehouse_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Event use to brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.rhypItemCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Event use to brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.rephypDetail_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>Event use to brings you to particular item of the selected code.  </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.repmemoItemDescription_QueryPopUp(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>Event use to show new popup window.  </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.gridviewStockTotal_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockTotalControl.barmanagerStockTotal_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.LocationStockCountForm.ViewStyle">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.ItemAccountsControl.ItemDetailDataset">
	<summary> Property that gets the value of ItemDetailDataset. </summary>
	<value>Interprise.Framework.Inventory.DatasetGateway.ItemDetailDatasetGateway </value>
	<remarks>
	</remarks>
	<returns>ItemDetailDatasetGateway</returns>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.ItemAccountsControl.IsFromWizard">
	<summary>Property that gets or sets the value of IsFromWizard </summary>
	<value>Boolean </value>
	<remarks>
	</remarks>
	<returns>Boolean </returns>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.ItemAccountsControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>Interprise.Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
	<returns>IBaseInterface</returns>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.ItemAccountsControl.CurrentDataset">
	<summary>Property that gets CurrentDataset. </summary>
	<value>Interprise.Framework.Base.DatasetComponent.BaseDataset </value>
	<remarks>
	</remarks>
	<returns>BaseDataset</returns>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.ItemAccountsControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.ItemAccountsControl.ShowGroupBox">
	<summary>
 Transfer accounts to another container
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemAccountsControl.LoadGridSettings">
	<summary> Loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemAccountsControl.LoadDataSet(System.String[][],Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
 Method use to fetch data from the daTabase and populates the Tables specified in the parameters. 
 </summary>
	<param name="commandSet"></param>
	<param name="clearTableType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemAccountsControl.SetGridFilter">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemAccountsControl.cboGlClassCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="e ">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemAccountsControl.cboGlClassCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="eRow ">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemAccountsControl.cboGlClassCode_AddNewValue(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary> Use to add values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemAccountsControl.repcboAccountCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>Event use to assign selected values from the search combo list.  </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="erow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemAccountsControl.repcboAccountCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>Event use to brings you to particular item of the selected code.  </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemAccountsControl.repcboWarehouse_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>Event use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemAccountsControl.repcboWarehouse_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Event use to brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemAccountsControl.repcboAccountCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>Filter account code to show only active account codes if ishideGLCode is set to true in accountingpreference table
 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources._16px_AddItem">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources._16px_CollapseAll">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources._16px_CopyFrom">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources._16px_CopyTo">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources._16px_DeleteAllCategory">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources._16px_DeleteAllDepartment">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources._16px_DeleteCategoryGroup">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources._16px_DeleteItem">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources._16px_ExpandAll">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources._16px_ExportPriceList">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources._16px_GiftCard">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources._16px_ImageEditor">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources._16px_LinkToWoohaa">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources._16px_ProfitAnalysis">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources._16px_Reset">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources._16px_ResetSelected">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources._16px_RevaluateLocation">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources._16px_UnLinkToWoohaa">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources._16px_ViewCommittedStocks">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources._16px_ViewInStock">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources._16px_ViewItems">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources._16px_ViewLocation">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources._16px_ViewOnBackOrder">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources._16px_ViewOtherLocation">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.AccountingViewJournalLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.AccountingViewJournalSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.add_item">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.AddCategoryLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.AddCategorySmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.AddDepartmentLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.AddDepartmentSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.AddItem">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.AddItemWebImage1">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.AddItemWebImage2">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.AddManufacturer">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.AddPricingBandDiscount">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.AddPricingLevel">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.AddSupplierLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.AddSupplierSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.AddSwatchItem">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.AddUnitMeasureLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.AddUnitMeasureSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.AddWebImage">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ApplyDescriptionToAllLanguage">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ApplyDescriptionToSpecificLanguage">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ApplyItemClassTemplate">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ApplySwatch">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ApplySwatch_16px">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ApplyToAllLanguage">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.AssemblyItem">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.AssemblyItemType">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.AttributesLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.AttributesSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.BuildAssemblyLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.BuildAssemblySmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.Bundle">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.BundleItemLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.BundleItemSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ChildCategory">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ChildDepartment">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.CloseLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.CloseSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.CollapseAll">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.Completed">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.Copy">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.Copy1">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.CopyBand">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.CopyFrom">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.CopyTo">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.CreateExcelTemplate">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.Criteria">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.CRMNewActivity">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.CRMNewCase">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.CRMNewContact">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.Delete">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.DeleteAll">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.DeleteAllCategory">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.DeleteAllDepartment">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.DeleteAttributeLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.DeleteAttributeSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.DeleteCategory">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.DeleteDepartment">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.DeleteItem">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.DeletePricing">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.DeleteSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.DeleteWebImage">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.DoubleClickToLoadimage">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.down">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.Edit">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ElectronicDownload">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ExpandAll">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ExportPriceList">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ExportPriceListSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.FilterCriteria">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.GenerateMatrixItemLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.GenerateMatrixItemSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.GeneratePriceBreak">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.GiftCard">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.GiftCardIcon">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.GiftCertificate">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.GiftCertificateIcon">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ImageLoadingDoubleClick">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ImageLoadingNoImage">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ImportPriceList">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ImportPriceList2">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.InternalMovement">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ItemTypeAssembly">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ItemTypeElectronicDownload">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ItemTypeKit">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ItemTypeMatrixGroup">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ItemTypeMatrixItem">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ItemTypeNonStock">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ItemTypeService">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ItemTypeStock">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.Kit">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.LightAmber">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.LightGray">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.LightGreen">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.LightRed">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.link">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.LinkToWoohaa">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.LoadPhoto">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.LoadPictureLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.LoadPictureSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.MatrixGroup">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.MatrixItem">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ModifyTemplateLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ModifyTemplateSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.MoveDownLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.MoveDownSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.MoveLeftLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.MoveLeftSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.MoveRightLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.MoveRightSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.MoveUpLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.MoveUpSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.New_Activity">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.New_Case">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.New_Contact">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.New_Documents">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.New_Fax">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.New_Mail">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.New_Note">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.NewAttribute">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.NewAttributeValue">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.NewDocumentLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.NewDocumentSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.NewEmail">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.NewFax">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.NewSupplier">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.NewTransaction">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.NoItems">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.NonStock">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.Opening_Balance">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.OpeningBalance">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ParentCategory">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ParentDepartment">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.PricingBand">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.PrintAgedStockSummaryReport">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.Profit_Analysis">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.Profit_Analysis1">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ProfitAnalysis">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.Refresh">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.Refresh_filter">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.RefreshSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.remove_mapping">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.RemoveImage">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.RemoveItemMapping">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.RenameItem">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.RenameWarehouse">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.Reset_web_cache">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ResetCache">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ResetCacheLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ResetCacheSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.Revaluate_all_location">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.RevaluateLocation">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.select_all">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.select_none">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.SelectAllLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.SelectAllSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.SelectNoneLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.SelectNoneSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.Service">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.Settings">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.Settings1">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.SettingsSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.Stock">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.Stock_adjustment">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.Stock_Internak_Movement">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.Stock_transfer">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.Stock_Valuation">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.StockAdjustment">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.StockTransfer">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.StockValuation">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.Swatches">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.SynchronizeWebCacheLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.SynchronizeWebCacheSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.UnLinkToWoohaa">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.up">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.Upload_Image">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.UploadImageLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.UploadImageSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.UserInfo">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.View_Journal">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ViewAttributeLarge">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ViewAttributeSmall">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ViewItem">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ViewItemLedger">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ViewItems">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ViewItemX">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ViewLocation">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ViewLocationFrom">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ViewLocationTo">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.ViewUnitOfMeasure">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.Write_letter">
	<summary>
  Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
</summary>
</member><member name="P:Interprise.Presentation.Inventory.My.Resources.Resources.Zoom">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="T:Interprise.Presentation.Inventory.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.UnitMeasure.UnitMeasureForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingLanguage.SellingLanguageForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.SellingLanguage.SellingLanguageControl.CallingEntity">
	<summary>
 Determines if what entity loads this transaction.
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.SellingLanguage.SellingLanguageControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.SellingLanguage.SellingLanguageControl.CurrentDataset">
	<summary>Property that gets the value of CurrentDataset. </summary>
	<value> Framework.Base.DatasetComponent.BaseDataset</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.SellingLanguage.SellingLanguageControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingLanguage.SellingLanguageControl.ChangeEntity">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingLanguage.SellingLanguageControl.Print(System.Boolean)">
	<summary>Method use to prints the currently selected item/transaction. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingLanguage.SellingLanguageControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingLanguage.SellingLanguageControl.UndoChanges">
	<summary>
 Reject changes made to the datasource.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingLanguage.SellingLanguageControl.Refresh">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingLanguage.SellingLanguageControl.SetupColumns">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingLanguage.SellingLanguageControl.m_sellingLanguageFacade_HomeSellingLanguageColumnChanged(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingLanguage.SellingLanguageControl.repcboCurrencyCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Opens the multi-currency form.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingLanguage.SellingLanguageControl.repcboCurrencyCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Assign currency code.
 </summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingLanguage.SellingLanguageControl.ListControlSellingLanguage_EndInitializeColumns(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingLanguage.SellingLanguageControl.SellingLanguageControl_Load(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingLanguage.SellingLanguageControl.ListControlSellingLanguage_ViewAll(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.CurrentDataset">
	<summary> Property that gets the value of CurrentDataset. </summary>
	<value> Framework.Base.DatasetComponent.BaseDataset</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.LanguageCode">
	<summary>
 Returns current language
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.TransactionType">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.AddData(System.String)">
	<summary> Method use to create a blank datarow on the first index of the related Tables. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.BeginLoadDepartment">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.LoadItems">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.CreateDetailControl">
	<summary>
 Method use to create the section control and attached them to the main control. 
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.GetDetailControl(Interprise.Extendable.Inventory.Presentation.SystemManager.SellingDepartment.ISellingDepartmentDetailInterface)">
	<summary>
	</summary>
	<param name="plugin">The control that serves as a plugin or replacement for the current control.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.GetItemControl(Interprise.Extendable.Inventory.Presentation.SystemManager.SellingDepartment.IItemInterface)">
	<summary>
	</summary>
	<param name="plugin">The control that serves as a plugin or replacement for the current control.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.GetMainWebOptionControl(Interprise.Extendable.Inventory.Presentation.SystemManager.SellingDepartment.IWebOptionInterface)">
	<summary>
 Create general control.
 </summary>
	<param name="plugin">The control that serves as a plugin or replacement for the current control.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.GetSortOrderControl(Interprise.Extendable.Inventory.Presentation.SharedControl.ITreeInterface)">
	<summary>
 Create sort order control.
 </summary>
	<param name="plugin">The control that serves as a plugin or replacement for the current control.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.DeleteData">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.EnableDisableControls">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.InitializeControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.LoadDataSet(System.String)">
	<summary>
 Loads particular record of selected department code.
 </summary>
	<param name="documentCode">The department code to be loaded. </param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.LoadWebOption">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.LoadDescriptionAndWebOptionDescription(System.String,System.String,System.String)">
	<summary>
	</summary>
	<param name="languageCode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.Print(System.Boolean)">
	<summary> 
 Prints the current transaction. 
 </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.Refresh">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.RefreshList">
	<summary>
 Method to refresh list when language code is changed.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.ResetCache">
	<summary>
 Reset web cache.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.SetLanguageFilter">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.SetWebOptionFilter">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.ShowNewForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.UploadImage">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.ValidateURL">
	<summary>
 Checks if the web service url is valid.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.btnMoveDown_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.btnMoveUp_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.m_mainWebOptionControl_WebSiteChanged(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.WebSiteChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.m_departmentfacade_Validated(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.ValidatedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.DoShowMessage(System.String,Interprise.Framework.Base.Shared.Enum.MessageWindowIcon)">
	<summary>
	</summary>
	<param name="message"></param>
	<param name="messageStyle"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.SelllingDepartmentControl_Load(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.TabListDetail_SelectedPageChanged(System.Object,DevExpress.XtraLayout.LayoutTabPageChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.treelistColumnEdit_ButtonClick(System.Object,DevExpress.XtraEditors.Controls.ButtonPressedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.treeMain_CustomDrawNodeCell(System.Object,DevExpress.XtraTreeList.CustomDrawNodeCellEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.PluginContainerItem_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.PluginContainerItemPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.SellingDepartment.IWebOptionInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.PluginContainerBaseDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.PluginContainerBaseDetailPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.SellingDepartment.IWebOptionInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.PluginContainerSortOrder_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.PluginContainerSortOrderPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SharedControl.ITreeInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.PluginContainerWebOption_AfterInitializePlugin(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.PluginContainerWebOption_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SelllingDepartmentControl.PluginContainerWebOptionPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.SellingDepartment.IWebOptionInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SellingDepartmentForm.GetMainControl(Interprise.Extendable.Inventory.Presentation.SystemManager.SellingDepartment.ISellingDepartmentInterface)">
	<summary>
 Create selling department control.
 </summary>
	<param name="plugin">The control that serves as a plugin or replacement for the current control.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SellingDepartmentForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SellingDeparmentDetailControl.CurrentFacade">
	<summary>
 Gets the current facade.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SellingDeparmentDetailControl.IsReadOnly">
	<summary>
 Enable/disable controls for editing.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SellingDeparmentDetailControl.LanguageCode">
	<summary>
 Return seletected Language Code.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SellingDeparmentDetailControl.SellingDepartmentDataSet">
	<summary> Property that gets the value SellingDepartmentDataSet. </summary>
	<value>  Interprise.Framework.Inventory.DatasetGateway.SystemManager.SellingDepartmentDataSetGateway</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SellingDeparmentDetailControl.Focus">
	<summary>
 Move focus to the first control.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SellingDeparmentDetailControl.UndoChanges">
	<summary>
 Method use to undo changes.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.SellingDeparmentDetailControl.cboParentDepartment_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerForm.SelectedPageName">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.CurrentDataset">
	<summary> Property that gets the value of CurrentDataset. </summary>
	<value> Framework.Base.DatasetComponent.BaseDataset</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.LanguageCode">
	<summary>
 Return s Locale Setting Code.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.AddData(System.String)">
	<summary> Method use to create a blank datarow on the first index of the related Tables. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.LoadItems">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.DeleteData">
	<summary>
 Method used to delete the selected record.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.EnableDisableControls">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.GetHtmLCode(System.String)">
	<summary>
	</summary>
	<param name="columnName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.InitializeControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.LoadDataSet(System.String)">
	<summary>
	</summary>
	<param name="documentCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.LoadWebOption">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.LoadDescriptionAndWebOptionDescription(System.String,System.String,System.String)">
	<summary>
	</summary>
	<param name="languageCode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.Print(System.Boolean)">
	<summary>
 Method use to prints the currently selected item/transaction.
  </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.SetWebOptionFilter">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.ShowNewForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.RefreshList">
	<summary>
 Method to refresh list when language code is changed.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.ResetCache">
	<summary>
 Reset web cache.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.UndoChanges">
	<summary>
 Method use to undo changes.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.UploadImage">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.ValidateURL">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.ManufacturerControl_Load(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.m_manufacturerFacade_Validated(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.ValidatedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.DoShowMessage(System.String,Interprise.Framework.Base.Shared.Enum.MessageWindowIcon)">
	<summary>
	</summary>
	<param name="message"></param>
	<param name="messageStyle"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.TabListDetail_SelectedPageChanged(System.Object,DevExpress.XtraTab.TabPageChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.PluginContainerWebOptionPluginInstance_WebSiteChanged(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.WebSiteChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.PluginContainerItem_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.PluginContainerItemPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.Manufacturer.IWebOptionInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.PluginContainerBaseDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.PluginContainerBaseDetailPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.Manufacturer.IWebOptionInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.PluginContainerWebOption_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerControl.PluginContainerWebOptionPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.Manufacturer.IWebOptionInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateListControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateListControl.CurrentDataset">
	<summary> Property that gets the value of CurrentDataset. </summary>
	<value>  Framework.Base.DatasetComponent.BaseDataset</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateListControl.AddData(System.String)">
	<summary> Method use to create a blank datarow on the first index of the related Tables. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateListControl.CreateDetailControl">
	<summary> Method use to create the section control and attached them to the main control. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateListControl.GetDetailControl(Interprise.Extendable.Inventory.Presentation.SystemManager.ItemClassTemplate.IItemClassTemplateInterface)">
	<summary>
 Returns the detail control
 </summary>
	<param name="plugin"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateListControl.DeleteData">
	<summary>
 Delete class template record.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateListControl.EnableDisableControls">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateListControl.LoadDataSet(System.String)">
	<summary>
	</summary>
	<param name="documentCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateListControl.Print(System.Boolean)">
	<summary>Method use to prints the currently selected item/transaction. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateListControl.ShowNewForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateListControl.UndoChanges">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateListControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateListControl.ItemClassTemplateListControl_DataChanged(System.Object,System.EventArgs)">
	<summary> disable editing of class codes of default class templates </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateListControl.ItemClassTemplateListControl_Load(System.Object,System.EventArgs)">
	<summary> disable print menu </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateListControl.PluginContainerBaseDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateForm.GetMainControl(Interprise.Extendable.Inventory.Presentation.SystemManager.ItemClassTemplate.ItemClassTemplateListInterface)">
	<summary>
	</summary>
	<param name="plugin">The control that serves as a plugin or replacement for the current control.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.ClassTemplateDataset">
	<summary>Property that gets the value of ClassTemplateDataset . </summary>
	<value>  Interprise.Framework.Inventory.DatasetGateway.SystemManager.ClassTemplateDatasetGateway</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.DisableEditing">
	<summary> Property that sets to disable editing of the controls </summary>
	<remarks>Boolean </remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.IsReadOnly">
	<summary> Property that gets to enable/disable controls for editing. </summary>
	<value>Boolean, If true then the property will set to readonly otherwise not. </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.Focus">
	<summary>
 Move focus on the first row row of the grid.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.InitDisplayName">
	<summary>
 Initialize display name.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.LoadGridSettings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.LoadXMLPackages(System.String[])">
	<summary>
	</summary>
	<param name="xmlPackages"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.LoadXMLPackages">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.PopulatePricingMethod">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.UpdateChanges">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.SetFilter">
	<summary>
 Set filter for repository controls.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.SetCurrencyFormat(System.String,Interprise.Framework.Base.Shared.Enum.EnmFormatType)">
	<summary>
	</summary>
	<param name="currencyCode"></param>
	<param name="formatType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.gridverticalItemClasTemplate_ShowingEditor(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.gridverticalItemClasTemplate_FocusedRowChanged(System.Object,DevExpress.XtraVerticalGrid.Events.FocusedRowChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.gridverticalItemClasTemplate_CustomDrawRowValueCell(System.Object,DevExpress.XtraVerticalGrid.Events.CustomDrawRowValueCellEventArgs)">
	<summary>
Format  display of currency related values.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.repcboSalesTaxCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.repcboSalesTaxCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> 
 Use to assign selected values from the search combo list. 
 </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.repcboGLClassCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.repcboItemType_EditValueChanged(System.Object,System.EventArgs)">
	<summary> Assigns default glClass codes depending on the item type selected. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.rephypCurrency_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name=" eRow  "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.rephypUnitMeasure_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.repcboSupplierCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.repcboCategoryCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> 
 Use to assign selected values from the search combo list. 
 </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.repcboManufacturerCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.repcboDepartmentCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Use to assign selected values from the search combo list.
 </summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.repcboDepartmentCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Opens the department transaction.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.repchkCommisionable_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.repcboCategoryCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.repcboSupplierCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.repcboSalesTaxCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.rephypUnitMeasure_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.repcboItemType_CloseUp(System.Object,DevExpress.XtraEditors.Controls.CloseUpEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemClassTemplate.ItemClassTemplateControl.repcboXMLPackage_QueryPopUp(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.GLClassTemplate.GLClassTemplateListControl.CurrentDataset">
	<summary> Property that gets the value of CurrentDataset. </summary>
	<value> Framework.Base.DatasetComponent.BaseDataset</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.GLClassTemplate.GLClassTemplateListControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.GLClassTemplate.GLClassTemplateListControl.AddData(System.String)">
	<summary>Method use to create a blank datarow on the first index of the related Tables. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.GLClassTemplate.GLClassTemplateListControl.DeleteData">
	<summary>
 Delete class template record.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.GLClassTemplate.GLClassTemplateListControl.CreateDetailControl">
	<summary> Method use to create the section control and attached them to the main control. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.GLClassTemplate.GLClassTemplateListControl.EnableDisableControls">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.GLClassTemplate.GLClassTemplateListControl.UndoChanges">
	<summary>
  Method use to undo changes made to the dataset. 
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.GLClassTemplate.GLClassTemplateListControl.LoadDataSet(System.String)">
	<summary>
	</summary>
	<param name="documentCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.GLClassTemplate.GLClassTemplateListControl.ShowNewForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.GLClassTemplate.GLClassTemplateListControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.GLClassTemplate.GLClassTemplateListControl.Print(System.Boolean)">
	<summary> 
 Prints the currently selected item/transaction. 
 </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.GLClassTemplate.GLClassTemplateListControl.GLClassTemplateListControl_DataChanged(System.Object,System.EventArgs)">
	<summary> Method use to disable editing of class codes of default class templates </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.GLClassTemplate.GLClassTemplateListControl.GLClassTemplateListControl_Load(System.Object,System.EventArgs)">
	<summary> Method use to disable print menu </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.GLClassTemplate.GLClassTemplateListControl.TabListDetail_SelectedPageChanged(System.Object,DevExpress.XtraLayout.LayoutTabPageChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.GLClassTemplate.GLClassTemplateListControl.PluginContainerBaseDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.GLClassTemplate.GLClassTemplateListControl.PluginContainerBaseDetailPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.GLClassTemplate.IGLClassTemplateGeneralInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.GLClassTemplate.GLClassTemplateListControl.PluginContainerDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.GLClassTemplate.GLClassTemplateListControl.PluginContainerDetailPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.GLClassTemplate.IGLClassTemplateInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.GLClassTemplate.GLClassTemplateForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.GLClassTemplate.GLClassTemplateControl.GLClassTemplateDataset">
	<summary>Returns GLClassTemplateDataset. </summary>
	<value> Interprise.Framework.Inventory.DatasetGateway.SystemManager.GLClassTemplateDatasetGateway</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.GLClassTemplate.GLClassTemplateControl.CurrentDataset">
	<summary> Property that gets the value of CurrentDataset. </summary>
	<value>Framework.Base.DatasetComponent.BaseDataset </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.GLClassTemplate.GLClassTemplateControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.GLClassTemplate.GLClassTemplateControl.SelectedRow">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.GLClassTemplate.GLClassTemplateControl.AssignAccountCode(System.Data.DataRowView,System.Data.DataRow)">
	<summary>
	</summary>
	<param name="glClassDetailRow"></param>
	<param name="accountCodeRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.GLClassTemplate.GLClassTemplateControl.BindGridControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Category.GeneralControl.CategoryDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Category.GeneralControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Category.GeneralControl.IsReadOnly">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Category.GeneralControl.LanguageCode">
	<summary>
 Returns current Language Code.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.GeneralControl.CloseEditor">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.GeneralControl.Focus">
	<summary>
 Set focus on control.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.GeneralControl.categoryHasTransaction(System.String)">
	<summary>
 Check if the category is part of any Item, if true the disallow to change the Virtual type of Normal to Web menu
 </summary>
	<param name="CategoryCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.GeneralControl.cboParentCategory_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.GeneralControl.cborepGlClassCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.GeneralControl.GeneralControl_Enter(System.Object,System.EventArgs)">
	<summary>
 Move focus on the first control.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.CurrentDataset">
	<summary> Returns CurrentDataset. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.CurrentFacade">
	<summary> Returns the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.CategoryCode">
	<summary> Returns CategoryCode. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.Description">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.LanguageCode">
	<summary>
 Gets/sets language Code.
 </summary>
	<value></value>
	<returns></returns>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.IsItemMappping">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.SelectedPageName">
	<summary>
 Sets the selected page that will be displayed.
 </summary>
	<value></value>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.TransactionType">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.AddData(System.String)">
	<summary> Create a blank datarow on the first index of the related Tables. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.BeginLoadCategory">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.CreateDetailControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.GetAccountsControl(Interprise.Extendable.Inventory.Presentation.SystemManager.Category.ICategoryAccountsInterface)">
	<summary>
 Create accounts control.
 </summary>
	<param name="plugin">The control that serves as a plugin or replacement for the current control.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.GetBandControl(Interprise.Extendable.Inventory.Presentation.SystemManager.Category.ICategoryBandInterface)">
	<summary>
	</summary>
	<param name="plugin">The control that serves as a plugin or replacement for the current control.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.GetGeneralControl(Interprise.Extendable.Inventory.Presentation.SystemManager.Category.IGeneralInterface)">
	<summary>
 Create general control.
 </summary>
	<param name="plugin">The control that serves as a plugin or replacement for the current control.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.GetMainWebOptionControl(Interprise.Extendable.Inventory.Presentation.SystemManager.Category.IWebOptionInterface)">
	<summary>
 Create general control.
 </summary>
	<param name="plugin">The control that serves as a plugin or replacement for the current control.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.GetSortOrderControl(Interprise.Extendable.Inventory.Presentation.SharedControl.ITreeInterface)">
	<summary>
 Create sort order control.
 </summary>
	<param name="plugin">The control that serves as a plugin or replacement for the current control.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.DeleteData">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.EnableDisableControls">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.InitializeControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.LoadDataSet(System.String)">
	<summary>
	</summary>
	<param name="documentCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.LoadWebOption">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.LoadDescriptionAndWebOptionDescription(System.String,System.String,System.String)">
	<summary>
	</summary>
	<param name="languageCode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.Print(System.Boolean)">
	<summary> 
 Prints the currently selected item/transaction. 
 </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.ProcessKeyPreview(System.Windows.Forms.Message@)">
	<summary> Method use to detects the keys pressed by the user </summary>
	<remarks>
	</remarks>
	<param name="m ">Sets as System.Windows.Forms.Message</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.ResetCache(System.Object,System.EventArgs)">
	<summary>
 Reset web cache.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.RemoveItemMapping">
	<summary>
 Remove items that are attached to a particular category.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.SelectPage(System.Int32)">
	<summary> Method use to set focus from one page to another. Page is a group of controls. </summary>
	<remarks>
	</remarks>
	<param name="key "><para>Retrieves the key as integer when press page up or page down</para>
	</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.SetLanguageFilter">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.SetWebOptionFilter">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.ShowNewForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.ShowSortOrderForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.Refresh">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.RefreshList">
	<summary>
 Method to refresh list when language code is changed.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.UndoChanges">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.UploadImage">
	<summary>
 Upload the web images to the web server
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.ValidateURL">
	<summary>
 Checks if the web service url is valid.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.btnEditItemSortOrder_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.CategoryListDetailControl_DataChanged(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.CategoryListDetailControl_Load(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.m_categoryfacade_Validated(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.ValidatedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.DoShowMessage(System.String,Interprise.Framework.Base.Shared.Enum.MessageWindowIcon)">
	<summary>
	</summary>
	<param name="message"></param>
	<param name="messageStyle"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.PluginContainerWebOptionPluginInstance_WebSiteChanged(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.WebSiteChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.TabListDetail_SelectedPageChanged(System.Object,DevExpress.XtraTab.TabPageChangedEventArgs)">
	<summary>
 Event use to determine the page you have selected to impost appropriate action 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.treelistColumnEdit_ButtonClick(System.Object,DevExpress.XtraEditors.Controls.ButtonPressedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.treeMain_CustomDrawNodeCell(System.Object,DevExpress.XtraTreeList.CustomDrawNodeCellEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.PluginContainerBandDiscount_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.PluginContainerBaseDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.PluginContainerSortOrder_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.PluginContainerAccount_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.PluginContainerWebOption_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.PluginContainerControl1_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Category.CategoryListDetailControl.PluginContainerControl1PluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Base.Presentation.Generic.IBaseFormSectionInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Pricing.CategoryDiscountBand.GeneralControl.CurrentFacade">
	<summary>
 Returns current facade.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Pricing.CategoryDiscountBand.GeneralControl.Band">
	<summary>
 Property that gets or sets the value of Band.
 </summary>
	<value>String</value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.CategoryDiscountBand.GeneralControl.Focus">
	<summary>
 Method use set the focus.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.CategoryDiscountBand.GeneralControl.UndoChanges">
	<summary>
 Method use to undo changes.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.CategoryDiscountBand.CategoryBandForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Pricing.CategoryDiscountBand.CategoryBandControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Pricing.CategoryDiscountBand.CategoryBandControl.CurrentDataset">
	<summary>Property that gets the value of CurrentDataset. </summary>
	<value> Framework.Base.DatasetComponent.BaseDataset</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.CategoryDiscountBand.CategoryBandControl.AddData(System.String)">
	<summary> Create a blank datarow on the first index of the related Tables. </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.CategoryDiscountBand.CategoryBandControl.EnableDisableControls">
	<summary>
 Method use to enable or disable controls for editing 
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.CategoryDiscountBand.CategoryBandControl.LoadDataSet(System.String)">
	<summary>
 Method use to read the data from the Table to the dataset.
 </summary>
	<param name="documentCode">Use to filter the row the in the Table</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.CategoryDiscountBand.CategoryBandControl.ShowNewForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.CategoryDiscountBand.CategoryBandControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Method use to save the data to the daTabase.
 </summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.CategoryDiscountBand.CategoryBandControl.UndoChanges">
	<summary>
 Method use to undo changes.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.CategoryDiscountBand.CategoryBandControl.PluginContainerCategory_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.CategoryDiscountBand.CategoryBandControl.PluginContainerBaseDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Base.BaseControl.UserLanguageCode">
	<summary>
Method use to gets the current languagecode of the user
 </summary>
	<returns>String </returns>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Base.BaseControl.GetSelectedRow(DevExpress.XtraGrid.Views.Grid.GridView)">
	<summary>
	</summary>
	<param name="gridview"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Base.BaseControl.LoadDataSet(System.String[][],Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
	</summary>
	<param name="commandSet"></param>
	<param name="clearTableType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Base.BaseControl.LoadDataSet(System.String[][],System.String[][],Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
	</summary>
	<param name="commandSet"></param>
	<param name="parameters"></param>
	<param name="clearTableType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeForm.AttributeValue">
	<summary>
 Property that sets the value of  m_attributecontrol.AttributeValue
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeDetailControl.AttributeDataset">
	<summary> Property that gets the value of AttributeDataset. </summary>
	<value> Interprise.Framework.Inventory.DatasetGateway.SystemManager.AttributeDatasetGateway</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeDetailControl.CurrentDataset">
	<summary>Property that gets the value of CurrentDataset. </summary>
	<value> Framework.Base.DatasetComponent.BaseDataset</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeDetailControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeDetailControl.IsAttributeReadOnly">
	<summary>
  Property that set the control to read only
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeDetailControl.IsReadOnly">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeDetailControl.Focus">
	<summary>
 Set focus to grid control
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeDetailControl.UndoChanges">
	<summary>
 Method use to undo changes.
 </summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeControl.AttributeValue">
	<summary>
 Property that set the value  m_attributedetail.AttributeValue
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeControl.CurrentDataset">
	<summary>Property that gets the value of CurrentDataset. </summary>
	<value> Framework.Base.DatasetComponent.BaseDataset</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeControl.AddData(System.String)">
	<summary> Method use to create a blank datarow on the first index of the related Tables. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeControl.CreateDetailControl">
	<summary> Method use to create the section control and attached them to the main control. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeControl.GetAttributeDetailControl(Interprise.Extendable.Inventory.Presentation.SystemManager.Attribute.AttributeDetailInterface)">
	<summary>
 Create attribute detail Control
 </summary>
	<param name="plugin">The control that serves as a plugin or replacement for the current control.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeControl.GetAttributeValueControl(Interprise.Extendable.Inventory.Presentation.SystemManager.Attribute.IAttributeValueInterface)">
	<summary>
 Create attribute detail Control
 </summary>
	<param name="plugin">The control that serves as a plugin or replacement for the current control.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeControl.EnableDisableControls">
	<summary>
 Method use to enable or disable controls for editing 
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeControl.InitializeControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeControl.LoadDataSet(System.String)">
	<summary>
	</summary>
	<param name="documentCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeControl.Print(System.Boolean)">
	<summary>
 Print report for current transaction.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeControl.ShowNewForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeControl.UndoChanges">
	<summary>
 Method use to undo changes.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeControl.AttributeControl_Load(System.Object,System.EventArgs)">
	<summary> disable print menu </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeControl.PluginContainerAttributeValue_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeControl.PluginContainerAttributeValuePluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.Attribute.IAttributeValueInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeControl.PluginContainerBaseDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeControl.PluginContainerBaseDetailPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.Attribute.AttributeDetailInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.StockingLevelControl.ItemCode">
	<summary> Property that gets or sets the value of the ItemCode.</summary>
	<value> String</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.StockingLevelControl.LocationCode">
	<summary>Property that gets or sets the value of LocationCode.  </summary>
	<value>String </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.StockingLevelControl.WarehouseCode">
	<summary>Property that gets or sets the value of WarehouseCode.  </summary>
	<value>String </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.StockingLevelControl.ViewStyle">
	<summary> Property that gets or sets the value of  ViewStyle.</summary>
	<value>Framework.Inventory.Shared.Enum.StockingLevel  </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.StockingLevelControl.CurrentDataset">
	<summary> Property that gets the value of CurrentDataset. </summary>
	<value>Framework.Base.DatasetComponent.BaseDataset </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.StockingLevelControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.StockingLevelControl.UnitMeasureQuantity">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.StockingLevelControl.ShowZeroLocation">
	<summary>
 Property that show or hide location if units in stock is zero.
 </summary>
	<value>Boolean, If true then it will show all locations with zero unit stocks otherwise not.</value>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.StockingLevelControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockingLevelControl.BeginLoadDataSet(System.String[][],Interprise.Framework.Base.Shared.Enum.ClearType,System.AsyncCallback,System.Object)">
	<summary>
	</summary>
	<param name="commandSet"></param>
	<param name="clearTableType"></param>
	<param name="callBack"></param>
	<param name="asyncState"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockingLevelControl.Focus">
	<summary>Method use to set the focus when it loads. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockingLevelControl.LoadGridSettings">
	<summary> Loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockingLevelControl.LoadDataSet(System.String[][],Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary> Method use to fetch data from the daTabase and populates the Tables specified in the parameters. </summary>
	<remarks>
	</remarks>
	<param name="commandSet">Sets the parameterset as string. </param>
	<param name="clearTableType">Sets the clearTabletype as none.</param>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockingLevelControl.SetViewStyle">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockingLevelControl.ShowHideZeroLocation">
	<summary>
 Method use to show location with units stock .
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockingLevelControl.SetPageText(System.Object,System.String)">
	<summary>
	</summary>
	<param name="containerPage"></param>
	<param name="itemCode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockingLevelControl.SetGridDataSource">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockingLevelControl.UpdateQuantity">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockingLevelControl.LoadDataset_Completed(System.IAsyncResult)">
	<summary>
  Event use to triggers after the asyncronous reading is completed.
 </summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.StockingLevelControl.rephypLocationCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Method use to brings you to particular item of the selected code </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.RecentTransactionControl.CurrentFacade">
	<summary>Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Interprise.Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.RecentTransactionControl.CurrentDataset">
	<summary> Property that gets the value of CurrentDataset. </summary>
	<value>Interprise.Framework.Base.DatasetComponent.BaseDataset </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.RecentTransactionControl.DocumentCode">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.RecentTransactionControl.ItemTransactionType">
	<summary>Property that gets the value of ItemTransactionType.</summary>
	<value> String</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.RecentTransactionControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.RecentTransactionControl.TransactionCode">
	<summary> Property that gets the value of TransactionCode.</summary>
	<value>
	</value>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.RecentTransactionControl.TransactionType">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.RecentTransactionControl.ItemType">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.RecentTransactionControl.BeginLoadDataSet(System.String[][],Interprise.Framework.Base.Shared.Enum.ClearType,System.AsyncCallback,System.Object)">
	<summary>
	</summary>
	<param name="commandSet"></param>
	<param name="clearTableType"></param>
	<param name="callBack"></param>
	<param name="asyncState"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.RecentTransactionControl.SetDataSource">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.RecentTransactionControl.rephypDocumentCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>Event use to brings you to particular item of the selected code.  </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.RecentTransactionControl.LoadDataset_Completed(System.IAsyncResult)">
	<summary>
	</summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.RecentTransactionControl.ChangeMouseCursor">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.RecentTransactionControl.rephypItemCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.WarehouseInformationControl.CurrentDataset">
	<summary> Property that gets the value of CurrentDataset. </summary>
	<value> Framework.Base.DatasetComponent.BaseDataset </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.WarehouseInformationControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.WarehouseInformationControl.IsReadOnly">
	<summary> Property that use to enable/disable controls for editing. </summary>
	<value> Boolean</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.WarehouseInformationControl.UpdateDetails">
	<summary> Property that use to sets the value of UpdateDetails. </summary>
	<value>Boolean </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.WarehouseInformationControl.WarehouseAddress">
	<summary> Property that use to gets or sets the value of WarehouseAddress.</summary>
	<value> String </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.WarehouseInformationControl.WarehouseBinding">
	<summary>Property that use to sets the value of WarehoueBinding.  </summary>
	<value> System.Windows.Forms.Binding </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.WarehouseInformationControl.WarehouseCode">
	<summary> Property that use to gets or sets the value of WarehouseCode. </summary>
	<value> String</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.WarehouseInformationControl.WarehouseDescription">
	<summary>Property that use to sets the value of WarehouseDescription.  </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.WarehouseInformationControl.ClearDetails">
	<summary> Method use to clear details. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.WarehouseInformationControl.ShowDetails">
	<summary> Method use to show details. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.WarehouseInformationControl.UndoChanges">
	<summary>Method use to undo changes made to the dataset. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.WarehouseInformationControl.cboWarehouseCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>Event use to brings you to particular item of the selected code.  </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.WarehouseInformationControl.cboWarehouseCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>  Event use to assign selected values from the search combo list.</summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow "> Retrieves an event of certain control.</param>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Warehouse.SourceWarehouseControl.CurrentDataset">
	<summary> Property that use to gets or sets the value of CurrentDataset. </summary>
	<value>Framework.Base.DatasetComponent.BaseDataset </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Warehouse.SourceWarehouseControl.CurrentFacade">
	<summary> Property that use to gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Warehouse.SourceWarehouseControl.IsReadOnly">
	<summary> Property that use to enable/disable controls for editing. </summary>
	<value>Boolean, If true then the property will set to readonly otherwise not. </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Warehouse.SourceWarehouseControl.StockTransferDataset">
	<summary> Property that use to gets the value of StockTransferDataset. </summary>
	<value>Interprise.Framework.Inventory.DatasetGateway.StockTransferDatasetGateway </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.SourceWarehouseControl.ShowWarehouseDetails">
	<summary> Method use to show warehouse details. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.SourceWarehouseControl.UndoChanges">
	<summary> Method use to undo changes made to the dataset. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.SourceWarehouseControl.cboSourceWarehouseCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.SourceWarehouseControl.cboSourceWarehouseCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.SourceWarehouseControl.cboSourceWarehouseCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.SourceWarehouseControl.cboSourceWarehouseCode_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Warehouse.DestinationWarehouseControl.CurrentDataset">
	<summary> Property that use to gets the value of CurrentDataset. </summary>
	<value>Framework.Base.DatasetComponent.BaseDataset </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Warehouse.DestinationWarehouseControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Warehouse.DestinationWarehouseControl.IsReadOnly">
	<summary> Property that gets or sets the value to enable/disable controls for editing. </summary>
	<value>Boolean, If true then the property will set to readonly</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Warehouse.DestinationWarehouseControl.StockTransferDataset">
	<summary> Property that gets the value of StockTransferDataset. </summary>
	<value>Interprise.Framework.Inventory.DatasetGateway.StockTransferDatasetGateway </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.DestinationWarehouseControl.ShowWarehouseDetails">
	<summary> Method use to show warehouse details. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.DestinationWarehouseControl.UndoChanges">
	<summary> Method use to undo changes made to the dataset. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.DestinationWarehouseControl.cboDestinationWarehouseCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Event use to brings you to particular item of the selected code </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.DestinationWarehouseControl.cboDestinationWarehouseCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.DestinationWarehouseControl.cboDestinationWarehouseCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> use to assign selected values from the search combo list </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow "> Retrieves an event of certain control.</param>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.HTMLControl.HTML">
	<summary>
 Gets/sets html content of the html editor control.
 </summary>
	<value></value>
	<returns></returns>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.HTMLControl.LanguageCode">
	<summary>
 Returns current Language Code.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.HTMLControl.IsReadOnly">
	<summary>
 Enable / disable control
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.HTMLControl.LoadHTML(System.String)">
	<summary>
 Loads the html content of current language selected.
 </summary>
	<param name="htmlCode"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Cost.CostingDetailForm.DocumentCode(System.Data.DataRow)">
	<summary>
 Property that gets or sets the value of DocumentCode.
 </summary>
	<param name="readRow"></param>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Cost.CostingDetailForm.ItemDescription">
	<summary>
 Property that gets or sets the value of ItemDescription.
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Cost.CostingDetailForm.ItemCode">
	<summary>
 Property that gets or sets the value of ItemCode.
 </summary>
	<value></value>
</member><member name="M:Interprise.Presentation.Inventory.Item.Cost.CostingDetailForm.CostingDetailForm_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
	<summary>
 Event that trigger when the form is closing if you want to save the changes you have made.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Cost.CostingDetailForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Pricing.PricingControl.CurrencyCode">
	<summary>
 Retruns selected currency.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Pricing.PricingControl.CurrentDataset">
	<summary> Property that gets the value of CurrentDataset. </summary>
	<value> Interprise.Framework.Base.DatasetComponent.BaseDataset</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Pricing.PricingControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Interprise.Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Pricing.PricingControl.IsFromWizard">
	<summary>
 Indicates if this control is loaded from wixard or not.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Pricing.PricingControl.ItemDetailDataset">
	<summary>
 Property that gets the value of ItemDetailDataset .
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Pricing.PricingControl.IsColumnAutoWidth">
	<summary>
 Get or set the the width of the column pricing method.
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Pricing.PricingControl.IsAutoRecalculate">
	<summary>
 Indicates if other currencies will be recalculate automatically.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Pricing.PricingControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingControl.ApplyDefaultPricingSettings(System.Data.DataView,Interprise.Framework.Inventory.Shared.Enum.DefaultPricingType)">
	<summary>
	</summary>
	<param name="pricingDataSource"></param>
	<param name="pricingType"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingControl.ApplyPricing(System.Data.DataRowView,System.String,System.Object)">
	<summary>
 Recalculates pricing on foreign currencies.
 </summary>
	<param name="pricingDetailRowView"></param>
	<param name="fieldName"></param>
	<param name="value"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingControl.Focus">
	<summary>
 Move focus on the first row of the grid.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingControl.PopulatePricingMethod">
	<summary>
 Add pricing method on combo list.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingControl.LoadGridSettings">
	<summary>
 Method use to loads default grid settings.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingControl.GridPricingBeginUpdate(System.Boolean)">
	<summary>
	</summary>
	<param name="begin"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingControl.gridviewPricing_CellValueChanged(System.Object,DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingControl.gridviewPricing_CustomDrawCell(System.Object,DevExpress.XtraGrid.Views.Base.RowCellCustomDrawEventArgs)">
	<summary>
 Format cell for specific currency.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingControl.gridviewPricing_FocusedColumnChanged(System.Object,DevExpress.XtraGrid.Views.Base.FocusedColumnChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingControl.gridviewPricing_FocusedRowChanged(System.Object,DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingControl.gridviewPricing_ShowingEditor(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingControl.PricingControl_Enter(System.Object,System.EventArgs)">
	<summary>
 Move the focus to the grid control when the section got focus.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingControl.rephypCurrencyCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Method use to brings you to particular item of the selected code </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingControl.rephypItemCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.SearchEngineControl.Datasource">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.SearchEngineControl.InitializeControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.SearchEngineControl.memoControls_QueryPopUp(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary> Use to change the start size of popup window. </summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="e ">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.SearchEngineControl.memoControlst_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.PageSettingControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.PageSettingControl.Datasource">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.PageSettingControl.WebSiteCode">
	<summary>
 Gets /sets the currently selected web site.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.PageSettingControl.XMLPackages">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.PageSettingControl.Focus">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.PageSettingControl.LoadXMLPackages(System.String[])">
	<summary>
	</summary>
	<param name="xmlPackages"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.PageSettingControl.LoadXMLPackages">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.PageSettingControl.LoadMobileXMLPackages(System.String[])">
	<summary>
	</summary>
	<param name="xmlPackages"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.PageSettingControl.LoadMobileXMLPackages">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.PageSettingControl.SetBinding">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.PageSettingControl.EnableShowEntityControl(System.Boolean)">
	<summary>
 Show Fields that applicable to selected virtual type
 </summary>
	<param name="isShow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.PageSettingControl.cboXMLPackage_ButtonClick(System.Object,DevExpress.XtraEditors.Controls.ButtonPressedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.PageSettingControl.cboXMLPackage_QueryPopUp(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MultipleImageListControl.CurrentPicEdit">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MultipleImageListControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MultipleImageListControl.ItemDetailDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MultipleImageListControl.ImageCode">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MultipleImageListControl.ImageKind">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MultipleImageListControl.GetContentType(System.String)">
	<summary>
	</summary>
	<param name="filePath"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MultipleImageListControl.RemovePhoto(DevExpress.XtraEditors.PictureEdit)">
	<summary>
	</summary>
	<param name="pictureEdit"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MultipleImageListControl.LoadPhoto(DevExpress.XtraEditors.PictureEdit)">
	<summary>
	</summary>
	<param name="pictureEdit"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MultipleImageListControl.LoadPhoto(DevExpress.XtraEditors.PictureEdit,System.String)">
	<summary>
	</summary>
	<param name="pictureEdit"></param>
	<param name="fileName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MultipleImageListControl.RetrievedImages">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MultipleImageListControl.UploadImages">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MultipleImageListControl.UpdateImageStore(System.String,DevExpress.XtraEditors.PictureEdit,Interprise.Framework.Inventory.Shared.Enum.ImageState)">
	<summary>
	</summary>
	<param name="fileName"></param>
	<param name="pictureEdit"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MultipleImageListControl.SyncMatrixImages">
	<summary>
 Raise event to syncronize images of matrix items to matrix group
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MultipleImageListControl.MultipleImageControl_Load(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MultipleImageListControl.BarManagerPhoto_ItemClick_1(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MultipleImageControl.CurrentPicEdit">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MultipleImageControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MultipleImageControl.ItemDetailDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MultipleImageControl.ImageCode">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MultipleImageControl.ImageKind">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MultipleImageControl.GetContentType(System.String)">
	<summary>
	</summary>
	<param name="filePath"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MultipleImageControl.RemovePhoto(DevExpress.XtraEditors.PictureEdit)">
	<summary>
	</summary>
	<param name="pictureEdit"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MultipleImageControl.LoadPhoto(DevExpress.XtraEditors.PictureEdit)">
	<summary>
	</summary>
	<param name="pictureEdit"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MultipleImageControl.LoadPhoto(DevExpress.XtraEditors.PictureEdit,System.String)">
	<summary>
	</summary>
	<param name="pictureEdit"></param>
	<param name="fileName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MultipleImageControl.RetrievedImages">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MultipleImageControl.UploadImages">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MultipleImageControl.UpdateImageStore(System.String,DevExpress.XtraEditors.PictureEdit,Interprise.Framework.Inventory.Shared.Enum.ImageState)">
	<summary>
	</summary>
	<param name="fileName"></param>
	<param name="pictureEdit"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MultipleImageControl.MultipleImageControl_Load(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MainControl.Datasource">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MainControl.DescriptionDatasource">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MainControl.DisplayImage">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MainControl.IsReadOnly">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MainControl.LargeImageStoreCollection">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MainControl.MediumImageStoreCollection">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MainControl.ThumbnailImageStoreCollection">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MainControl.MobileImageStoreCollection">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MainControl.Summary">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MainControl.WebDescription">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MainControl.WebSiteCode">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MainControl.XMLPackages">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MainControl.BeginUploadImage">
	<summary>
 Upload images to the web server.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MainControl.BeginUploadImages">
	<summary>
 Upload images to the web server asynchronously.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MainControl.EndCurrentEdit">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MainControl.EndUploadImage(System.IAsyncResult)">
	<summary>
 The callback when upload images is completed.
 </summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MainControl.InitializeControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MainControl.LoadWebSite">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MainControl.RefreshFilter">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MainControl.ResetImages">
	<summary>
 Reset all image of the control to default images.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MainControl.ResetSelectedPage">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MainControl.RetrieveImages">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MainControl.SaveHTMLCodes(System.String)">
	<summary>
	</summary>
	<param name="pageName"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MainControl.UndoChanges">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MainControl.UploadImages">
	<summary>
 Upload images to the web server.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MainControl.ValidateURL">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MainControl.PluginContainerPageSettingPluginInstance_XMLPackagePopup(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.XMLPackagePopupEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MainControl.PluginContainerWebStorePluginInstance_WebSiteChanged(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.WebSiteChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MainControl.TabGroupImages_SelectedPageChanged(System.Object,DevExpress.XtraLayout.LayoutTabPageChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MainControl.TabGrouplWebOption_SelectedPageChanged(System.Object,DevExpress.XtraLayout.LayoutTabPageChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MainControl.PluginContainerThumbnail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MainControl.PluginContainerThumbnailPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.WebOption.IImageInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MainControl.PluginContainerMediumPicture_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MainControl.PluginContainerMediumPicturePluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.WebOption.IImageInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MainControl.PluginContainerLargePicture_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MainControl.PluginContainerLargePicturePluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.WebOption.IImageInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MainControl.PluginContainerPageSetting_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MainControl.PluginContainerPageSettingPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.WebOption.IPageSettingInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MainControl.PluginContainerSearchEngine_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MainControl.PluginContainerSearchEnginePluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.WebOption.ISearchEngineInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MainControl.PluginContainerSummary_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MainControl.PluginContainerSummaryPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.WebOption.IHTMLInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MainControl.PluginContainerDescription_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MainControl.PluginContainerDescriptionPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.WebOption.IHTMLInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MainControl.PluginContainerWebStore_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MainControl.PluginContainerWebStorePluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.WebOption.IWebSiteInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.MainControl.PluginContainerMobilePicture_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.MainControl.PluginContainerMobilePicturePluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.WebOption.IImageInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.ImageSettingControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.ImageSettingControl.ItemDetailDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.ImageSettingControl.InitializeControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.ImageSettingControl.txtLocationURL_Leave(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.ImageSettingControl.txtLocationURL_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.ImageSettingControl.btnTestWebService_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.ImageSettingControl.webbrowserWebService_Navigated(System.Object,System.Windows.Forms.WebBrowserNavigatedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.ImageControl.ImageKind">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.WebOption.ImageControl.ImageStoreCollection">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.ImageControl.InitializeControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.ImageControl.GetImage(System.Drawing.Image)">
	<summary>
	</summary>
	<param name="image"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.ImageControl.LoadPhoto">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.ImageControl.LoadPhoto(DevExpress.XtraEditors.PictureEdit)">
	<summary>
	</summary>
	<param name="pictureEdit"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.ImageControl.LoadPhoto(DevExpress.XtraEditors.PictureEdit,System.String)">
	<summary>
	</summary>
	<param name="pictureEdit"></param>
	<param name="fileName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.ImageControl.RemovePhoto(DevExpress.XtraEditors.PictureEdit)">
	<summary>
	</summary>
	<param name="pictureEdit"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.WebOption.ImageControl.ImageControl_EnabledChanged(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseForm.CreateMainControl">
	<summary>
 Method use to create main control. 
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseForm.GetMainControl(Interprise.Extendable.Inventory.Presentation.Warehouse.IWarehouseInterface)">
	<summary>
 Create main control.
 </summary>
	<param name="plugin">The control that serves as a plugin or replacement for the current control.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseForm.m_warehousecontrol_ContactTabReadOnlyChanged(System.Object,System.Boolean)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="isReadOnly"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.CurrentDataset">
	<summary> Returns  CurrentDataset . </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.CurrentFacade">
	<summary> Returns CurrentFacade. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.CurrentContactCode">
	<summary>
 Gets selected contact code.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.CurrentEmailAddress">
	<summary>
 Get contact email address, if none then get entity email address
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.CurrentBusinessFax">
	<summary>
 Get contact business fax, if none then get entity business fax
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.IsCRMReadOnly">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.WarehouseCode">
	<summary>
 Returns current warehouse code.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.AddData(System.String)">
	<summary> Create a blank datarow on the first index of the related Tables. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.ClearDataset">
	<summary>
 Clear CRM dataset.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.CloseProgressForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.EnableDisableControls">
	<summary>
 'Enable or disable controls.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.Find">
	<summary> Finds a record/transaction. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.LoadCRMData(System.String)">
	<summary>
	</summary>
	<param name="p_warehouseCode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.LoadDataSet(System.String,System.Data.DataRow,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
  Method use to fetch data from the daTabase and populates the Tables specified in the parameters. 
 </summary>
	<param name="documentCode"></param>
	<param name="row"></param>
	<param name="clearTableType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.LoadRecentTransaction">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.MergeRelatedToContact">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.MergeContactToRelated">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.Print(System.Boolean)">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.ProcessKeyPreview(System.Windows.Forms.Message@)">
	<summary> Detects and handles the key pressed down by the user. </summary>
	<remarks>
	</remarks>
	<param name="m ">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.SelectPage(System.Int32)">
	<summary>
	</summary>
	<remarks>
	</remarks>
	<param name="Key ">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.ShowCRM(System.String,System.String,System.String)">
	<summary>
	</summary>
	<param name="menuName"></param>
	<param name="p_entityCode"></param>
	<param name="p_contactCode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.ShowLocationWizard">
	<summary>
	</summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.ShowNewForm">
	<summary> Show new record/transaction. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.ShowProgressForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.UndoChanges">
	<summary> Undo changes made to the dataset. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.UpdateCRMContact(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.UpdateCRMSettings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Method use to update the specified Tables in the database. 
 </summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.UpdateDataSetFunction(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.ZoomIn">
	<summary>
	</summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.ZoomCRM(System.Boolean)">
	<summary> Method use to zoom CRM. </summary>
	<remarks>
	</remarks>
	<param name="IsZoomedOut">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.BeforeNewChildDocument(System.Object,System.Boolean@,System.String@,System.String@,Interprise.Framework.Base.Shared.Enum.FilterType@)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="isCancel"></param>
	<param name="newEntityCode"></param>
	<param name="newContactCode"></param>
	<param name="newfilterby"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.m_warehouseFacade_Validated(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.ValidatedEventArgs)">
	<summary>
 Returns all error messages of warehouse transactions.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.PluginContainerContactsPluginInstance_SelectedContact(System.Object,System.Data.DataRow)">
	<summary> Use to select contacts. </summary>
	<remarks>
	</remarks>
	<param name="sender">
	</param>
	<param name="eSelectedContact">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.PluginContainerGeneralPluginInstance_OnWarehouseCodeChanged(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.WarehouseChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.TabGroupContacts_SelectedPageChanged(System.Object,DevExpress.XtraLayout.LayoutTabPageChangedEventArgs)">
	<summary>
  use to determine the page you have selected to impost appropriate action 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.TabGroupLocation_SelectedPageChanged(System.Object,DevExpress.XtraLayout.LayoutTabPageChangedEventArgs)">
	<summary> use to determine the page you have selected to impost appropriate action </summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="e ">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.TabGroupWarehouse_SelectedPageChanged(System.Object,DevExpress.XtraLayout.LayoutTabPageChangedEventArgs)">
	<summary> use to determine the page you have selected to impost appropriate action </summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="e ">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.PluginContainerGeneral_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.PluginContainerAddress_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.PluginContainerCustomField_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.PluginContainerRecentHistory_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.PluginContainerContacts_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.PluginContainerNotes_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.PluginContainerActivities_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.PluginContainerEmail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.PluginContainerDocuments_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.PluginContainerGeneralContact_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.PluginContainerZone_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.PluginContainerLocation_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.PluginContainerSetup_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.PluginContainerSetupPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.Warehouse.ISetUpInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.PluginContainerAccounts_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.PluginContainerAccountsPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.Warehouse.IAccountsInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.PluginContainerSetupDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.PluginContainerSetupDetailPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.Warehouse.IDetailInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.PluginContainerStoreInformation_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.PluginContainerStoreInformationPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.Warehouse.IStoreHoursInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.PluginContainerHoliday_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.WarehouseControl.PluginContainerHolidayPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.Warehouse.IHolidayInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.StoreHoursControl.CurrentFacade">
	<summary> Returns CurrentFacade. </summary>
	<value>  Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.StoreHoursControl.#ctor(Interprise.Framework.Inventory.DatasetGateway.WarehouseDatasetGateway,Interprise.Facade.Inventory.WarehouseFacade)">
	<summary>
	</summary>
	<param name="warehouseDataset"></param>
	<param name="warehouseFacade"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.StockInformationControl.CurrentFacade">
	<summary> Returns CurrentFacade. </summary>
	<value>  Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.StockInformationControl.#ctor(Interprise.Framework.Inventory.DatasetGateway.WarehouseDatasetGateway,Interprise.Facade.Inventory.WarehouseFacade)">
	<summary>
	</summary>
	<param name="warehouseDataset"></param>
	<param name="warehouseFacade"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.SetUpControl.CurrentFacade">
	<summary> Returns CurrentFacade. </summary>
	<value>  Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.SetUpControl.LoadGridSettings">
	<summary>Method use to loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.SetUpControl.gridViewSetup_CustomDrawCell(System.Object,DevExpress.XtraGrid.Views.Base.RowCellCustomDrawEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.HeaderControl.#ctor(Interprise.Framework.Inventory.DatasetGateway.WarehouseDatasetGateway,Interprise.Facade.Inventory.WarehouseFacade)">
	<summary>
	</summary>
	<param name="warehouseDataset"></param>
	<param name="warehouseFacade"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.HolidayControl.#ctor(Interprise.Framework.Inventory.DatasetGateway.WarehouseDatasetGateway,Interprise.Facade.Inventory.WarehouseFacade)">
	<summary>
	</summary>
	<param name="warehouseDataset"></param>
	<param name="warehouseFacade"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.Holiday.HolidayCalendarControl.PluginContainerHolidayCalendar_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.Holiday.HolidayCalendarControl.PluginContainerHolidayCalendarPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.Warehouse.Holiday.IHolidayDetailInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.Holiday.HolidayCalendarForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.Holiday.HolidayCalendarForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.Warehouse.Holiday.IHolidayMainInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Warehouse.DetailControl.CurrentFacade">
	<summary> Returns CurrentFacade. </summary>
	<value>  Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Warehouse.DetailControl.#ctor(Interprise.Framework.Inventory.DatasetGateway.WarehouseDatasetGateway,Interprise.Facade.Inventory.WarehouseFacade)">
	<summary>
	</summary>
	<param name="warehouseDataset"></param>
	<param name="warehouseFacade"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.WebOptionControl.SellingDepartmentDataSet">
	<summary> Property that gets the value SellingDepartmentDataSet. </summary>
	<value>  Interprise.Framework.Inventory.DatasetGateway.SystemManager.SellingDepartmentDataSetGateway</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.WebOptionControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.WebOptionControl.DisplayImage">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.WebOptionControl.BeginUploadImages">
	<summary>
 Upload images to the web server asynchronously.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.WebOptionControl.EndUploadImage(System.IAsyncResult)">
	<summary>
 The callback when upload images is completed.
 </summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.WebOptionControl.UploadImages">
	<summary>
 Upload images to the web server.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.WebOptionControl.UploaderImages">
	<summary>
 Upload images to the web server.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.WebOptionControl.RetrieveImages">
	<summary>
 Retrive images
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.WebOptionControl.WebOptionControl_WebSiteChanged(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.WebSiteChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.WebOptionControl.WebOptionControl_XMLPackagePopup(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.XMLPackagePopupEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.ItemControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.ItemControl.SellingDepartmentDataSet">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.ItemControl.LoadGridSettings">
	<summary>
 Loads default settings.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.ItemControl.EnableItemDepartment(System.String)">
	<summary> Method use to Disable Item Department Section. DEPARTMENT FORM </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.ItemControl.repcboItemCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Event use to assign selected values from the search combo list
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="erow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.ItemControl.repcboItemCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Event use to triggers before the search combo list shows / use to assign filtering of the combo list.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.ItemControl.repcboItemCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingDeparment.ItemControl.gridviewItem_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingCurrency.SellingCurrencyForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.SellingCurrency.SellingCurrencyControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.SellingCurrency.SellingCurrencyControl.CurrentDataset">
	<summary>Property that gets the value of CurrentDataset. </summary>
	<value> Framework.Base.DatasetComponent.BaseDataset</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.SellingCurrency.SellingCurrencyControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingCurrency.SellingCurrencyControl.ShowNewForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingCurrency.SellingCurrencyControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Save changes.
 </summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingCurrency.SellingCurrencyControl.Refresh">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingCurrency.SellingCurrencyControl.SetupColumns">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingCurrency.SellingCurrencyControl.m_sellingCurrencyFacade_HomeSellingCurrencyColumnChanged(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingCurrency.SellingCurrencyControl.rephypCurrencyCode_Openlink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingCurrency.SellingCurrencyControl.SellingCurrencyControl_Load(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingCurrency.SellingCurrencyControl.ListControlSellingCurrency_EndInitializeColumns(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.SellingCurrency.SellingCurrencyControl.ListControlSellingCurrency_ViewAll(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Reason.ReasonControl.CurrentDataset">
	<summary> Property that gets the value of CurrentDataset. </summary>
	<value>Framework.Base.DatasetComponent.BaseDataset </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Reason.ReasonControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Reason.ReasonControl.AddData(System.String)">
	<summary>
	</summary>
	<param name="documentCode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Reason.ReasonControl.InitializeRepositoryEditor">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Reason.ReasonControl.InitializeControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Reason.ReasonControl.LoadDataSet(System.String)">
	<summary>
	</summary>
	<param name="documentCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Reason.ReasonControl.Print(System.Boolean)">
	<summary>
 Print report for current transaction.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Reason.ReasonControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Reason.ReasonControl.UndoChanges">
	<summary>
 Reject changes made to the datasouce.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Reason.ReasonControl.DeleteAll">
	<summary>
 Delete all data to the database.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Reason.ReasonControl.DeleteData">
	<summary>
 Delete single record in the database.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Reason.ReasonControl.m_ReasonFacade_Validated(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.ValidatedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Reason.ReasonControl.ListGridView_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary> Method use to initialize new row. </summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="e ">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Reason.ReasonControl.m_repAccountCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Reason.ReasonControl.m_repAccountCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.PromotionManager.PromotionManagerForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.PromotionManager.PromotionManagerControl.LoadDataSet(System.String)">
	<summary>
	</summary>
	<param name="documentCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.PromotionManager.PromotionManagerControl.PluginContainerBaseDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.OpeningBalanceControl.CurrentDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.OpeningBalanceControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.OpeningBalanceControl.AddData(System.String)">
	<summary>
	</summary>
	<param name="itemCode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.OpeningBalanceControl.ShowNewForm">
	<summary>
 Method use to add new data.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.OpeningBalanceControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Method use to update the specified Tables in the daTabase. 
 </summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.OpeningBalanceControl.UndoChanges">
	<summary>
 Method use to undo changes
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.OpeningBalanceControl.m_openingbalanceFacade_Validated(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.ValidatedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.OpeningBalanceControl.TabGroupOpeningBalance_SelectedPageChanged(System.Object,DevExpress.XtraLayout.LayoutTabPageChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.OpeningBalanceControl.PluginContainerList_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.OpeningBalanceControl.PluginContainerHistory_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.IsReadOnly">
	<summary>
 Enable /disable grid columns.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.OpeningBalanceDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.Usage">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.ItemCode">
	<summary>
 Returns Item Code of the selected row.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.LoadingHistoryThread">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.Focus">
	<summary>
 Set the focus for adding data.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.LoadGridSettings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.SetFilter">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.SetGridDatasource">
	<summary>
 Set the grid control datasource of the item ledger.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.SetNewOpeningBalance">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.SetRowToReadOnly(System.Boolean)">
	<summary>
 Method use to set the row to read only.
 </summary>
	<param name="IsReadOnly"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.UndoChanges">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.gridviewListAdjustment_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.gridviewListAdjustment_InvalidRowException(System.Object,DevExpress.XtraGrid.Views.Base.InvalidRowExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.gridviewListAdjustment_InvalidValueException(System.Object,DevExpress.XtraEditors.Controls.InvalidValueExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.gridviewListAdjustment_ShowingEditor(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.repcboItemCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Event use to triggers before the search combo list shows / use to assign filtering of the combo list.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.repcboItemCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.repcboItemCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Event use to assign selected values from the search combo list
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="erow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.rephycboLocationCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Event use to triggers before the search combo list shows / use to assign filtering of the combo list.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.rephycboLocationCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.rephycboLocationCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Event use to assign selected values from the search combo list
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="erow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.rephycboUnitMeasureCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Event use to triggers before the search combo list shows / use to assign filtering of the combo list.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.rephycboUnitMeasureCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.rephycboUnitMeasureCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Event use to assign selected values from the search combo list
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="erow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.rephycboWarehouseCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.rephycboWarehouseCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Event use to assign selected values from the search combo list
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="erow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.rephypOpeningBalanceCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Shows the journal.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.OpeningBalance.ListControl.LoadDataset_Completed(System.IAsyncResult)">
	<summary>
  Event use to triggers after the asyncronous reading is completed.
 </summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Manufacturer.WebOptionControl.DisplayImage">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Manufacturer.WebOptionControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Manufacturer.WebOptionControl.ManufacturerDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.WebOptionControl.BeginUploadImages">
	<summary>
 Upload images to the web server asynchronously.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.WebOptionControl.EndUploadImage(System.IAsyncResult)">
	<summary>
 The callback when upload images is completed.
 </summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.WebOptionControl.UploadImages">
	<summary>
 Upload images to the web server.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.WebOptionControl.UploaderImages">
	<summary>
 Upload images to the web server.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.WebOptionControl.RetrieveImages">
	<summary>
 Retrive images
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.WebOptionControl.WebOptionControl_WebSiteChanged(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.WebSiteChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.WebOptionControl.WebOptionControl_XMLPackagePopup(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.XMLPackagePopupEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerDetailControl.IsReadOnly">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerDetailControl.LanguageCode">
	<summary>
 Return seletected Language Code.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerDetailControl.ManufacturerDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerDetailControl.TransactionType">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerDetailControl.Focus">
	<summary>
 Set focus on control.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerDetailControl.UndoChanges">
	<summary>
 Method use to undo changes.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerDetailControl.cboLanguageCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ManufacturerDetailControl.cboLanguageCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ItemControl.ManufacturerDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ItemControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ItemControl.LanguageCode">
	<summary>
 Sets the current language code.
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ItemControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ItemControl.LoadGridSettings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ItemControl.EnableItemSection(System.String)">
	<summary> Method use to Disable Item Section. MANUFACTURER FORM </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ItemControl.gridviewItem_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ItemControl.repcboItemCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Event use to assign selected values from the search combo list
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="erow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Manufacturer.ItemControl.repcboItemCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemUpdateSpecificType.ItemUpdateMainForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemUpdateSpecificType.ItemUpdateMainControl.ShowProgressForm(Interprise.Framework.Base.Shared.Enum.ProgressStyle)">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemUpdateSpecificType.ItemUpdateMainControl.CloseProgressForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemUpdateSpecificType.ItemUpdateMainControl.UpdateProgress(System.Int32,System.String)">
	<summary>
	</summary>
	<param name="progress"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemUpdateSpecificType.ItemUpdateMainControl.m_itemDetailFacade_ProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemUpdateSpecificType.ItemUpdateMainControl.PluginContainerControl1_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemUpdateSpecificType.ItemUpdateMainControl.PluginContainerControl3_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemUpdateSpecificType.ItemUpdateMainControl.PluginContainerControl2_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemSpecificType.ItemSpecificTypeForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.ItemSpecificType.ItemSpecificTypeControl.CurrentDataset">
	<summary> Property that gets the value of CurrentDataset. </summary>
	<value>Framework.Base.DatasetComponent.BaseDataset </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.ItemSpecificType.ItemSpecificTypeControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemSpecificType.ItemSpecificTypeControl.AddData(System.String)">
	<summary>
	</summary>
	<param name="documentCode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemSpecificType.ItemSpecificTypeControl.LoadDataSet(System.String)">
	<summary>
	</summary>
	<param name="documentCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemSpecificType.ItemSpecificTypeControl.Print(System.Boolean)">
	<summary>
 Print report for current transaction.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemSpecificType.ItemSpecificTypeControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemSpecificType.ItemSpecificTypeControl.DeleteData">
	<summary>
 Delete single record in the database.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemSpecificType.ItemSpecificTypeControl.UndoChanges">
	<summary>
 Reject changes made to the datasouce.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemSpecificType.ItemSpecificTypeControl.m_itemSpecificTypeFacade_Validated(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.ValidatedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemSpecificType.ItemSpecificTypeControl.ItemSpecificTypeControl_Load(System.Object,System.EventArgs)">
	<summary> disable print menu </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemSpecificType.ItemSpecificTypeControl.ListGridView_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary> Method use to initialize new row. </summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="e ">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemSpecificType.ItemSpecificTypeControl.m_repShippingMethodCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Even use to open the Shipping Method form of the selected shipping method
 </summary>
	<param name="sender">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e"> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemSpecificType.ItemSpecificTypeControl.m_repShippingMethodGroup_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Even use to open the Shipping Method form of the selected shipping method
 </summary>
	<param name="sender">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e"> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.ItemAttributeSourceFilter.WebOptionControl.ItemAttributeSourceFilterDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.ItemAttributeSourceFilter.WebOptionControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.ItemAttributeSourceFilter.WebOptionControl.Datasource">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.ItemAttributeSourceFilter.WebOptionControl.DescriptionDatasource">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.ItemAttributeSourceFilter.WebOptionControl.DisplayImage">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemAttributeSourceFilter.WebOptionControl.InitializeControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemAttributeSourceFilter.WebOptionControl.RetrieveImages">
	<summary>
 Retrive images
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemAttributeSourceFilter.WebOptionControl.GetHtmLCode(System.String,System.String,System.String,System.String)">
	<summary>
	</summary>
	<param name="columnName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemAttributeSourceFilter.WebOptionControl.WebOptionControl_WebSiteChanged(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.WebSiteChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemAttributeSourceFilter.WebOptionControl.WebOptionControl_XMLPackagePopup(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.XMLPackagePopupEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemAttributeSourceFilter.ItemAttributeSourceFilterValueOptionsControl.InitNewRow(DevExpress.XtraGrid.Views.Grid.GridView)">
	<summary>
 Method use to initializes the new rows of the grid control.
 </summary>
	<param name="gridview">Retrieves the gridview of the current grid control.</param>
	<returns>Datarow</returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemAttributeSourceFilter.ItemAttributeSourceFilterForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.ItemAttributeSourceFilter.ItemAttributeSourceFilterForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.ItemAttributeSourceFilter.IItemAttributeSourceFilterControlInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.ItemAttributeSourceFilter.ItemAttributeSourceFilterControl.CurrentDataset">
	<summary>Property that gets the value of CurrentDataset. </summary>
	<value> Framework.Base.DatasetComponent.BaseDataset</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.ItemAttributeSourceFilter.ItemAttributeSourceFilterControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemAttributeSourceFilter.ItemAttributeSourceFilterControl.AddData(System.String)">
	<summary> Create a blank datarow on the first index of the related tables. </summary>
	<param name="documentCode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemAttributeSourceFilter.ItemAttributeSourceFilterControl.Print(System.Boolean)">
	<summary>
 Print report for current transaction.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemAttributeSourceFilter.ItemAttributeSourceFilterControl.ShowNewForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemAttributeSourceFilter.ItemAttributeSourceFilterControl.UndoChanges">
	<summary>
 Method use to undo changes.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemAttributeSourceFilter.ItemAttributeSourceFilterControl.SetLanguageFilter">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemAttributeSourceFilter.ItemAttributeSourceFilterControl.PluginContainerBaseDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.ItemAttributeSourceFilter.ItemAttributeSourceFilterControl.PluginContainerBaseDetailPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.ItemAttributeSourceFilter.IItemAttributeSourceFilterGeneralControlInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemAttributeSourceFilter.ItemAttributeSourceFilterControl.PluginContainerValueName_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.ItemAttributeSourceFilter.ItemAttributeSourceFilterControl.PluginContainerValueNamePluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.ItemAttributeSourceFilter.IItemAttributeSourceFilterValueOptionsControlInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemAttributeSourceFilter.ItemAttributeSourceFilterControl.PluginContainerControlWebOption_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.ItemAttributeSourceFilter.ItemAttributeSourceFilterControl.PluginContainerControlWebOptionPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.ItemAttributeSourceFilter.IWebOptionInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemAttributeClassTemplate.ItemAttributeClassTemplateForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.ItemAttributeClassTemplate.ItemAttributeClassTemplateForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.ItemAttributeClassTemplate.IItemAttributeClassTemplateControlInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.ItemAttributeClassTemplate.ItemAttributeClassTemplateControl.CurrentDataset">
	<summary>Property that gets the value of CurrentDataset. </summary>
	<value> Framework.Base.DatasetComponent.BaseDataset</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.ItemAttributeClassTemplate.ItemAttributeClassTemplateControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemAttributeClassTemplate.ItemAttributeClassTemplateControl.AddData(System.String)">
	<summary> Create a blank datarow on the first index of the related tables. </summary>
	<param name="documentCode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemAttributeClassTemplate.ItemAttributeClassTemplateControl.Print(System.Boolean)">
	<summary>
 Print report for current transaction.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemAttributeClassTemplate.ItemAttributeClassTemplateControl.UndoChanges">
	<summary>
 Method use to undo changes.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemAttributeClassTemplate.ItemAttributeClassTemplateControl.ShowNewForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemAttributeClassTemplate.ItemAttributeClassTemplateControl.SetLanguageFilter">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemAttributeClassTemplate.ItemAttributeClassTemplateControl.PluginContainerBaseDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.ItemAttributeClassTemplate.ItemAttributeClassTemplateControl.PluginContainerBaseDetailPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.ItemAttributeClassTemplate.IItemAttributeClassTemplateGeneralInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemAttributeClassTemplate.ItemAttributeClassTemplateControl.PluginContainerAttributeName_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.ItemAttributeClassTemplate.ItemAttributeClassTemplateControl.PluginContainerAttributeNamePluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.ItemAttributeClassTemplate.IItemAttributeClassTemplateAttributeNamesInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.ItemAttributeClassTemplate.ItemAttributeClassTemplateAttributeNamesControl.InitNewRow(DevExpress.XtraGrid.Views.Grid.GridView)">
	<summary>
 Method use to initializes the new rows of the grid control.
 </summary>
	<param name="gridview">Retrieves the gridview of the current grid control.</param>
	<returns>Datarow</returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.GLClassTemplate.GLClassTemplateGeneralControl.GLClassTemplateDataset">
	<summary>Returns GLClassTemplateDataset. </summary>
	<value> Interprise.Framework.Inventory.DatasetGateway.SystemManager.GLClassTemplateDatasetGateway</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.GLClassTemplate.GLClassTemplateGeneralControl.CurrentDataset">
	<summary> Property that gets the value of CurrentDataset. </summary>
	<value>Framework.Base.DatasetComponent.BaseDataset </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.GLClassTemplate.GLClassTemplateGeneralControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.GLClassTemplate.GLClassTemplateGeneralControl.IsReadOnly">
	<summary> Property that gets to enable/disable controls for editing. </summary>
	<value>Boolean, If true then the property will set to readonly otherwise not. </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.GLClassTemplate.GLClassTemplateGeneralControl.Focus">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Category.WebOptionControl.CategoryDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Category.WebOptionControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Category.WebOptionControl.DisplayImage">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.WebOptionControl.RetrieveImages">
	<summary>
 Retrive images
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.WebOptionControl.BeginUploadImages">
	<summary>
 Upload images to the web server asynchronously.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.WebOptionControl.UploaderUploadImages">
	<summary>
 Upload images to the web server.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.WebOptionControl.UploadImages">
	<summary>
 Upload images to the web server.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.WebOptionControl.EndUploadImage(System.IAsyncResult)">
	<summary>
 The callback when upload images is completed.
 </summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.WebOptionControl.WebOptionControl_WebSiteChanged(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.WebSiteChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.WebOptionControl.WebOptionControl_XMLPackagePopup(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.XMLPackagePopupEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryBandControl.#ctor(Interprise.Framework.Inventory.DatasetGateway.SystemManager.CategoryDatasetGateway,Interprise.Facade.Inventory.SystemManager.CategoryFacade)">
	<summary>
	</summary>
	<param name="categorydataset"></param>
	<param name="categoryfacade"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryBandControl.#ctor">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Category.CategoryBandControl.CategoryDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Category.CategoryBandControl.CurrentDataset">
	<summary> Property that gets the value of CurrentDataset. </summary>
	<value>Framework.Base.DatasetComponent.BaseDataset </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Category.CategoryBandControl.CurrentFacade">
	<summary> Returns the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Category.CategoryBandControl.RelatedTables">
	<summary>Property that gets the value of RelatedTables. </summary>
	<value>String() </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryBandControl.AssignCategoryBand(System.Data.DataRowView,System.Data.DataRow)">
	<summary> Method use to assign category band. </summary>
	<remarks>
	</remarks>
	<param name="categorybandrowview ">
	</param>
	<param name="rowselected ">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryBandControl.LoadGridSettings">
	<summary>Method use to loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryBandControl.UndoChanges">
	<summary> Method use to undo changes made to the dataset. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryBandControl.ValidateSameBand">
	<summary> Method use to validate same band. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryBandControl.EnableBandDiscount(System.String)">
	<summary> Method use to Disable Band Discount Section. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryBandControl.CategoryBandControl_Enter(System.Object,System.EventArgs)">
	<summary>
 Events to focus on the grid control. 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryBandControl.repcboCategoryCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Event use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryBandControl.gridviewCategoryBand_FocusedRowChanged(System.Object,DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs)">
	<summary> Event use to close editor. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryBandControl.gridviewCategoryBand_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary> Event use to initialize new row. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryBandControl.gridviewCategoryBand_ShowingEditor(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>  Event use to hide editor if pricing method is "Default". </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryBandControl.gridviewCategoryBand_ValidatingEditor(System.Object,DevExpress.XtraEditors.Controls.BaseContainerValidateEditorEventArgs)">
	<summary>Event use to do not allow user to change item type if current record has been saved. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Category.CategoryBandControl.repcboBandCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Event use to assign selected values from the search combo list
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="erow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Attribute.Manager.ManagerForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Attribute.Manager.ManagerForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.Attribute.Manager.IManagerInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Attribute.Manager.ManagerControl.CurrentDataset">
	<summary>Property that gets the value of CurrentDataset. </summary>
	<value> Framework.Base.DatasetComponent.BaseDataset</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Attribute.Manager.ManagerControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Attribute.Manager.ManagerControl.LoadDataSet(System.String)">
	<summary>
	</summary>
	<param name="documentCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Attribute.Manager.ManagerControl.PluginContainerGeneral_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Attribute.Manager.ManagerControl.PluginContainerGeneralPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.Attribute.Manager.IGeneralInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Attribute.Manager.ManagerControl.PluginContainerBaseDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Attribute.Manager.ManagerControl.PluginContainerBaseDetailPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.Attribute.Manager.IDetailInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Attribute.Manager.ImagePreviewForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Attribute.Manager.ImagePreviewForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.Attribute.Manager.IImagePreviewInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Attribute.Manager.ImagePreviewControl.PluginContainerImagePreview_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Attribute.Manager.ImagePreviewControl.PluginContainerImagePreviewPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.Attribute.Manager.IImageInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Attribute.Manager.GeneralControl.AttributeManagerDataset">
	<summary> Property that gets the value of AttributeDataset. </summary>
	<value> Interprise.Framework.Inventory.DatasetGateway.SystemManager.AttributeDatasetGateway</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Attribute.Manager.GeneralControl.CurrentDataset">
	<summary>Property that gets the value of CurrentDataset. </summary>
	<value> Framework.Base.DatasetComponent.BaseDataset</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Attribute.Manager.GeneralControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Attribute.Manager.GeneralControl.srchCboAttributeValue_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Attribute.Manager.DetailControl.AttributeManagerDataset">
	<summary> Property that gets the value of AttributeDataset. </summary>
	<value> Interprise.Framework.Inventory.DatasetGateway.SystemManager.AttributeDatasetGateway</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Attribute.Manager.DetailControl.CurrentDataset">
	<summary>Property that gets the value of CurrentDataset. </summary>
	<value> Framework.Base.DatasetComponent.BaseDataset</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Attribute.Manager.DetailControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeValueControl.AttributeDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeValueControl.FocusAttributeValue(System.String)">
	<summary>
 Method use to set the focus.
 </summary>
	<param name="attributevalue"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeValueControl.LoadGridSettings">
	<summary> Method use to loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeValueControl.barMngrGridContextMenu_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeValueControl.gridviewAttributeValue_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary> Method use to initialize new row. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeValueControl.gridviewAttributeValue_InvalidValueException(System.Object,DevExpress.XtraEditors.Controls.InvalidValueExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeValueControl.gridviewAttributeValue_ShowingEditor(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>  Event use to hide editor if pricing method is "Default". </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SystemManager.Attribute.AttributeValueControl.gridviewAttributeValue_ValidatingEditor(System.Object,DevExpress.XtraEditors.Controls.BaseContainerValidateEditorEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockValuation.StockValuationForm.ItemCode">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockValuation.StockValuationForm.TransactionType">
	<summary>
 Sets transaction type for this transaction.
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockValuation.StockValuationForm.ShowRevaluation">
	<summary>
 Sets transaction type for this transaction.
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockValuation.StockValuationForm.NewRevaluation">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.StockValuationForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockValuation.StockValuationControl.DocumentCode">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockValuation.StockValuationControl.ShowRevaluation">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockValuation.StockValuationControl.NewRevaluation">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockValuation.StockValuationControl.TransactionType">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.StockValuationControl.CorrectAllocation">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.StockValuationControl.InitializeControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.StockValuationControl.LoadDataSet(System.String,System.Data.DataRow,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
	</summary>
	<param name="documentCode"></param>
	<param name="row"></param>
	<param name="clearTableType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.StockValuationControl.LoadGridSettings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.StockValuationControl.StockValuationForm_Shown(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.StockValuationControl.ShowProgressForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.StockValuationControl.CloseProgressForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.StockValuationControl.UpdateProgress(System.Int32)">
	<summary>
	</summary>
	<param name="progress"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.StockValuationControl.Print(System.Boolean)">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.StockValuationControl.Refresh">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.StockValuationControl.ShowJournal(System.String)">
	<summary>
 Shows journal transaction.
 </summary>
	<param name="referenceCode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.StockValuationControl.m_StockValuationFacade_ProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.StockValuationControl.PluginContainerRevaluationPluginInstance_OnPostTransaction(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.PostingEventArgs)">
	<summary>
 Enable disable view journal menu.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.StockValuationControl.ShowProgressForm(System.String)">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.StockValuationControl.PluginContainerGeneral_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.StockValuationControl.PluginContainerRevaluation_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.RevaluationControl.LoadRevaluation">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.RevaluationControl.EndLoadDataSet(System.IAsyncResult)">
	<summary>
	</summary>
	<param name="result"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.RevaluationControl.EndLoadValuation(System.IAsyncResult)">
	<summary>
	</summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.RevaluationControl.BindControls">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.RevaluationControl.m_StockValuationFacade_Validated(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.ValidatedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.RevaluationControl.btnRevaluate_Click(System.Object,System.EventArgs)">
	<summary>
 Post stock valuation
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.RevaluationControl.ShowProgressForm(System.String)">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.RevaluationControl.CloseProgressForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.RevaluationControl.UpdateProgress(System.Int32)">
	<summary>
	</summary>
	<param name="progress"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.RevaluationControl.m_StockValuationFacade_ProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaForm.StockValuationFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaForm.StockValuationDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaForm.TransactionType">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaForm.DocumentCode(System.Data.DataRow)">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaForm.ShowProgress">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaForm.ShowRevaluation">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaForm.NewRevaluation">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.StockValuation.IFilterCriteriaInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.DocumentCode">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.FilterCriteria">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.ItemCode">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.IsNewRevaluation">
	<summary>
 Indicates if a new revaluation transaction.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.StockValuationDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.ShowProgress">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.AddFilter(System.String[][]@,System.String[])">
	<summary>
	</summary>
	<param name="criteria"></param>
	<param name="filter"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.Focus">
	<summary>
 Method use to set the focus.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.LoadGridSettings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.SetValuationFilter">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.LoadRevaluationHistory">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.EndLoadRevaluationHistory(System.IAsyncResult)">
	<summary>
	</summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.LoadDataSet(System.String,System.Data.DataRow,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
	</summary>
	<param name="documentCode"></param>
	<param name="row"></param>
	<param name="clearTableType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.LoadStockValuation">
	<summary>
 Load stock valuation records.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.ResetToDefaults">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.cboCategoryCodeFrom_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Event use to triggers before the search combo list shows / use to assign filtering of the combo list. 
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.cboCategoryCodeFrom_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Event use to set ledger filter.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.cboCategoryCodeTo_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Event use to set ledger filter.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.cboCostingMethodFrom_CloseUp(System.Object,DevExpress.XtraEditors.Controls.CloseUpEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.cboCostingMethodFrom_Popup(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.cboCostingMethodTo_CloseUp(System.Object,DevExpress.XtraEditors.Controls.CloseUpEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.cboItemCodeFrom_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.cboItemCodeFrom_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.cboItemCodeTo_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.cboItemCodeTo_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.cboLocationCodeFrom_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.cboLocationCodeFrom_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.cboLocationCodeTo_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.cboLocationCodeTo_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.cboWarehouseCodeFrom_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Event use to triggers before the search combo list shows / use to assign filtering of the combo list. 
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.cboWarehouseCodeFrom_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.cboWarehouseCodeFrom_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Event use to set ledger filter.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.cboWarehouseCodeTo_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.cboWarehouseCodeTo_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Event use to set ledger filter.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.chkAllCategoryCode_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
 Event use to select all warehouse 
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.chkItemCode_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.chkCostingMethod_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.chkAllWarehouse_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
 Event use to select all warehouse 
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.chkAllLocation_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
 Event use to select all warehouse 
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.FilterCriteriaControl.LoadDataset_Completed(System.IAsyncResult)">
	<summary>
	</summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockValuation.DetailControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockValuation.DetailControl.TransactionType">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.DetailControl.BeginLoadData">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.DetailControl.EndLoadData">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.DetailControl.CollapsedAllDetails">
	<summary>
 Collapsed all expanded master row.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.DetailControl.barmanagerStockValuation_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.DetailControl.gridviewStockValuation_CustomDrawFooterCell(System.Object,DevExpress.XtraGrid.Views.Grid.FooterCellCustomDrawEventArgs)">
	<summary>
		<summary> Use to draw custom cell. </summary>
	</summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.DetailControl.gridViewStockValuationDetail_CustomDrawFooterCell(System.Object,DevExpress.XtraGrid.Views.Grid.FooterCellCustomDrawEventArgs)">
	<summary>
		<summary> Use to draw custom cell. </summary>
	</summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.DetailControl.gridviewStockValuation_MasterRowExpanding(System.Object,DevExpress.XtraGrid.Views.Grid.MasterRowCanExpandEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.DetailControl.gridviewStockValuation_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.DetailControl.repcboCategoryCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.DetailControl.rephyDocumentCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.DetailControl.rephyItemCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockValuation.DetailControl.repcboWarehouseCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferForm.SwitchPage_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferControl.CurrentDataset">
	<summary>Property that use to gets the value of CurrentDataset . </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferControl.CurrentFacade">
	<summary> Property that use to gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferControl.FocusedItemCode">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferControl.JournalCodes">
	<summary>
 Returns the adjustment codes used by this transaction.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferControl.AddData(System.String)">
	<summary> Method use to create a blank datarow on the first index of the related Tables. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferControl.EnableDisableControls">
	<summary> Method use to enable or disable controls when there is zero record </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferControl.Find">
	<summary> Finds a record/transaction. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferControl.LoadDataSet(System.String,System.Data.DataRow,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary> Method use to fetch data from the daTabase and populates the Tables specified in the parameters. </summary>
	<remarks>
	</remarks>
	<param name="documentCode "> Retrieve the adjustment Table according to adjustment code. </param>
	<param name="row ">Set the row as system.data.datarow</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferControl.LoadStockingLevel(System.Boolean)">
	<summary>
 Load item stock levels.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferControl.Print(System.Boolean)">
	<summary> Method use to print report. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferControl.ProcessKeyPreview(System.Windows.Forms.Message@)">
	<summary> Method use to process key preview. </summary>
	<remarks>
	</remarks>
	<param name="m ">Sets as System.Windows.Forms.Message. </param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferControl.SelectPage(System.Int32)">
	<summary> Method use to select page. </summary>
	<remarks>
	</remarks>
	<param name="key ">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferControl.ShowNewForm">
	<summary>
 Call Add data
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary> Method use to update the specified Tables in the daTabase. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferControl.UndoChanges">
	<summary> Undo changes made to the dataset. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferControl.m_stockTransferFacade_Validated(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.ValidatedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferControl.PluginContainerItemsPluginInstance_FocusedItemChanged(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.ItemChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferControl.TabGroupItems_SelectedPageChanged(System.Object,DevExpress.XtraLayout.LayoutTabPageChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferControl.PluginContainerGeneral_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferControl.PluginContainerSource_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferControl.PluginContainerDestination_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferControl.PluginContainerItems_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferControl.PluginContainerStockInformation_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferControl.PluginContainerStockingLevel_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Warehouse.StockTransferControl.PluginContainerTransferDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.MainControl.PluginContainerGeneral_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.MainControl.PluginContainerItems_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.MainControl.PluginContainerStockTotal_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.MainControl.PluginContainerStockingLevels_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.MainControl.PluginContainerTransferDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.MainControl.PluginContainerByLocation_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.InternalMovementForm.CreateMainControl">
	<summary> Method use to create the section control and attached them to the main control. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.InternalMovementForm.GetMainControl(Interprise.Extendable.Inventory.Presentation.StockTransfer.Internal.IMainInterface)">
	<summary>
 Create main control.
 </summary>
	<param name="plugin">The control that serves as a plugin or replacement for the current control.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.InternalMovementForm.SwitchPage_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTransfer.Internal.InternalMovementForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeForm.CreateMainControl">
	<summary> Method use to create the section control and attached them to the main control. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeForm.GetMainControl(Interprise.Extendable.Inventory.Presentation.StockTake.IStockTakeInterface)">
	<summary>
 Create main control.
 </summary>
	<param name="plugin">The control that serves as a plugin or replacement for the current control.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeForm.CreatePopupNavigator">
	<summary>
 Create menu links for journal
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeForm.SwitchPage_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.StockTakeControl.CurrentDataset">
	<summary> Property that use to gets the value of CurrentDataset. </summary>
	<value>Interprise.Framework.Base.DatasetComponent.BaseDataset </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.StockTakeControl.CurrentFacade">
	<summary> Property that use to gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.StockTakeControl.IsPrinted">
	<summary>Property that use to gets the value if stock take transaction is printed or not. </summary>
	<value> Boolean, if true then the transaction is printed otherwise not. </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.StockTakeControl.IsZoomed">
	<summary>Property that use to gets or sets the value if page will be zoom in or out. </summary>
	<value> Boolean, if true then it will zoom in otherwise out.</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.StockTakeControl.JournalCodes">
	<summary>
 Returns the adjustment codes used by this transaction.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.StockTakeControl.LanguageCode">
	<summary>Property that use to gets the value of LanguageCode. </summary>
	<value>String  </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.StockTakeControl.StockTakeCode">
	<summary> Property that use to gets the value of StockTakeCode. </summary>
	<value> String </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.AddData(System.Data.DataRow)">
	<summary> Method use to create a blank datarow on the first index of the related Tables. </summary>
	<remarks>
	</remarks>
	<param name="row ">Sets the row as datarow. </param>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.CloseProgressForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="F:Interprise.Presentation.Inventory.StockTake.StockTakeControl.m_progressForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.ChangePrintStatus">
	<summary> Method use to changed status of printing. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.CheckAllItems(System.Boolean)">
	<summary> Method use to check items. </summary>
	<remarks>
	</remarks>
	<param name="IsChecked ">Set the IsIncluded to IsChecked. </param>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.CheckLocation(System.Boolean)">
	<summary>Method use to check location. </summary>
	<remarks>
	</remarks>
	<param name="IsChecked ">Set the IsIncluded to IsChecked. </param>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.EnableDisableControls">
	<summary> Use to enable or disable control. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.Find">
	<summary> Methdo use to finds a record/transaction. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.GetStockTakeOverdueList(System.DateTime,System.String,System.Boolean)">
	<summary>
	</summary>
	<param name="dueDate"></param>
	<param name="locationCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.InitializeControl">
	<summary>
 Initialize section control.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.LoadDataSet(System.String,System.Data.DataRow,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary> Method use to fetch data from the daTabase and populates the Tables specified in the parameters. </summary>
	<remarks>
	</remarks>
	<param name="documentCode "> Retrieve the adjustment Table according to adjustment code. </param>
	<param name="row ">Set the row as system.data.datarow</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.LoadItem(System.Boolean,System.DateTime)">
	<summary>
 Load item depending on stock take option.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.LoadItemList(System.Boolean)">
	<summary> Use to load item list. </summary>
	<remarks>
	</remarks>
	<param name="FromFind ">Determines whether to get in the Table or in a user control. </param>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.Print(System.Boolean)">
	<summary> Prints the currently selected item/transaction. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.ProcessKeyPreview(System.Windows.Forms.Message@)">
	<summary> Method use to detects the keys pressed by the user </summary>
	<remarks>
	</remarks>
	<param name="m ">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.SelectPage(System.Int32)">
	<summary>Method use to sets focus from one page to another. Page is a group of controls. </summary>s
 <remarks>
	</remarks>
	<param name="key "><para> Retrieves from process key preview function and uses to determine what you pressed from keyboard.</para>
	</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.ShowNewForm">
	<summary> Method use to show new record/transaction. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.UndoChanges">
	<summary> Method use to undo changes made to the dataset. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.UpdateDataset(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
	<summary> Method use to post the stock take </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary> Method use to update the specified Tables in the daTabase. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.ZoomInOut">
	<summary>Method use to set if zoom in or out. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.m_stocktakefacade_Validated(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.ValidatedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.PluginContainerDetailPluginInstance_OnCurrentStockTakeChanged(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.CurrentStockTakeChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e">Use to filter the grid control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.PluginContainerFilterCriteria_OnStockTakeOptionChanged(System.Object,Interprise.Framework.Inventory.Shared.Enum.StockTakeOption)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.PluginContainerStockTakeListPluginInstance_OnchkShowZeroQuantityItemCheckChanged">
	<summary>
 Method use to show all items with zero quantity
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.PluginContainerStockTakeListPluginInstance_OnchkShowZeroQuantityValueCheckChanged">
	<summary>
 Method use to show all items with zero quantity
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.PluginContainerZonePluginInstance_OnLocationCheckChanged(System.Object,System.String,System.Boolean)">
	<summary>Event use to changed location check. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="LocationCode ">Sets the location code. </param>
	<param name="IsIncluded ">Use to check if included.</param>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.PluginContainerZonePluginInstance_OnSelectAllLocationClick">
	<summary>Event use to select all location. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.PluginContainerZonePluginInstance_OnSelectNoneLocationClick">
	<summary>Event use to select none location. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.TabGroupStockTake_SelectedPageChanged(System.Object,DevExpress.XtraLayout.LayoutTabPageChangedEventArgs)">
	<summary>
 Event use to determine the page you have selected to impost appropriate action.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.PluginContainerDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.PluginContainerLocation_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.PluginContainerZone_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.PluginContainerStockTakeList_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.PluginContainerStockTakeValues_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.StockTake.StockTakeControl.PluginContainerFilterCriteria_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.StockTakeControl.PluginContainerFilterCriteriaPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.StockTake.IFilterInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.StockTake.FilterControl.CurrentFacade">
	<summary>Method use to gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Interprise.Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.TreeControl.DataSource">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.TreeControl.KeyFieldName">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.TreeControl.ParentFieldName">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.TreeControl.TreeList">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.TreeControl.Columns">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.TreeControl.SelectImageList">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.TreeControl.StateImageList">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.TreeControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.TreeControl.ExpandAll">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.TreeControl.MoveNode(Interprise.Framework.Base.Shared.Enum.Movement)">
	<summary>
	</summary>
	<param name="movement"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.TreeControl.SetupTreeList">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.TransferHistoryControl.CurrentFacade">
	<summary> Property that use to gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>Interprise.Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.TransferHistoryControl.CurrentDataset">
	<summary> Property that gets the value of CurrentDataset. </summary>
	<value>Interprise.Framework.Base.DatasetComponent.BaseDataset </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.TransferHistoryControl.TransactionType">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.TransferHistoryControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.TransferHistoryControl.LoadGridSettings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.TransferHistoryControl.LoadDataSet(System.String,System.Data.DataRow,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
	</summary>
	<param name="documentCode"></param>
	<param name="row"></param>
	<param name="clearTableType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.TransferHistoryControl.LoadDataset_Completed(System.IAsyncResult)">
	<summary>
	</summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.TransferHistoryControl.SetupGridControl">
	<summary>
 Set the datasouce of the grid control.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.TransferHistoryControl.rephypDocumentCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.LocationStockCountMainControl.PluginContainerGeneral_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.LocationStockCountControl.CurrentDataset">
	<summary> Property that gets the value of CurrentDataset. </summary>
	<value> Interprise.Framework.Base.DatasetComponent.BaseDataset </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.LocationStockCountControl.CurrentFacade">
	<summary> Method use to gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Interprise.Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.LocationStockCountControl.ViewStyle">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.LocationStockCountControl.LoadDataSet(System.String,System.Data.DataRow,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
 Method use to fetch data from the daTabase and populates the Tables specified in the parameters. 
 </summary>
	<param name="documentCode"></param>
	<param name="row"></param>
	<param name="clearTableType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.LocationStockCountControl.PluginContainerStockCount_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.ItemForm.TransactionType">
	<summary>
	</summary>
	<value></value>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemForm.GetItemControl(Interprise.Extendable.Inventory.Presentation.SharedControl.IItemInterface)">
	<summary>
	</summary>
	<param name="plugin"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemForm.InitializeControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemForm.btnMoveDown_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemForm.btnMoveUp_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemForm.btnClose_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemForm.btnRemoveItemMapping_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemForm.btnSelectNone_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemForm.btnSelectAll_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemForm.MenuItemOk_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.ItemForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SharedControl.IItemInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemControl.EndCurrentEdit">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.ItemControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.ItemControl.CurrentDataset">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.ItemControl.DataSource">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.ItemControl.LanguageCode">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.ItemControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.ItemControl.TransactionType">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemControl.InitFacadeGateway">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemControl.LoadEntiy">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemControl.LoadGridSettings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemControl.MoveRecord(Interprise.Framework.Base.Shared.Enum.Movement)">
	<summary>
	</summary>
	<param name="movement"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemControl.SelectAll">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemControl.SelectNone">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemControl.gridviewItem_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemControl.repcboItemCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Event use to assign selected values from the search combo list
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="erow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemControl.repcboItemCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.LocationStockCountForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemSortOrderForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.ItemSortOrderForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SharedControl.IItemInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.ItemSortOrderControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.ItemSortOrderControl.CurrentDataset">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.SharedControl.ItemSortOrderControl.TransactionType">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemSortOrderControl.InitFacadeGateway">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.SharedControl.ItemSortOrderControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.ReportComponents.ItemAgedStockSumReport.ItemCode">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ReportComponents.ItemAgedStockSumReport.BindHeader">
	<summary>
 Sets the Company Information
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ReportComponents.ItemAgedStockSumReport.GetItemAgedStockSumReportData">
	<summary>This methods calls the stored procedure "GetAccountingAuditTrail" from the backend
 which fetches the data for the audit trail report.</summary>
</member><member name="M:Interprise.Presentation.Inventory.ReportComponents.ItemAgedStockSumReport.DataBindings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.ProfitAnalysisForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.ProfitAnalysis.ProfitAnalysisControl.CurrentDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.ProfitAnalysis.ProfitAnalysisControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.ProfitAnalysis.ProfitAnalysisControl.IsZoomed">
	<summary>Property that use to gets or sets the value if page will be zoom in or out. </summary>
	<value> Boolean, if true then it will zoom in otherwise out.</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.ProfitAnalysisControl.BeginLoadDataSet(System.String[][],Interprise.Framework.Base.Shared.Enum.ClearType,System.AsyncCallback,System.Object)">
	<summary>w
 
 </summary>
	<param name="commandSet"></param>
	<param name="clearTableType"></param>
	<param name="callBack"></param>
	<param name="asyncState"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.ProfitAnalysisControl.Print(System.Boolean)">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.ProfitAnalysisControl.ProcessKeyPreview(System.Windows.Forms.Message@)">
	<summary> Method use to detects the keys pressed by the user </summary>
	<remarks>
	</remarks>
	<param name="m ">Sets as System.Windows.Forms.Message</param>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.ProfitAnalysisControl.LoadDataSet(System.String,System.Data.DataRow,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
	</summary>
	<param name="documentCode"></param>
	<param name="row"></param>
	<param name="clearTableType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.ProfitAnalysisControl.SelectPage(System.Int32)">
	<summary> Method use to set focus from one page to another. Page is a group of controls. </summary>
	<remarks>
	</remarks>
	<param name="key "><para>Retrieves the key as integer when press page up or page down</para>
	</param>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.ProfitAnalysisControl.filterCriteriaForm_OnGrossMarginCheckChanged(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.GrossMarginCheckedChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.ProfitAnalysisControl.PluginContainerGeneral_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.ProfitAnalysis.ProfitAnalysisControl.PluginContainerGeneralPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.StockValuation.IFilterCriteriaInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaForm.ProfitAnalysisFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaForm.ProfitAnalysisDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.ProfitAnalysis.IFilterCriteriaInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaControl.FilterCriteria">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaControl.CreateFilterControl">
	<summary> Method use to create the section control and attached them to the main control. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaControl.Focus">
	<summary>
 Method use to set the focus.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaControl.EndLoadDataSet(System.IAsyncResult)">
	<summary>
	</summary>
	<param name="result"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaControl.ResetToDefaults">
	<summary>
 Reselt filters to default value.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaControl.cboCategoryCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Event use to triggers before the search combo list shows / use to assign filtering of the combo list. 
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaControl.cboCategoryCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Event use to set ledger filter.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaControl.cboCategoryCodeTo_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Event use to set ledger filter.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaControl.cboCustomerCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Event use to triggers before the search combo list shows / use to assign filtering of the combo list. 
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaControl.cboCustomerCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Event use to set ledger filter.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaControl.cboCustomerCodeTo_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Event use to set ledger filter.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaControl.cboItemNameFrom_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaControl.cboItemNameFrom_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaControl.cboItemNameFrom_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaControl.cboItemNameTo_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaControl.cboItemNameTo_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaControl.cboItemNameTo_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaControl.cboWarehouseCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Event use to triggers before the search combo list shows / use to assign filtering of the combo list. 
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaControl.cboWarehouseCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Event use to set ledger filter.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaControl.cboWarehouseCodeTo_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Event use to set ledger filter.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaControl.chkAllCategoryCode_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
 Event use to select all warehouse 
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaControl.chkAllWarehouse_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
 Event use to select all warehouse 
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaControl.chkItemCode_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaControl.chkAllCustomer_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
 Event use to select all warehouse 
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaControl.chkGrossMarginByCostPrice_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaControl.m_datefiltercontrol_FilterChanged(System.Object,System.EventArgs)">
	<summary> Event use to set filters. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.FilterCriteriaControl.LoadDataset_Completed(System.IAsyncResult)">
	<summary>
	</summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.ProfitAnalysis.DetailControl.ProfitAnalysisDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.ProfitAnalysis.DetailControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.DetailControl.Focus">
	<summary>
 Method use to set the focus.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.DetailControl.SetTotalGrossMargin(Interprise.Framework.Inventory.Shared.Enum.GrossMarginType)">
	<summary>
	</summary>
	<param name="marginType"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.DetailControl.repcboCategoryCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.DetailControl.repcboCustomerCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.DetailControl.repcboCustomerName_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.DetailControl.repcboItemCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.DetailControl.repcboSecondReference_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.DetailControl.repcboWarehouseCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.DetailControl.repcboInvoiceCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProfitAnalysis.DetailControl.ProfitAnalysisForm_Resize(System.Object,System.EventArgs)">
	<summary>
 Set grid view column size depending on size of form
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.ProductIdentifierControl.ItemDetailDataset">
	<summary> Property that gets the value of ItemDetailDataset . </summary>
	<value> ItemDetailDatasetGateway </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ProductIdentifierControl.CloseEditor">
	<summary>
 Update changes to its datasource.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ProductIdentifierControl.LoadGridSettings">
	<summary> Method use to loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ProductIdentifierControl.UpdateCurrentRow">
	<summary> Method use to update current row. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ProductIdentifierControl.gridviewProductIdentifier_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary> Event use to initialize new row. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.ProductIdentifierControl.gridviewProductIdentifier_InvalidValueException(System.Object,DevExpress.XtraEditors.Controls.InvalidValueExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ProductIdentifierControl.gridviewProductIdentifier_InvalidRowException(System.Object,DevExpress.XtraGrid.Views.Base.InvalidRowExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ProductIdentifierControl.repcboUnitMeasureCode_AddNewValue(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Event use to add values from the search combo list.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ProductIdentifierControl.repcboUnitMeasureCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ProductIdentifierControl.repcboUnitMeasureCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>Event use to brings you to particular item of the selected code.  </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.ProductIdentifierControl.repcboUnitMeasureCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Event use to assign selected values from the search combo list.  </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  ">The rows selected by the user on the search combo list.</param>
</member><member name="M:Interprise.Presentation.Inventory.ProductFilter.Maintenance.MainForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.ProductFilter.Maintenance.MainControl.PluginContainerBaseDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.CurrentDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.SelectedItemCode">
	<summary>
 Returns selected item code in the grid view.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.PreviousPriceListRow">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.PriceListInfo">
	<summary>
	</summary>
	<value></value>
</member><member name="P:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.CurrencyCode">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.PricingDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.LanguageCode">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.ItemTypeFilter">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.ItemCodesFilter">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.PriceListControl">
	<summary>
	</summary>
	<value></value>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.AddGridHandler">
	<summary>
 Add the events associated with grids in the control.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.RemoveGridHandler">
	<summary>
 Remove any events associated with grids in the control.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.CollapsedAll">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.Focus">
	<summary>
 Move focus on the grid.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.LoadGridSettings">
	<summary>
 Load grid settings.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.PopulatePricingMethod">
	<summary>
 Add pricing method on combo list.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.PopulateControls">
	<summary>
 Add list to controls.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.SetCurrencyFormat(System.String)">
	<summary>
	</summary>
	<param name="currencyCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.SetCurrencyFormat(System.String,Interprise.Framework.Base.Shared.Enum.EnmFormatType,System.Boolean)">
	<summary>
	</summary>
	<param name="currencyCode"></param>
	<param name="formatType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.GridItemBeginUpdate(System.Boolean)">
	<summary>
	</summary>
	<param name="begin"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.AddRemoveLayoutItemGroupRange(System.Boolean)">
	<summary>
 Set Layout items inside a layoutItemGroup
 </summary>
	<param name="reset"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.EnableDisableMenu(System.Boolean)">
	<summary>
	</summary>
	<param name="enable"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.ItemControl_Enter(System.Object,System.EventArgs)">
	<summary>
 Move focus on the grid.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.repcboItemCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Returns 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.repcboItemCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.gridviewItemList_CustomUnboundColumnData(System.Object,DevExpress.XtraGrid.Views.Base.CustomColumnDataEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.gridviewItemList_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary>
 Init new row of the grid when a user types into the grid control.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.gridviewPriceBreak_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary>
 '
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.gridItem_FocusedViewChanged(System.Object,DevExpress.XtraGrid.ViewFocusEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.gridviewItemList_CustomDrawCell(System.Object,DevExpress.XtraGrid.Views.Base.RowCellCustomDrawEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.gridviewPriceBreak_CustomDrawCell(System.Object,DevExpress.XtraGrid.Views.Base.RowCellCustomDrawEventArgs)">
	<summary>
 Format cell for specific currency.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.gridviewPriceBreak_ShowingEditor(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.rephypItemCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.gridviewFocusedView_FocusRowChanged(System.Object,DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.gridviewItemList_ShowingEditor(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Hanldes showing of editor depending on the pricing method.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.repimagecboQuantityBreak_DoubleClick(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.repcboItemCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.rephypUnitMeasureCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.popupmenuPriceBreak_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.barmangerPriceBreak_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.gridviewItem_InvalidValueException(System.Object,DevExpress.XtraEditors.Controls.InvalidValueExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.gridviewItemList_InvalidRowException(System.Object,DevExpress.XtraGrid.Views.Base.InvalidRowExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.gridviewPriceBreak_CellValueChanged(System.Object,DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.PriceLisForm_Resize(System.Object,System.EventArgs)">
	<summary>
 Set grid view column size depending on size of form
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.ItemControl.repbaritemcboUnitMeasureList_QueryCloseUp(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.CurrencyCode">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.AddData(System.String)">
	<summary> Create a blank datarow on the first index of the related Tables. </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.DeleteData">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.InitializeControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.BeginExport">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.BeginImport(System.String)">
	<summary>
	</summary>
	<param name="filePath"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.ExportCompleted(System.IAsyncResult)">
	<summary>
	</summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.ImportCompleted(System.IAsyncResult)">
	<summary>
	</summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.GetHeaderControl(Interprise.Extendable.Inventory.Presentation.Pricing.PriceList.IHeaderInterface)">
	<summary>
 Create header control.
 </summary>
	<param name="plugin">The control that serves as a plugin or replacement for the current control.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.GetItemControl(Interprise.Extendable.Inventory.Presentation.Pricing.PriceList.IItemInterface)">
	<summary>
 Create item control.
 </summary>
	<param name="plugin">The control that serves as a plugin or replacement for the current control.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.EnableDisableControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.LoadDataSet(System.String,System.Data.DataRow,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
	</summary>
	<param name="documentCode"></param>
	<param name="row"></param>
	<param name="clearTableType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.LoadDataSet(System.String)">
	<summary>
 Load record of selected price level code.
 </summary>
	<param name="documentCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.UndoChanges">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.ShowNewForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.ShowProgressForm(System.Boolean,System.Int32,Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.Type)">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.FinalizeExport(Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.Type)">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.UpdateProgress(System.Int32,System.String)">
	<summary>
	</summary>
	<param name="progress"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.m_pricingFacade_ProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.ShowImportWizardForm(System.Object[])">
	<summary>
 Shows the ImportWizard Plugin
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.cboPriceList_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.m_pricingFacade_OnBeginImport(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.ImportEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.m_pricingFacade_OnImport(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.ImportEventArgs)">
	<summary>
 '
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.m_pricingFacade_OnImportError(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.ImportEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.m_pricingFacade_OnSaveImport(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.ImportSaveEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.m_pricingFacade_Validated(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.ValidatedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.DoShowMessage(System.String,Interprise.Framework.Base.Shared.Enum.MessageWindowIcon)">
	<summary>
	</summary>
	<param name="message"></param>
	<param name="messageStyle"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.PluginContainerBaseDetailPluginInstance_CurrencyCodeChanged(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.CurrencyChangedEventArgs)">
	<summary>
 Update  currency code of item control.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.PluginContainerDetailPluginInstance_OnPopUpClose(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.PriceListControl_OnListDetailTabPageChanged(System.Object,DevExpress.XtraTab.TabPageChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.PluginContainerDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.PriceListControl.PluginContainerBaseDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Pricing.PriceList.HeaderControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Pricing.PriceList.HeaderControl.PricingDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.HeaderControl.Focus">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.HeaderControl.cboCurrencyCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.PriceList.HeaderControl.cboCurrencyCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.DefaultPricing.FilterControl.btnApplyFilter_Click(System.Object,System.EventArgs)">
	<summary>
 everytime the button "Apply Filter" is clicked it raises an event to the main control
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.DefaultPricing.FilterControl.repHypSrcgCboItemTo_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.DefaultPricing.FilterControl.repHypSrchCboItemFrom_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.DefaultPricing.FilterControl.spinNoOfRecords_EditValueChanging(System.Object,DevExpress.XtraEditors.Controls.ChangingEventArgs)">
	<summary>
 Displays an error notification if the Number Of Records was set to a negative value
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.DefaultPricing.FilterControl.hypSrchCboItemFrom_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.DefaultPricing.FilterControl.hypSrchCboItemTo_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Pricing.DefaultPricing.DefaultPricingForm.PricingType">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.DefaultPricing.DefaultPricingForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Pricing.DefaultPricing.DefaultPricingControl.PricingType">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.DefaultPricing.DefaultPricingControl.InitializeControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.DefaultPricing.DefaultPricingControl.UndoChanges">
	<summary>
 Reject changes made to the datasource.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.DefaultPricing.DefaultPricingControl.PluginContainerDefaultPricingDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.DefaultPricing.DefaultPricingControl.PluginContainerGeneralHeader_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.DefaultPricing.DefaultPricingControl.PluginContainerFilter_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Pricing.DefaultPricing.DefaultPricingControl.PluginContainerFilterPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.Pricing.DefaultPricing.IFilterInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Pricing.CategoryDiscountBand.DetailCategoryControl.BandDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Pricing.CategoryDiscountBand.DetailCategoryControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Pricing.CategoryDiscountBand.DetailCategoryControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.CategoryDiscountBand.DetailCategoryControl.Focus">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.CategoryDiscountBand.DetailCategoryControl.LoadGridSettings">
	<summary>
 Method use to loads default grid settings. 
 </summary>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.CategoryDiscountBand.DetailCategoryControl.barMngrGridContextMenu_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.CategoryDiscountBand.DetailCategoryControl.DetailControl_Enter(System.Object,System.EventArgs)">
	<summary>
 Event use to set the next focus.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.CategoryDiscountBand.DetailCategoryControl.gridviewCategoryBand_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary>
 Initialize new rows.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.CategoryDiscountBand.DetailCategoryControl.gridviewCategoryBand_InvalidRowException(System.Object,DevExpress.XtraGrid.Views.Base.InvalidRowExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.CategoryDiscountBand.DetailCategoryControl.gridviewCategoryBand_InvalidValueException(System.Object,DevExpress.XtraEditors.Controls.InvalidValueExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.CategoryDiscountBand.DetailCategoryControl.repcboCategoryCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.CategoryDiscountBand.DetailCategoryControl.repcboCategoryCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Pricing.CategoryDiscountBand.CopyBandForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Pricing.CategoryDiscountBand.CopyBandForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.Pricing.CategoryDiscountBand.ICopyBandInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Pricing.CategoryDiscountBand.CopyBandControl.CurrentFacade">
	<summary>
 Returns current facade.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.MenuActionAttribute.#ctor(Interprise.Framework.Base.Shared.Enum.MenuAction.MenuInventory)">
	<summary>
 Create instance of this class.
 </summary>
	<param name="action">Indicates actions or usages to be performed by the class.</param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.UnitMeasure.UnitMeasureControl.CurrentUnitMeasure">
	<summary> Property that gets the value of Unit Measure . </summary>
	<value> ItemDetailDatasetGateway </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.UnitMeasure.UnitMeasureControl.ItemDetailDataset">
	<summary> Property that gets the value of ItemDetailDataset . </summary>
	<value>Interprise.Framework.Inventory.DatasetGateway.ItemDetailDatasetGateway </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.UnitMeasure.UnitMeasureControl.AddData(System.String)">
	<summary> Method use to create a blank datarow on the first index of the related Tables. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.UnitMeasure.UnitMeasureControl.CloseEditor">
	<summary>Method use to close editor.  </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.UnitMeasure.UnitMeasureControl.Focus">
	<summary>
 Set focus to grid control
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.UnitMeasure.UnitMeasureControl.LoadGridSettings">
	<summary> Method use to loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.UnitMeasure.UnitMeasureControl.Refresh">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.UnitMeasure.UnitMeasureControl.SetUnitMeasure">
	<summary> Method use to set appropriate unit measure. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.UnitMeasure.UnitMeasureControl.SetUserMeasureSystem">
	<summary> Method use to set visible unit measure for volume and weight.</summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.UnitMeasure.UnitMeasureControl.barMngrGridContextMenu_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary>Event use to execute toolbars in the menu.  </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.UnitMeasure.UnitMeasureControl.UnitMeasureControl_Enter(System.Object,System.EventArgs)">
	<summary>
 Move focus to gridcontrol
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.UnitMeasure.UnitMeasureControl.gridviewUnitMeasure_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary>
 Event use to initialize new row.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.UnitMeasure.UnitMeasureControl.gridviewUnitMeasure_InvalidValueException(System.Object,DevExpress.XtraEditors.Controls.InvalidValueExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.UnitMeasure.UnitMeasureControl.gridviewUnitMeasure_EndGrouping(System.Object,System.EventArgs)">
	<summary>Event use to set the sort order to ascending.  </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.UnitMeasure.UnitMeasureControl.gridviewUnitMeasure_GotFocus(System.Object,System.EventArgs)">
	<summary>Event to show the editor.  </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.UnitMeasure.UnitMeasureControl.gridviewUnitMeasure_ShowingEditor(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.UnitMeasure.UnitMeasureControl.repcboUnitMeasureCode_AddNewValue(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Event use to add values from the search combo list.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.UnitMeasure.UnitMeasureControl.repcboUnitMeasureCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.UnitMeasure.UnitMeasureControl.repcboUnitMeasureCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>Event use to brings you to particular item of the selected code.  </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.UnitMeasure.UnitMeasureControl.repcboUnitMeasureCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Event use to assign selected values from the search combo list.  </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  ">The rows selected by the user on the search combo list.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.UnitMeasure.UnitMeasureControl.repcboShippingMethod_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Even use to open the Shipping Method form of the selected shipping method
 </summary>
	<param name="sender">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e"> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.UnitMeasure.UnitMeasureForm.ProcessKeyPreview(System.Windows.Forms.Message@)">
	<summary>
 Method use to detects and handles the key pressed down by the user. 
 </summary>
	<param name="m"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.UnitMeasure.UnitMeasureForm.SelectPage(System.Int32)">
	<summary>Method use to select page.  </summary>
	<remarks>
	</remarks>
	<param name="Key">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.UnitMeasure.UnitMeasureForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.UnitMeasure.UMGeneralHeaderControl.ItemDetailDataset">
	<summary> Property that gets the value of ItemDetailDataset . </summary>
	<value>Interprise.Framework.Inventory.DatasetGateway.ItemDetailDatasetGateway </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.UnitMeasure.MainUMControl.CurrentDataset">
	<summary> Property that gets the value of CurrentDataset. </summary>
	<value>  Interprise.Framework.Base.DatasetComponent.BaseDataset</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.UnitMeasure.MainUMControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Interprise.Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.UnitMeasure.MainUMControl.FocusOnUnitMeasureCode">
	<summary>
 Property that sets the focus to UnitMeasureCdoe
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.UnitMeasure.MainUMControl.CloseEditor">
	<summary> Method use to close editor. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.UnitMeasure.MainUMControl.LoadDataSet(System.String,System.Data.DataRow,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary> Method use to fetch data from the daTabase and populates the Tables specified in the parameters. </summary>
	<remarks>
	</remarks>
	<param name="documentCode "> Retrieve the adjustment Table according to adjustment code. </param>
	<param name="row ">Set the row as system.data.datarow</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.UnitMeasure.MainUMControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary> Method use to update the specified Tables in the daTabase. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.UnitMeasure.MainUMControl.PluginContainerUnitMeasure_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.UnitMeasure.MainUMControl.PluginContainerUMGeneralHeader_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Supplier.SuppliersControl.IsReadOnly">
	<summary> Property that gets to enable/disable controls for editing. </summary>
	<value>Boolean, If true then the property will set to readonly otherwise not. </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Supplier.SuppliersControl.ItemDetailDataset">
	<summary> Property that gets the value of ItemDetailDataset . </summary>
	<value> ItemDetailDatasetGateway </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Supplier.SuppliersControl.WarehouseCode">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Supplier.SuppliersControl.ItemCode">
	<summary> Returns ItemCode. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Supplier.SuppliersControl.CurrentFacade">
	<summary> Returns CurrentFacade. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Supplier.SuppliersControl.CurrentDataset">
	<summary> Returns  CurrentDataset.</summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Supplier.SuppliersControl.IsUpdatePending">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Supplier.SuppliersControl.FilterSupplier(System.Boolean)">
	<summary>
	</summary>
	<param name="isPending"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Supplier.SuppliersControl.CreateNewRecord(System.String,System.Boolean)">
	<summary>
 Create's new record in the InventorySupplier and assign the current inventory item code.
 </summary>
	<param name="itemCode">Inventory Item Code</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Supplier.SuppliersControl.GetMaxLength(System.Boolean)">
	<summary>
	</summary>
	<param name="isMax"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Supplier.SuppliersControl.SaveChangesTemporarily(System.Boolean)">
	<summary>
 Merge changes made from InventorySupplier to the InventorySupplierTemp Table.
 </summary>
	<param name="mergeChangesToTempTable">False if you want to merge the changes from the InventorySupplierTemp to the InventorySupplier table.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Supplier.SuppliersControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Delete default (temporary) new records in the InventorySupplier table.
 </summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Supplier.SuppliersControl.LoadData">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Supplier.SuppliersControl.Focus">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Supplier.SuppliersControl.UndoChanges">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Supplier.SuppliersControl.BaseControl_Disposed(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Supplier.SuppliersControl.repHypSupplierName_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Supplier.SuppliersControl.repHypShipFromName_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Supplier.SupplierPartCodeControl.IsReadOnly">
	<summary> Property that gets to enable/disable controls for editing. </summary>
	<value>Boolean, If true then the property will set to readonly otherwise not. </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Supplier.SupplierPartCodeControl.ItemDetailDataset">
	<summary> Property that gets the value of ItemDetailDataset . </summary>
	<value> ItemDetailDatasetGateway </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Supplier.SupplierPartCodeControl.WarehouseCode">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Supplier.SupplierPartCodeControl.FilterSupplier">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Supplier.SupplierPartCodeControl.Focus">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Supplier.SupplierPartCodeControl.LoadGridSettings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Supplier.SupplierPartCodeControl.UndoChanges">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Supplier.SupplierPartCodeControl.barMngrGridContextMenu_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Supplier.SupplierPartCodeControl.gridviewPartCode_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Supplier.SupplierPartCodeControl.repcboSupplierName_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Supplier.SupplierPartCodeControl.repcboSupplierName_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Supplier.SupplierPartCodeControl.gridviewPartCode_InvalidRowException(System.Object,DevExpress.XtraGrid.Views.Base.InvalidRowExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Supplier.SupplierPartCodeControl.gridviewPartCode_InvalidValueException(System.Object,DevExpress.XtraEditors.Controls.InvalidValueExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Supplier.SupplierPartCodeControl.SupplierPartCodeControl_ContextMenuItemAdded(System.Object,Interprise.Presentation.Inventory.Base.ContextMenuEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.SubstituteControl.IsReadOnly">
	<summary> Property to read enable or disable grid column. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.SubstituteControl.ItemDetailDataset">
	<summary> Returns  ItemDetailDataset . </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.SubstituteControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SubstituteControl.CloseEditor">
	<summary>
 Update changes to the datasource.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SubstituteControl.UpdateCurrentRow">
	<summary> Method use to update current row. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SubstituteControl.LoadGridSettings">
	<summary> Loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SubstituteControl.barMngrGridContextMenu_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SubstituteControl.gridviewSubstitute_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary> Method use to initialize new row. </summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="e ">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.SubstituteControl.gridviewSubstitute_InvalidValueException(System.Object,DevExpress.XtraEditors.Controls.InvalidValueExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SubstituteControl.gridviewSubstitute_InvalidRowException(System.Object,DevExpress.XtraGrid.Views.Base.InvalidRowExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SubstituteControl.repcboItemCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary> Triggers before the search combo list shows / use to assign filtering of the combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="e ">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.SubstituteControl.repcboItemCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="e ">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.SubstituteControl.repcboItemCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="eRow ">
	</param>
</member><member name="P:Interprise.Presentation.Inventory.Item.SpecialPricingControl.CurrencyCode">
	<summary> Returns or sets CurrencyCode </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.SpecialPricingControl.IsReadOnly">
	<summary> Property to read enable or disable grid column. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.SpecialPricingControl.ItemDetailDataset">
	<summary> Returns  ItemDetailDataset . </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.SpecialPricingControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.SpecialPricingControl.UpdateDatasetFunction">
	<summary>
 Property that use to update dataset
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SpecialPricingControl.LoadGridSettings">
	<summary> Loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SpecialPricingControl.FilterByCurrencyCode">
	<summary> Method use to filter currency code. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SpecialPricingControl.UpdateCurrentRow">
	<summary> Method use to update current row. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SpecialPricingControl.gridviewSpecialPricing_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary> Method use to initialize new row. </summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="e ">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.SpecialPricingControl.gridviewSpecialPricing_HideCustomizationForm(System.Object,System.EventArgs)">
	<summary> Method use to save grid settings. </summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="e ">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.SpecialPricingControl.repcboUnitMeasureCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Event to assign the values of the selected item from the dropdown list to the selected row </summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="eRow ">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.SpecialPricingControl.repcboUnitMeasureCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Event to filter inventory unit measure and save new Item first.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SpecialPricingControl.repcboUnitMeasureCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Brings you to particular item of the selected code. 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SpecialPricingControl.rdteDateTo_EditValueChanging(System.Object,DevExpress.XtraEditors.Controls.ChangingEventArgs)">
	<summary>
 rdteDateTo_EditValueChanging
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks>Instead of modifying the Date To value on the ItemDetailFacade's UpdateDataset, update the value here so that it will be applied to the matrix items as well (if the current item is a matrix group)</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SpecialPricingControl.gridviewSpecialPricing_InvalidRowException(System.Object,DevExpress.XtraGrid.Views.Base.InvalidRowExceptionEventArgs)">
	<summary>
 gridviewSpecialPricing_InvalidRowException
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks>Handle invalid row exception since not specifying a unit measure code displays a foreign key constraint error.  Instead don't allow the user to continue</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.SpecialCostingControl.ItemDetailDataset">
	<summary> Returns  ItemDetailDataset . </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.SpecialCostingControl.IsReadOnly">
	<summary>
 Property to enable/disable controls for editing.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.SpecialCostingControl.SupplierCode">
	<summary>
	</summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SpecialCostingControl.LoadGridSettings">
	<summary>
 Loads default grid settings. 
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SpecialCostingControl.UpdateCurrentRow">
	<summary> Method use to update current row. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SpecialCostingControl.gvwSpecialPricing_CellValueChanged(System.Object,DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SpecialCostingControl.gvwSpecialPricing_GotFocus(System.Object,System.EventArgs)">
	<summary>
 Event to show the caret in the grid when focused.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SpecialCostingControl.gvwSpecialPricing_HideCustomizationForm(System.Object,System.EventArgs)">
	<summary>
 Event that handles saving of grid settings. 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SpecialCostingControl.gvwSpecialPricing_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary> Use to initialize new row. </summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="e ">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.SpecialCostingControl.rcboUnitMeasure_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Triggers before the search combo list shows / use to assign filtering of the combo list. 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SpecialCostingControl.rcboUnitMeasureCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
  Event to assign the values of the selected item from the dropdown list to the selected row 
 </summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.CurrencyCode">
	<summary> Gets /sets currency code.</summary>
	<value>String </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Interprise.Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.CurrentDataset">
	<summary> Property that gets the value of CurrentDataset. </summary>
	<value> Interprise.Framework.Base.DatasetComponent.BaseDataset</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.PriceBreakInfo">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.PricingLevelStyle">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.ItemDetailDataset">
	<summary> Property that gets the value of ItemDetailDataset . </summary>
</member><member name="P:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.IsReadOnly">
	<summary> Property that gets to enable/disable controls for editing. </summary>
	<value>Boolean, If true then the property will set to readonly otherwise not. </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.PriceLevelCode">
	<summary>
 Gets/sets the price level code that will be use in the transaction when  adding a particular row.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.Focus">
	<summary>
 Move focus to the first row of the grid.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.InsertPriceBreak">
	<summary>
 Generate Pricing Level base on price level break and interval specified.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.FilterPricingLevel(System.String,System.String)">
	<summary>
	</summary>
	<param name="pricingLevel"></param>
	<param name="currencyCode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.LoadGridSettings">
	<summary> Method use to loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.PopulatePricingMethod">
	<summary>
 Add pricing method on combo list.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.CloseEditor">
	<summary> Method use to update current row. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.hypcboPricingLevel_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Brings  you to the detail of the selected pricing level.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.PricingLevelDetailControl_Enter(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.PricingLevelDetailControl_MouseEnter(System.Object,System.EventArgs)">
	<summary> 
 Event use to Sets tooltip. 
 </summary>
	<remarks>
	</remarks>
	<param name="sender ">
 Retrieves an object containing information about the forwarded value of the event. 
 </param>
	<param name="e "> 
 Retrieves an event of certain control.
 </param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.grdDefaultPricingLevels_ProcessGridKey(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary> Event use to check the keyboard key combination that was pressed. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.gridviewPricingLevel_CustomDrawCell(System.Object,DevExpress.XtraGrid.Views.Base.RowCellCustomDrawEventArgs)">
	<summary> Method use to draw custom cell. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.gridviewPricingLevel_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary> Event use to intialize new row. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.gridviewPricingLevel_ShowingEditor(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>  Event use to hide editor if pricing method is "Default". </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.gvwPricingLevel_InvalidValueException(System.Object,DevExpress.XtraEditors.Controls.InvalidValueExceptionEventArgs)">
	<summary> Event use to ignore exeption from gvwPricingLevel. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.gridviewPricingLevel_InvalidRowException(System.Object,DevExpress.XtraGrid.Views.Base.InvalidRowExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.repcboPricingLevelCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary> Event use to triggers before the search combo list shows / use to assign filtering of the combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.repcboPricingLevelCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.repcboPricingLevelCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Event use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow"> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.repcboUnitMeasuree_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary> Event use to filter inventory unit measure. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.repcboUnitMeasure_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Event use to assign the values of the selected item from the dropdown list to the selected row </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.barmanagerPricingLevel_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Pricing.PricingLevelDetailControl.popupmenuPriceBreak_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardForm.GetItemWizardControl(Interprise.Extendable.Inventory.Presentation.Item.ItemWizard.INewItemWizardInterface)">
	<summary> Method use to create the section control and attached them to the main control. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardForm.AddData(Interprise.Framework.Base.Shared.Enum.ItemType,System.String)">
	<summary>
	</summary>
	<param name="itemType"></param>
	<param name="itemName"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardForm.BaseForm_Closing(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Ledger.ItemLedgerControl.CurrentDataset">
	<summary> Property that gets the value of CurrentDataset . </summary>
	<value> Interprise.Framework.Base.DatasetComponent.BaseDataset</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Ledger.ItemLedgerControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Interprise.Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Ledger.ItemLedgerControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.ItemLedgerControl.GetFilterControl">
	<summary> Method use to create the section control and attached them to the main control. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.ItemLedgerControl.GetDateFilterControl(Interprise.Extendable.Base.Presentation.CRM.IFilterInterface)">
	<summary>
	</summary>
	<param name="plugin"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.ItemLedgerControl.Focus">
	<summary>
 Move focus to the first control.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.ItemLedgerControl.InitializeControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.ItemLedgerControl.LoadDataSet(System.String,System.Data.DataRow,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary> Method use to fetch data from the daTabase and populates the Tables specified in the parameters. </summary>
	<remarks>
	</remarks>
	<param name="documentCode "> Retrieve the data according to item code. </param>
	<param name="row ">Set the row as system.data.datarow</param>
	<param name="clearTableType">Use to set if you want clear all or clear specific Table in the dataset.</param>
	<returns></returns>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.ItemLedgerControl.LoadGridSettings">
	<summary> Method use to loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.ItemLedgerControl.SetLedgerFilter">
	<summary> Method use to set ledger filters. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.ItemLedgerControl.SetGridDatasource">
	<summary>
 Set the grid control datasource of the item ledger.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.ItemLedgerControl.SetGroupings(System.Boolean)">
	<summary>
 Set the groupings of column.
 </summary>
	<param name="IsAllWarehouse"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.ItemLedgerControl.cboWarehouseCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Redirects you to the warehouse you have selected.
 </summary>
	<param name="sender">The object that executes this method.</param>
	<param name="e"> The event that handles this method.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.ItemLedgerControl.cboWarehouseCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Event use to set ledger filter.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.ItemLedgerControl.chkAllWarehouse_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
 Event use to select all warehouse 
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.ItemLedgerControl.gridviewItemLedger_CustomDrawFooterCell(System.Object,DevExpress.XtraGrid.Views.Grid.FooterCellCustomDrawEventArgs)">
	<summary>
 Event use to set the display text of the footer item.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.ItemLedgerControl.ItemDetailForm_Resize(System.Object,System.EventArgs)">
	<summary>
 Set if the gridview is columnautowidth or not. 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.ItemLedgerControl.m_datefiltercontrol_FilterChanged(System.Object,System.EventArgs)">
	<summary> Event use to set filters. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.ItemLedgerControl.m_transactionFilterControl_FilterChanged(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.TransactionFilterChangedEventArgs)">
	<summary> Method use to set filters. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.ItemLedgerControl.rephypDocumentCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Event use to brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.ItemLedgerControl.rephySupplierCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.ItemLedgerControl.rephySupplierName_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.ItemLedgerControl.repHypBillPurchaseReceiptInvoice_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.ItemLedgerControl.repcboWarehouseCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.ItemLedgerControl.LoadDataset_Completed(System.IAsyncResult)">
	<summary>
  Event use to triggers after the asyncronous reading is completed.
 </summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.HeaderControl.AllowChangeItemType">
	<summary>
 Gets / sets  if change of item type is allowed.
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.HeaderControl.AllowRename">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.HeaderControl.IsReadOnly">
	<summary>
 Enable/disable controls for editing.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.HeaderControl.ItemDetailDataset">
	<summary> Returns  ItemDetailDataset . </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.HeaderControl.CurrentDataset">
	<summary> property to return currentdataset </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.HeaderControl.CurrentFacade">
	<summary> Returns the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.HeaderControl.ChangeFormText">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.HeaderControl.Focus">
	<summary> Method use to set the focus to the item code control. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.HeaderControl.LoadGridSettings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.HeaderControl.LanguageCode">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.HeaderControl.memDescription_Validated(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.HeaderControl.cboItemClass_AddNewValue(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.HeaderControl.cboItemClass_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.HeaderControl.cboGlClassCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="e ">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.HeaderControl.cboGlClassCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender"></param>
	<param name="eRow">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.HeaderControl.cboItemClass_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
  Brings you to particular item of the selected code. 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.HeaderControl.cboItemClass_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.HeaderControl.cboItemName_Validated(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.HeaderControl.cboItemName_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.HeaderControl.cboItemName_LostFocus(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.HeaderControl.cboItemName_EditClick(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.HeaderControl.cboItemName_BeforeShownMenu(System.Object,DevExpress.XtraEditors.Controls.BeforeShowMenuEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.HeaderControl.cboItemType_QueryPopUp(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.HeaderControl.cboItemType_SelectedValueChanged(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.HeaderControl.cboTrackingOption_QueryPopUp(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Cost.CostingControl.CurrentFacade">
	<summary> Property that gets the value of CurrentFacade. </summary>
	<value>Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Cost.CostingControl.CurrentDataset">
	<summary> Property that gets the value of GatewayItemDetailDataset. </summary>
	<value>Framework.Base.DatasetComponent.BaseDataset </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Cost.CostingControl.IsReadOnly">
	<summary> Property to read enable or disable grid column. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Cost.CostingControl.ItemDetailDataset">
	<summary> Property that gets the value of ItemDetailDataset . </summary>
	<value> ItemDetailDatasetGateway</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Cost.CostingControl.IsFromWizard">
	<summary>
 Sets visibility of costing controls.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Cost.CostingControl.CreateCostingDetailControlForm">
	<summary>
 Create the Costing Detail Form.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Cost.CostingControl.LoadGridSettings">
	<summary>
 Method use to load grid settings.
 </summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Cost.CostingControl.UpdateDatasetFunction">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Cost.CostingControl.ValidateSupplier">
	<summary>
 Determine if there is default supplier.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Cost.CostingControl.cboCostingMethod_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>
 Event use to initialize default value for costing method and call ValidateCost.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Cost.CostingControl.cboCostingMethod_QueryPopUp(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Event use to set the property of the costing method combobox if its is readonly or not base on item selected if it has transaction or not.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Cost.CostingControl.spineditAverageCostLink_DoubleClick(System.Object,System.EventArgs)">
	<summary>
 Event that trigger when spineditAverageCost is double clicked. Set the value of the Cost Price and Cost type.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Cost.CostingControl.spineditCurrentCostLink_DoubleClick(System.Object,System.EventArgs)">
	<summary>
 Event that trigger when spineditCurrentCost is double clicked.  Set the value of the Cost Price and Cost type.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Cost.CostingControl.spineditStandardCostLink_DoubleClick(System.Object,System.EventArgs)">
	<summary>
 Event that trigger when spineditStandardCost is double clicked. Set the value of the Cost Price and Cost type.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Cost.CostingControl.spineditCostLink_MouseHover(System.Object,System.EventArgs)">
	<summary>
 Occurs when the mouse pointer rests on the control.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Cost.CostingControl.spineditCostLink_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
 Occurs when the mouse pointer is moved over the control.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Cost.CostingControl.spineditCostLink_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
 Occurs when the mouse pointer is over the control and a mouse button is released.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.CategoryControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>Interprise.Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.CategoryControl.ItemDetailDataset">
	<summary> Property that gets the value of ItemDetailDataset . </summary>
	<value>Interprise.Framework.Inventory.DatasetGateway.ItemDetailDatasetGateway  </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.CategoryControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.CategoryControl.CloseEditor">
	<summary> Method use to close editor and update current row. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.CategoryControl.Focus">
	<summary>
 Set focus to grid control
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.CategoryControl.LoadGridSettings">
	<summary>Method use to loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.CategoryControl.Refresh">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.CategoryControl.barMngrGridContextMenu_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary> Event use to control the toolbars in menu.</summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.CategoryControl.CategoryControl_Enter(System.Object,System.EventArgs)">
	<summary>
 Move focus to gridcontrol
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.CategoryControl.CategoryControl_ContextMenuItemAdded(System.Object,Interprise.Presentation.Inventory.Base.ContextMenuEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.CategoryControl.gridviewCategory_EndGrouping(System.Object,System.EventArgs)">
	<summary>Event use to ascend or descend grid view. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.CategoryControl.categoryCodeRepSearchCombo_AddNewValue(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary> Event use to add values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.CategoryControl.gridviewCategory_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary>Event use to initialize new row. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.CategoryControl.repcboCategoryCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Event use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
</member><member name="P:Interprise.Presentation.Inventory.Item.Assembly.CreateAssemblyControl.ItemCode">
	<summary>Property that gets the value of itemcode. </summary>
	<value>String </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Assembly.CreateAssemblyControl.ItemDetailDataset">
	<summary> Property that gets the value of ItemDetailDataset. </summary>
	<value> Interprise.Framework.Inventory.DatasetGateway.ItemDetailDatasetGateway</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.CreateAssemblyControl.CloseEditor">
	<summary> Method use to update changes on the grid to the datasource. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.CreateAssemblyControl.Focus">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.CreateAssemblyControl.LoadGridSettings">
	<summary>
 Loads settings of the grid control.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.CreateAssemblyControl.DeleteDataFromContextMenu(System.Boolean)">
	<summary>
	</summary>
	<param name="IsDeleteAll"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.CreateAssemblyControl.gridviewAssembly_CustomDrawCell(System.Object,DevExpress.XtraGrid.Views.Base.RowCellCustomDrawEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.CreateAssemblyControl.gridviewAssembly_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary> Event use to initialize new row </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.CreateAssemblyControl.gridviewAssembly_InvalidRowException(System.Object,DevExpress.XtraGrid.Views.Base.InvalidRowExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.CreateAssemblyControl.gridviewAssembly_InvalidValueException(System.Object,DevExpress.XtraEditors.Controls.InvalidValueExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.CreateAssemblyControl.rephypCategoryCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Event use to brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.CreateAssemblyControl.repcboItemCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Event use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.CreateAssemblyControl.repcboItemCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Event use to brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.CreateAssemblyControl.repcboUnitMeasureCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Event use to brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.CreateAssemblyControl.repcboUnitMeasureCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Event use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.CreateAssemblyControl.repcboUnitMeasureCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary> Event use to triggers before the search combo list shows / use to assign filtering of the combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="P:Interprise.Presentation.Inventory.Item.Assembly.AssemblyHeaderControl.AssemblyDataset">
	<summary>Property that gets the value of AssemblyDataset</summary>
	<value>Interprise.Framework.Inventory.DatasetGateway.AssemblyDatasetGateway</value>
</member><member name="P:Interprise.Presentation.Inventory.Item.Assembly.AssemblyHeaderControl.CurrentDataset">
	<summary>Property that gets the value of CurrentDataset</summary>
	<value>Interprise.Framework.Base.DatasetComponent.BaseDataset</value>
</member><member name="P:Interprise.Presentation.Inventory.Item.Assembly.AssemblyHeaderControl.CurrentFacade">
	<summary>
 Property that gets the instance of the business facade that will be use by the ReadData and
 SaveData method.
 </summary>
	<value>Interprise.Extendable.Base.Facade.IBaseInterface</value>
</member><member name="P:Interprise.Presentation.Inventory.Item.Assembly.AssemblyHeaderControl.HasComponentsChange">
	<summary>Property that gets the value to check if the components have changes.</summary>
	<returns>Boolean</returns>
</member><member name="P:Interprise.Presentation.Inventory.Item.Assembly.AssemblyHeaderControl.IsReadOnly">
	<summary> Property that gets to enable/disable controls for editing. </summary>
	<value>Boolean, If true then the property will set to readonly otherwise not. </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Assembly.AssemblyHeaderControl.WarehouseCode">
	<summary>
 Property that sets WarehouseCode of the currently selected row of the gridcontrol.
 </summary>
	<value>String </value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Assembly.AssemblyHeaderControl.MoveFocus">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.AssemblyHeaderControl.Focus">
	<summary>
 Move focus on item code.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.AssemblyHeaderControl.ReloadComponents">
	<summary>
 Method use to reload Components
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.AssemblyHeaderControl.BeginLoadStockCount(System.String)">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.AssemblyHeaderControl.cboWarehouseCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Use to assign selected values from the search combo list.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.AssemblyHeaderControl.cboWarehouseCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.AssemblyHeaderControl.hypItemCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to shows selected item details..
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.AssemblyHeaderControl.memoItemDescription_QueryPopUp(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Event use to set PopupStartSize to txtReason.Size.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Assembly.AssemblyComponentsControl.Assemblydataset">
	<summary> Property that gets the value of Assemblydataset. </summary>
	<value> Interprise.Framework.Inventory.DatasetGateway.AssemblyDatasetGateway</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Assembly.AssemblyComponentsControl.CurrentDataset">
	<summary>Property that gets value of CurrentDataset. </summary>
	<value> Interprise.Framework.Base.DatasetComponent.BaseDataset</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Assembly.AssemblyComponentsControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>Interprise.Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Assembly.AssemblyComponentsControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Assembly.AssemblyComponentsControl.ItemCode">
	<summary>
 Property that gets ItemCode of the currently selected row of the gridcontrol.
 </summary>
	<value>String </value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Assembly.AssemblyComponentsControl.ItemName">
	<summary>
 Return the selected item name.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.AssemblyComponentsControl.Focus">
	<summary>
 Move focus on the grid control.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.AssemblyComponentsControl.LoadGridSettings">
	<summary> Method use to loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.AssemblyComponentsControl.gridviewAssembly_CustomDrawCell(System.Object,DevExpress.XtraGrid.Views.Base.RowCellCustomDrawEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.AssemblyComponentsControl.gridviewAssembly_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary> Event use to initialize new row </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.AssemblyComponentsControl.repcboItemCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Event use to brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.AssemblyComponentsControl.repcboUnitMeasureCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Event use to brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.AssemblyComponentsControl.repcboUnitMeasureCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary> Event use to triggers before the search combo list shows / use to assign filtering of the combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.AssemblyComponentsControl.repcboUnitMeasureCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Event use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
</member><member name="P:Interprise.Presentation.Inventory.Item.SetupControl.ItemDetailDataset">
	<summary> Returns ItemDetailDataset. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SetupControl.CreateBindings">
	<summary>
  Bind controls at runtime.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SetupControl.Focus">
	<summary>
 Move focus on the first control.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SetupControl.LoadGridSettings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SetupControl.SetChargeTypeItems">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SetupControl.cboCommisionable_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary> Use to change settings of cboCustomCommission. </summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="e ">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.SetupControl.cboSalesTaxCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Assign sales tax code.
 </summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SetupControl.cboSalesTaxCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
  Opens the maintenance form of System Tax Scheme. </summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="e ">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.SetupControl.cboManufacturer_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Brings you to the manufacturer's list.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
</member><member name="M:Interprise.Presentation.Inventory.Item.SetupControl.cboCommissionType_SelectedValueChanged(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.SupplierControl.CurrentFacade">
	<summary>
 Returns CurrentFacade
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.SupplierControl.IsReadOnly">
	<summary> Property to read enable or disable grid column. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.SupplierControl.ItemDetailDataset">
	<summary> Returns  ItemDetailDataset . </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.SupplierControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SupplierControl.CloseEditor">
	<summary> Update changes made to the datasource. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SupplierControl.CollapsedDetail">
	<summary>
 Collapsed the view of the grid.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SupplierControl.Focus">
	<summary>
 Move focus on the first row of the grid.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SupplierControl.LoadGridSettings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SupplierControl.RefreshPriceList">
	<summary>
 Adds all unit measure of item not existing in the supplier price list.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SupplierControl.gridviewSupplierPriceListView_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SupplierControl.gridviewSupplierPriceListView_CustomDrawCell(System.Object,DevExpress.XtraGrid.Views.Base.RowCellCustomDrawEventArgs)">
	<summary>
 Handles cell currency formatting .
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SupplierControl.repcboSupplierName_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SupplierControl.repcboSupplierName_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender">
	</param>
	<param name="eRow">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.SupplierControl.gridviewUnitMeasure_ShowingEditor(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SupplierControl.gridviewPricingLevel_CustomDrawCell(System.Object,DevExpress.XtraGrid.Views.Base.RowCellCustomDrawEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SupplierControl.gridviewPricingLevel_ShowingEditor(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SupplierControl.barmangerPriceBreak_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SupplierControl.SupplierControl_Enter(System.Object,System.EventArgs)">
	<summary>
 Event to move the focus to the grid control when the control  got focus.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SupplierControl.popupmenuPriceBreak_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SupplierControl.rephypUnitMeasureCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SupplierControl.gridviewSupplierPriceListView_InvalidValueException(System.Object,DevExpress.XtraEditors.Controls.InvalidValueExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SupplierControl.gridviewSupplierPriceListView_InvalidRowException(System.Object,DevExpress.XtraGrid.Views.Base.InvalidRowExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SupplierControl.gridviewSupplierPriceListView_ShowingEditor(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.SupplierControl.gridviewSupplierPriceListView_CustomUnboundColumnData(System.Object,DevExpress.XtraGrid.Views.Base.CustomColumnDataEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.OverrideSalesTaxControl.CurrentDataset">
	<summary> Returns  CurrentDataset . </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.OverrideSalesTaxControl.CurrentFacade">
	<summary> Returns CurrentFacade. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.OverrideSalesTaxControl.CurrentInventoryItemTable">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.OverrideSalesTaxControl.ItemDetailDataset">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.OverrideSalesTaxControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.OverrideSalesTaxControl.LoadGridSettings">
	<summary> Loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.OverrideSalesTaxControl.Refresh">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.OverrideSalesTaxControl.barMngrGridContextMenu_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary> Overrides barMngrGridContextMenu_ItemClick. </summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="e ">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.OverrideSalesTaxControl.DepartmentControl_Enter(System.Object,System.EventArgs)">
	<summary>
 Event use to set the focus then show the editor.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.OverrideSalesTaxControl.gridviewDepartment_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary> Event use to initialize new row. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.OverrideSalesTaxControl.repcboSalesTaxCode_AddNewValue(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary> Event use to add values from the search combo list. </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.OverrideSalesTaxControl.repcboSalesTaxCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.OverrideSalesTaxControl.repcboSalesTaxCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Event use to brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="P:Interprise.Presentation.Inventory.Item.Matrix.Swatch.SwatchItemControl.ItemDetailDataset">
	<summary> Property that gets the value of Assemblydataset. </summary>
	<value> Interprise.Framework.Inventory.DatasetGateway.AssemblyDatasetGateway</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Matrix.Swatch.SwatchItemControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.Swatch.SwatchItemControl.SelectItems(System.Boolean)">
	<summary>
 Select / Unselect matrix items as swatch item.
 </summary>
	<param name="isSelected"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.Swatch.SwatchItemControl.SelectAll">
	<summary>
 Select all matrix item as swatch item.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.Swatch.SwatchItemControl.SelectNone">
	<summary>
 Unselect all matrix item as swatch item.
 </summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Matrix.Swatch.SwatchItemForm.ItemDetailDataset">
	<summary> Property that gets the value of Assemblydataset. </summary>
	<value> Interprise.Framework.Inventory.DatasetGateway.AssemblyDatasetGateway</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.Swatch.SwatchItemForm.GetSwatchItemControl(Interprise.Extendable.Inventory.Presentation.Item.Matrix.Swatch.ISwatchItemInterface)">
	<summary>
 Set the swatchitemcontrol to nothing.
 </summary>
	<param name="plugin"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.Swatch.SwatchItemForm.btnSelectNone_Click(System.Object,System.EventArgs)">
	<summary>
 Event that trigger button select none is clicked. Unselect all matrix items. 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.Swatch.SwatchItemForm.btnSelectAll_Click(System.Object,System.EventArgs)">
	<summary>
  Event that trigger button select none is clicked. Select all matrix items. 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.Swatch.SwatchItemForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Matrix.Swatch.SwatchControl.ItemDetailDataset">
	<summary> Property that gets the value of Assemblydataset. </summary>
	<value> Interprise.Framework.Inventory.DatasetGateway.AssemblyDatasetGateway</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.Swatch.SwatchControl.AddItem">
	<summary>
 This method is obsolete.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.Swatch.SwatchControl.DeleteItem">
	<summary>
 This method is obsolete.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.Swatch.SwatchControl.Preview">
	<summary>
 This method is obsolete.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.Swatch.SwatchControl.ShowProperties">
	<summary>
 This method is obsolete.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.Swatch.SwatchControl.GetMatrixItemControl(Interprise.Extendable.Inventory.Presentation.Item.Matrix.IMatrixItemInterface)">
	<summary>
 Create matrix item control.
 </summary>
	<param name="plugin">The control that serves as a plugin or replacement for the current control.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.Swatch.SwatchControl.GetSwatchItemControl(Interprise.Extendable.Inventory.Presentation.Item.Matrix.Swatch.ISwatchItemInterface)">
	<summary>
 Create matrix item control.
 </summary>
	<param name="plugin">The control that serves as a plugin or replacement for the current control.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.Swatch.SwatchControl.RetrievedImages">
	<summary>
 Use to retrieve images.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.Swatch.SwatchControl.gridviewMatrixItems_InvalidValueException(System.Object,DevExpress.XtraEditors.Controls.InvalidValueExceptionEventArgs)">
	<summary>
 Event that trigger when an invalid value is entered.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.Swatch.SwatchControl.reppicteditSwatchImage_Click(System.Object,System.EventArgs)">
	<summary>
 Use to assign an image to a matrix item.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.ItemDetailForm.AllowRename">
	<summary>
 Determines if rename of an item is allowed.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.ItemDetailForm.IsLoadFromWizard">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemDetailForm.ItemDetailForm_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemDetailForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Matrix.MatrixItemControl.CurrentDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Matrix.MatrixItemControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Matrix.MatrixItemControl.IsFromWizard">
	<summary>
 Gets or sets if this control was use in new item wizard.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Matrix.MatrixItemControl.IsGroupBySelected">
	<summary>
 Gets or sets if the grid display the matrix item group by selected column.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Matrix.MatrixItemControl.ItemDetailDataset">
	<summary> Property that gets the value ItemDetailDataset. </summary>
	<value>Interprise.Framework.Inventory.DatasetGateway.ItemDetailDatasetGateway</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Matrix.MatrixItemControl.MatrixItemRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Matrix.MatrixItemControl.UpdateDatasetFunction">
	<summary>
 Sets the update dataset method handle.
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Matrix.MatrixItemControl.SetObjectsVisible">
	<summary>
 set showhelpbutton and showselectbutton to invisible when formtype is wizard
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.MatrixItemControl.ApplySwatchSetting">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.MatrixItemControl.AttachItem">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.MatrixItemControl.SearchForm_TableNameChanged(System.Object,System.String)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="tableName"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.MatrixItemControl.SearchForm_EndInitializeColumns(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.MatrixItemControl.Focus">
	<summary>
 Set the focus on the first record of the grid.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.MatrixItemControl.LoadGridSettings">
	<summary> Method use to loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.MatrixItemControl.ResetDetault(System.Data.DataRow)">
	<summary>
	</summary>
	<param name="matrixItemRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.MatrixItemControl.ShowSwatchSettingsForm(System.String)">
	<summary>
 Set the properties of SwatchSetting Form.
 </summary>
	<param name="selectedItemCode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.MatrixItemControl.ShowItemForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.MatrixItemControl.UpdateItemStatus(System.String,System.String)">
	<summary>
	</summary>
	<param name="itemcode"></param>
	<param name="status"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.MatrixItemControl.barmanagerMatrix_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.MatrixItemControl.btnCancel_Click(System.Object,System.EventArgs)">
	<summary>
 Close the form.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.MatrixItemControl.gridviewMatrixItems_CellValueChanged(System.Object,DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.MatrixItemControl.gridviewMatrixItems_CustomRowCellEdit(System.Object,DevExpress.XtraGrid.Views.Grid.CustomRowCellEditEventArgs)">
	<summary>
 Sets the repository item that will be used for the created matrix item.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.MatrixItemControl.gridviewMatrixItems_InvalidRowException(System.Object,DevExpress.XtraGrid.Views.Base.InvalidRowExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.MatrixItemControl.gridviewMatrixItems_InvalidValueException(System.Object,DevExpress.XtraEditors.Controls.InvalidValueExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.MatrixItemControl.gridviewMatrixItems_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.MatrixItemControl.gridviewMatrixItems_ShowingEditor(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.MatrixItemControl.repimageSwatch_Click(System.Object,System.EventArgs)">
	<summary>
 Event that trigger when repimageSwatch is clicked. It calls the ShowSwatchSettingForm method to set up the properties of the form base on the selected matrix item.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.MatrixItemControl.rephypMatrixItemName_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Matrix.HeaderControl.ItemDetailDataset">
	<summary> Property that gets the value of ItemDetailDataset. </summary>
	<value> Interprise.Framework.Inventory.DatasetGateway.ItemDetailDatasetGateway </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Matrix.HeaderControl.CurrentFacade">
	<summary> Property that gets the value of CurrentFacade.</summary>
	<value>Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Matrix.HeaderControl.IsReadOnly">
	<summary>
 Gets or sets if the control is editable.
 </summary>
	<value></value>
	<returns></returns>
	<remarks>Override/implement this property to control what should be made readonly. 
 (This is usually called when a transaction is posted.) </remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.HeaderControl.Focus">
	<summary>
 Method use to set the first focus when control loads.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Matrix.GeneralControl.ItemDetailDataset">
	<summary> Property that gets the value of ItemDetailDataset. </summary>
	<value> Interprise.Framework.Inventory.DatasetGateway.ItemDetailDatasetGateway </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Matrix.GeneralControl.CurrentFacade">
	<summary> Property that gets the value of CurrentFacade.</summary>
	<value>Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.GeneralControl.DisplayMatrixItemCodeExample">
	<summary> 
 Method use to display matrix item example.
  </summary>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.GeneralControl.txtSeparatorPrefix_TextChanged(System.Object,System.EventArgs)">
	<summary> Event use to call DisplayMatrixItemCodeExample </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="P:Interprise.Presentation.Inventory.Item.Matrix.AttributeValueControl.AttributeCode">
	<summary> Returns or sets m_attributeCode. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Matrix.AttributeValueControl.AttributeCounter">
	<summary> Returns or sets m_AttributeCounter. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Matrix.AttributeValueControl.CurrentAttribute">
	<summary> Returns m_currentAttribute </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Matrix.AttributeValueControl.ItemDetailDataset">
	<summary> Returns ItemDetailDataset. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Matrix.AttributeValueControl.IsReadOnly">
	<summary>
 Gets or sets if the control is editable.
 </summary>
	<value></value>
	<returns></returns>
	<remarks>Override/implement this property to control what should be made readonly. 
 (This is usually called when a transaction is posted.) </remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeValueControl.DeleteMatrixItemRows(System.String,System.String)">
	<summary>
	</summary>
	<param name="selectedAttributeCode"></param>
	<param name="selectedattributeValueCode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeValueControl.IsAttributeInUsed(System.Boolean)">
	<summary>
	</summary>
	<param name="showMessage"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeValueControl.IsAttributeInUsed(System.String,System.String)">
	<summary>
	</summary>
	<param name="attributeCode"></param>
	<param name="attributeValueCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeValueControl.IsValid(System.String@,System.Boolean)">
	<summary> Method use to check if is valid. </summary>
	<remarks>
	</remarks>
	<param name="errorMessage "> Use to get error message.</param>
	<param name="forward "> Check if forwarded or not.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeValueControl.Focus">
	<summary>
 Move focus on the first row.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeValueControl.LoadGridSettings">
	<summary> Method use to loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeValueControl.SetFilter(System.Boolean)">
	<summary>
 Method use to filter attributeValues on the grid.
 </summary>
	<param name="isFromWizard"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeValueControl.barMngrGridContextMenu_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary> Overrides barMngrGridContextMenu_ItemClick. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeValueControl.repcboAttributeValueCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeValueControl.repcboAttributeValueCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeValueControl.gridviewAttributeValue_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary>
 Event use to initialize new row.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeValueControl.repcboAttributeValueCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Event use triggers before the search combo list shows / use to assign filtering of the combo list 
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeValueControl.gridviewAttributeValue_InvalidRowException(System.Object,DevExpress.XtraGrid.Views.Base.InvalidRowExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeValueControl.gridviewAttributeValue_InvalidValueException(System.Object,DevExpress.XtraEditors.Controls.InvalidValueExceptionEventArgs)">
	<summary>
 Event that trigger if an invalid value is entered.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Matrix.AttributeTabControl.ItemDetailDataset">
	<summary> Property that gets the value of ItemDetailDataset. </summary>
	<value>Interprise.Framework.Inventory.DatasetGateway.ItemDetailDatasetGateway </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Matrix.AttributeTabControl.SelectedPage">
	<summary>
 Get the selected page.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeTabControl.AddNewPage(System.String)">
	<summary>
 Method use to add new tab page.
 </summary>
	<param name="attributeCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeTabControl.BuildPages(System.Boolean)">
	<summary>
 Build all atributes into a tab pages behavior.
 </summary>
	<param name="isRebuild"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeTabControl.Focus">
	<summary>
 Method use to set the first focus when control loads.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeTabControl.InitializeControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeTabControl.BuildPages">
	<summary>
 Method use to build the tab pages.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeTabControl.DeleteAttribute">
	<summary>
 Deletes the selected attribute
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeTabControl.GetCommaSeparatedAttribute">
	<summary>
 Get the Comma Separated Attribute.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeTabControl.SetFilter(System.String)">
	<summary>
 Set the attribute filter.
 </summary>
	<param name="attributeCode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeTabControl.UndoChanges">
	<summary>
 Set the default page.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeTabControl.cboAttribute_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Event use to assign selected values from the search combo list.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="erow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeTabControl.cboAttribute_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeTabControl.TabAttribute_SelectedPageChanged(System.Object,DevExpress.XtraTab.TabPageChangedEventArgs)">
	<summary> Event use to determine the page you have selected to impost appropriate action </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of TabPageChangedEventArgs of the XtraTab.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeTabControl.cboAttribute_BeforeValidate(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Check if the attribute has transaction or  exceeds the maximum count of attribute. 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeTabControl.cboAttribute_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Event use triggers before the search combo list shows / use to assign filtering of the combo list 
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeTabControl.PluginContainerAttributeValue_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Matrix.AttributeTabControl.PluginContainerAttributeValuePluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.Item.Matrix.IAttributeValueInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Matrix.AttributeControl.ItemDetailDataset">
	<summary> Property that gets the value of ItemDetailDataset. </summary>
	<value>Interprise.Framework.Inventory.DatasetGateway.ItemDetailDatasetGateway </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Matrix.AttributeControl.IsReadOnly">
	<summary>
 Gets or sets if the control is editable.
 </summary>
	<value></value>
	<returns></returns>
	<remarks>Override/implement this property to control what should be made readonly. 
 (This is usually called when a transaction is posted.) </remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Matrix.AttributeControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeControl.CloseEditor">
	<summary> Method use to close editor. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeControl.Focus">
	<summary>
 Set the focus to the first row of the grid. 
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeControl.LoadGridSettings">
	<summary> Method use to loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeControl.MoveAttribute(System.Boolean)">
	<summary> Method use to move attribute. </summary>
	<remarks>
	</remarks>
	<param name="isMoveUp ">Check if the row moves up.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeControl.barMngrGridContextMenu_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary>Event use to execute the toolbar icons. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeControl.gridviewAttribute_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary>
 Initialize grid new row.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeControl.gridviewAttribute_InvalidRowException(System.Object,DevExpress.XtraGrid.Views.Base.InvalidRowExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeControl.gridviewAttribute_InvalidValueException(System.Object,DevExpress.XtraEditors.Controls.InvalidValueExceptionEventArgs)">
	<summary>
 Event that trigger if an invalid value is enetered.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeControl.repcboAttributeCode_AddNewValue(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Event that adds new value in combo list..
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeControl.repcboAttributeCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.AttributeControl.repcboAttributeCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
</member><member name="P:Interprise.Presentation.Inventory.Item.MainControl.CurrentDataset">
	<summary> Returns  CurrentDataset . </summary>
	<value>
	</value>
</member><member name="P:Interprise.Presentation.Inventory.Item.MainControl.CurrentFacade">
	<summary> Returns CurrentFacade. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.MainControl.ItemDetailDataset">
	<summary> Returns ItemDetailDataset. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.MainControl.IsItemCodeChanged">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.MainControl.IsReadOnly">
	<summary> Property to read enable or disable controls </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.MainControl.ItemCode">
	<summary> Returns ItemCode. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.MainControl.ItemDescription">
	<summary>
 Returns item description.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.MainControl.LanguageCode">
	<summary>
 Gets/set current locale.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.MainControl.IsLoadFromWizard">
	<summary> Returns or sets loadfromwizard. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.AddData(System.String)">
	<summary> Add record to inventory dataTables </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.CopyItem(Interprise.Framework.Inventory.Shared.Enum.CopyType)">
	<summary> method use to create the copyitem control and show its form </summary>
	<remarks>
	</remarks>
	<param name="copyType ">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.CorrectAllocation">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.DeleteData">
	<summary>
 Delete currently loaded item. 
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.DisplayErrorMessage(Interprise.Framework.Base.Shared.Enum.ExceptionType,System.Exception,System.String)">
	<summary>
	</summary>
	<param name="ExceptionType"></param>
	<param name="ex"></param>
	<param name="errorMessage"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.EnableDisableControls">
	<summary> Property to read enable or disable grid column. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.EndCurrentEdit">
	<summary> Method use overloads EndcurrentEdit </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.Find">
	<summary> Finds a record/transaction. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.GetHtmLCode(System.String)">
	<summary>
	</summary>
	<param name="columnName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.InitializeControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.IsPageVisible(System.String)">
	<summary>
	</summary>
	<param name="pageName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.ItemTypeChange(System.String)">
	<summary> Method use to change item type </summary>
	<remarks>
	</remarks>
	<param name="itemType ">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.LoadGridSettings">
	<summary> Loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.LoadHTML">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.LoadAnalysis(System.Boolean)">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.LoadDataSet(System.String,System.Data.DataRow,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
  Method use to fetch data from the daTabase and populates the Tables specified in the parameters. 
 </summary>
	<param name="documentCode"></param>
	<param name="row"></param>
	<param name="clearTableType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.LoadDataset(System.String)">
	<summary>
 Load record depending on page selected.
 </summary>
	<param name="pageName"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.LoadHistory">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.LoadItem(System.String)">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.LoadItemMatrix(System.Boolean)">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.LoadItemWebOption">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.LoadKitDetail(System.Boolean)">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.LoadLedger">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.LoadLocation">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.LoadTransactions">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.LoadPricingDetail(System.Boolean)">
	<summary>
 Load records of pricing table.
 </summary>
	<param name="isReload"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.LoadPricingLevel">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.LoadPromotionalPricing(System.Boolean)">
	<summary>
	</summary>
	<param name="isReload"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.LoadRecentTransaction">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.GetSetupParam">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.LoadSetup">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.LoadStockInformation(System.Boolean)">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.LoadSupplierPartCode">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.LoadSupplierPromotionalPricing">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.LoadRating">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.LoadWebOption(System.Boolean)">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.ReloadItem(System.String)">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.ReloadMatrixItem">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.ReloadSwatchImages(System.Data.DataTable)">
	<summary>
	</summary>
	<param name="matrixItemTable"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.Print(System.Boolean)">
	<summary>
 Print report for current transaction.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.ProcessKeyPreview(System.Windows.Forms.Message@)">
	<summary> Detects and handles the key pressed down by the user. </summary>
	<remarks>
	</remarks>
	<param name="m ">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.ResetCache">
	<summary>
 Reset web cache
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.RetrieveImages">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.SaveHTMLCodes(System.String,System.String,System.String)">
	<summary>
	</summary>
	<param name="pageName"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.SetFormText">
	<summary>
 Set the text of the form.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.SetLanguageFilter">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.ShowNewForm">
	<summary> Show new record/transaction. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.NewGoodsReceived">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.NewInternalMovement">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.NewOpeningBalance">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.NewStockAdjustment">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.NewStockTransfer">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.UndoChanges">
	<summary> Reject changes in the InventoryDataset </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
  Method use to update the specified Tables in the daTabase. 
 </summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.UpdateDataSetFunction(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Use by matrix
 </summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.UpdatePhotoDisplayMode">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.UploadImage">
	<summary>
 Upload images to the web server.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.BeginUploadImage">
	<summary>
 Upload images to the web server.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.EndUploadImage(System.IAsyncResult)">
	<summary>
 The callback when upload images is completed.
 </summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.UpdateWebImageIndex(System.Boolean)">
	<summary>
	</summary>
	<param name="increment"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.ViewStockValuation">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.ImageControl_OnImageChanged(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.ImageChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.m_itemDetailFacade_Validated(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.ValidatedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.DoShowMessage(System.String,Interprise.Framework.Base.Shared.Enum.MessageWindowIcon)">
	<summary>
	</summary>
	<param name="message"></param>
	<param name="messageStyle"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerDefaultPricingPluginInstance_SelectedCurrencyChanged(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.CurrencyChangedEventArgs)">
	<summary>
 Filters Inventory Pricing Level base on currency and price level code.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerHeaderPluginInstance_OnItemCodeChanged(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.ItemChangedEventArgs)">
	<summary>
 Reload data of selected itemcode.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerItemPhotoPluginInstance_PictureSizeModeChanged(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.SizeModeChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerPageSettingPluginInstance_XMLPackagePopup(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.XMLPackagePopupEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerSwatchPluginInstance_SwatchItemClicked(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerWebSitePluginInstance_WebSiteChanged(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.WebSiteChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.TabGroupGeneralSelectedPageChanged(System.Object,DevExpress.XtraLayout.LayoutTabPageChangedEventArgs)">
	<summary> Use to determine the page you have selected to impost appropriate action. </summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="e ">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.TabGroupPreview_SelectedPageChanged(System.Object,DevExpress.XtraLayout.LayoutTabPageChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.TabGroupWebOption_SelectedPageChanged(System.Object,DevExpress.XtraLayout.LayoutTabPageChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.ImageControl_OnAddImage(System.Object)">
	<summary>
	</summary>
	<param name="sender"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerHeader_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerItemPhoto_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerSetup_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerCustomFields_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerRecentTransaction_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerStockInformation_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerAccessoryItems_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerSubstituteItems_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerUnitMeasure_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerTaxSetup_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerOverrideSalesTax_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerAccounts_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerCostingSetup_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerSupplierPartCode_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerSupplierPromotionalPricing_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerDefaultPricing_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerPricingLevel_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerPromotionalPricing_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerMatrixHeader_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerAttribute_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerMatrixItem_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerSwatch_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerLocationDetails_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerBinLocation_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerItemLedger_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerKitDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerAssembly_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerHistory_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerWebSite_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerPageSetting_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerSearchEngine_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerSummary_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerDescription_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerWarranty_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerLargePicture_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerMediumPicture_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerIcon_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerImages_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerImageSettingsSearchEngine_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerRating_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerAnalysisByQty_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerAnalysisByAmt_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerSuppliers_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerSuppliersPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.Item.Supplier.ISuppliersInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerBundleHeader_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerBundleHeaderPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.Item.IBundleComponentHeaderInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerBundleDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerBundleDetailPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.Item.IBundleComponentDetailInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerAttributeCategory_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerAttributeCategoryPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.Item.ItemAttribute.IItemAttributeCategoryControlInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerAttributeDepartment_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerAttributeDepartmentPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.Item.ItemAttribute.IItemAttributeDepartmentControlInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerControl1_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerControlTransactionsPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.Base.IBaseInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerMobile_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerMobilePluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.WebOption.IImageInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerMiniCart_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerMiniCartPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.WebOption.IImageInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerProductIdentifier_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.MainControl.PluginContainerProductIdentifierPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.Item.IProductIdentifierInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Ledger.TransactionFilterControl.FilterType">
	<summary> Property that sets the value of filter type. </summary>
	<value> Framework.Inventory.Shared.Enum.LedgerFilterType  </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.TransactionFilterControl.BuildFilter">
	<summary> Method use to build filter. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.TransactionFilterControl.CreatePopup">
	<summary> Method use to create the section control and attached them to the main control. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.TransactionFilterControl.Focus">
	<summary>
 Move focus to the first control.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.TransactionFilterControl.m_popupedit_CloseUp(System.Object,DevExpress.XtraEditors.Controls.CloseUpEventArgs)">
	<summary> Check the filtering of the ledger.</summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.TransactionFilterControl.CheckOptions_CheckedChanged(System.Object,System.EventArgs)">
	<summary> Check the filtering od the ledger base on transaction selected.. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.TransactionFilterControl.chkAll_CheckedChanged(System.Object,System.EventArgs)">
	<summary> Set the legder filter to nothing.</summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.TotalPrice.MainForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.TotalPrice.MainControl.PluginContainerGeneral_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Kit.KitControl.CurrentDataset">
	<summary> Property that gets the value of GatewayKitDataset. </summary>
	<value> Framework.Base.DatasetComponent.BaseDataset</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Kit.KitControl.CurrentFacade">
	<summary> Property that gets the value of CurrentFacade.. </summary>
	<value> Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Kit.KitControl.SelectedItem">
	<summary> Property that gets the value of SelectedItem. </summary>
	<value>String </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Kit.KitControl.CurrentPage">
	<summary> Property that gets the value of Current Page.</summary>
	<value>DevExpress.XtraTab.XtraTabPage </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Kit.KitControl.ItemKitCode">
	<summary> Property that gets the value of ItemKitCode. </summary>
	<value> String</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Kit.KitControl.GroupCode">
	<summary>Property that gets or sets the value GroupCode. </summary>
	<value>  String</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Kit.KitControl.ChildView">
	<summary> Property that gets the value of ChildView. </summary>
	<value>DevExpress.XtraGrid.Views.Grid.GridView </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.AddNewPage">
	<summary> Methods use to add new page. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.AddRow">
	<summary> Method use to add row. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.AddOptionGroup(System.String)">
	<summary> Method use to add option group. </summary>
	<remarks>
	</remarks>
	<param name="groupCode ">Use to set as string empty.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.AssignLanguageFilter">
	<summary> Method use to assign language filter. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.BuildGroupPages(System.Boolean)">
	<summary> Method use build group pages. </summary>
	<remarks>
	</remarks>
	<param name="isRebuild ">Use to check if it is rebuild.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.CreateTemporaryColumnForHTMLDescription">
	<summary>
 Create a temporary column for HTML description.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.CreateShortCutKey(System.String,DevExpress.XtraTab.XtraTabPage)">
	<summary>
 Determine the shortcut key for the Tab to use
 </summary>
	<param name="GroupCode"></param>
	<param name="page"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.EnableControl(System.Boolean)">
	<summary> Method use to enable control. </summary>
	<remarks>
	</remarks>
	<param name="isEnable ">Use to check if it is enable or not.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.DeleteGroup">
	<summary> Method use to delete group. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.LoadGridSettings">
	<summary>
 Method use to loads default grid settings. 
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.LoadPhoto(DevExpress.XtraEditors.PictureEdit)">
	<summary>
	</summary>
	<param name="pictureEdit"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.LoadPhoto(DevExpress.XtraEditors.PictureEdit,System.String)">
	<summary>
	</summary>
	<param name="pictureEdit"></param>
	<param name="fileName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.LoadDataSet(System.String,System.Data.DataRow,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary> Method use to fetch data from the daTabase and populates the Tables specified in the parameters. </summary>
	<remarks>
	</remarks>
	<param name="documentCode "> Retrieve the adjustment Table according to adjustment code. </param>
	<param name="row ">Set the row as system.data.datarow</param>
	<param name="clearTableType"></param>
	<returns></returns>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.PopulateGroupType">
	<summary>
 Populates combo box with kit group types.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Method use to update the specified Tables in the daTabase. 
 </summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.SetLanguageFilter(System.String)">
	<summary>
 Method use to assign language filter.
 </summary>
	<param name="LanguageCode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.UndoChanges">
	<summary> Method use to undo changes made to the dataset. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.ValidateDefault">
	<summary> Method use to validate default settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.btnHTMLDescription_Click(System.Object,System.EventArgs)">
	<summary>Event use to get HTML Description. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.barOptionGroup_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary> Event use to delete bar option group. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.btnGroupItems_Click(System.Object,System.EventArgs)">
	<summary>  Event use to set PluginContainerDetail to not visible.</summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.cboCurrencyCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.cboLanguageCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.gridviewKitDetail_FocusedColumnChanged(System.Object,DevExpress.XtraGrid.Views.Base.FocusedColumnChangedEventArgs)">
	<summary> Event use to call validatedefault. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.gridviewKitDetail_FocusedRowChanged(System.Object,DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs)">
	<summary> Event use to validatedefault. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.gridviewKitDetail_ValidatingEditor(System.Object,DevExpress.XtraEditors.Controls.BaseContainerValidateEditorEventArgs)">
	<summary> Event use to validate editor of grid view. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.gridviewKitDetail_CustomDrawCell(System.Object,DevExpress.XtraGrid.Views.Base.RowCellCustomDrawEventArgs)">
	<summary> Event use to format the custom cell. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.gridviewKitDetail_InvalidValueException(System.Object,DevExpress.XtraEditors.Controls.InvalidValueExceptionEventArgs)">
	<summary>
 Event use if an invalid value is entered.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.gridviewKitDetail_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary>
 Event use to initialize new row.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.gridviewKitDetail_CellValueChanged(System.Object,DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs)">
	<summary> Event use to changed cell value. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.gridviewKitDetail_MasterRowExpanded(System.Object,DevExpress.XtraGrid.Views.Grid.CustomMasterRowEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.m_KitFacade_GroupTypeChanged(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.KitGroupTypeChangedEventArgs)">
	<summary>
 Event use to clear the default components of the selected group.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.m_kitImageBinding_Format(System.Object,System.Windows.Forms.ConvertEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.memoOptionGoupDescriptionExtDescription_QueryPopUp(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Event use to set PopupStartSize to memoOptionGoupDescriptionExtDescription.Size.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.repcboUnitMeasureCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary> Event use to triggers before the search combo list shows / use to assign filtering of the combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.repcboUnitMeasureCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Event use to use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.repcboUnitMeasureCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Event use to brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.cboCurrency_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Event use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.repcboItemCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary> Event use to triggers before the search combo list shows / use to assign filtering of the combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.repcboItemCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Event use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.repcboItemCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Event use to brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.rephypPlainHTMLDetail_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Event use to brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.repItemDescription_QueryPopUp(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Set the pop up size of the repostory control.
 </summary>
	<param name="sender">The object that executes this method.</param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.TabOptionGroup_SelectedPageChanged(System.Object,DevExpress.XtraTab.TabPageChangedEventArgs)">
	<summary> Event use to determine the page you have selected to impost appropriate action. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.txtGroupCode_Validated(System.Object,System.EventArgs)">
	<summary> Event use to validate txtGroupCode. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.txtGroupCode_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary> Event use to validate txtGroupCode </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.gridviewKitDetail_InvalidRowException(System.Object,DevExpress.XtraGrid.Views.Base.InvalidRowExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Kit.KitControl.cboSelectionControl_QueryPopUp(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.ItemWizard.SetupControl.ItemDetailDataset">
	<summary> Property that gets the value of ItemDetailDataset . </summary>
	<value>Interprise.Framework.Inventory.DatasetGateway.ItemDetailDatasetGateway  </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.SetupControl.CreateBindings">
	<summary> Method use to create the section control and attached them to the main control. </summary>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.ItemType">
	<summary> Property that gets the value of ItemType, </summary>
	<value> String</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.OldItemType">
	<summary> Property that gets or sets the value of OldItemType</summary>
	<value>String </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.CurrentDataset">
	<summary> Property that gets the value of CurrentDataset . </summary>
	<value> Interprise.Framework.Base.DatasetComponent.BaseDataset</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>Interprise.Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.ItemCode">
	<summary> Property that gets the value of ItemCode. </summary>
	<value> String</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.SelectedItemType">
	<summary> Property that gets the value of seleted item type. </summary>
	<value> String</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.IsDescriptionModified">
	<summary> Property that gets or sets value if description is modified.</summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.IsItemTypeChange">
	<summary> Property that gets or sets value if the item type is changed. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.AddData(System.String)">
	<summary> Method use to create a blank datarow on the first index of the related Tables. </summary>
	<param name="documentCode">Set as parameter for adding data.</param>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.AddData(Interprise.Framework.Base.Shared.Enum.ItemType,System.String)">
	<summary>
	</summary>
	<param name="itemType"></param>
	<param name="itemName"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.CreateBindings">
	<summary> Method use to create the section control and attached them to the main control. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.GetAssemblyControl(Interprise.Extendable.Inventory.Presentation.Item.Assembly.ICreateAssemblyInterface)">
	<summary> Method use to create the section control and attached them to the main control. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.CreateSetupControl">
	<summary> Method use to create the section control and attached them to the main control. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.GetUnitMeasureControl(Interprise.Extendable.Inventory.Presentation.Item.UnitMeasure.IUnitMeasureInterface)">
	<summary>
 Method use to create the section control and attached them to the main control. 
 </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.GetCategoryControl(Interprise.Extendable.Inventory.Presentation.Item.ItemAttribute.IItemAttributeCategoryControlInterface)">
	<summary>
 Method use to create the section control and attached them to the main control. 
 </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.GetCostingControl(Interprise.Extendable.Inventory.Presentation.Item.Cost.ICostingInterface)">
	<summary> Method use to create the section control and attached them to the main control. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.GetSupplierControl(Interprise.Extendable.Inventory.Presentation.Item.ISupplierInterface)">
	<summary> Method use to create the section control and attached them to the main control. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.GetPricingControl(Interprise.Extendable.Inventory.Presentation.Item.Pricing.IPricingInterface)">
	<summary>
 Creates and return the instance of the pricing control.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.GetAccountControl(Interprise.Extendable.Inventory.Presentation.SharedControl.IItemAccountsInterface)">
	<summary> 
 Method use to create the section control and attached them to the main control. 
 </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.GetDepartmentControl(Interprise.Extendable.Inventory.Presentation.Item.ItemAttribute.IItemAttributeDepartmentControlInterface)">
	<summary> 
 Method use to create the section control and attached them to the main control. 
 </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.GetBinLocationControl(Interprise.Extendable.Inventory.Presentation.Item.BinLocation.IBinLocationInterface)">
	<summary>
 Create bin location control.
 </summary>
	<param name="plugin">The control that serves as a plugin or replacement for the current control.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.GetBinWarehouseControl(Interprise.Extendable.Inventory.Presentation.Item.BinLocation.IWarehouseInterface)">
	<summary>
 Create warehouse control.
 </summary>
	<param name="plugin">The control that serves as a plugin or replacement for the current control.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.GetMatrixGeneralControl(Interprise.Extendable.Inventory.Presentation.Item.Matrix.IGeneralInterface)">
	<summary> 
 Method use to create the section control and attached them to the main control. 
 </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.GetMatrixAttributeControl(Interprise.Extendable.Inventory.Presentation.Item.Matrix.IAttributeInterface)">
	<summary> 
 Method use to create the section control and attached them to the main control. 
 </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.GetMatrixAttributeValueControl(Interprise.Extendable.Inventory.Presentation.Item.Matrix.IAttributeValueInterface)">
	<summary> 
 Method use to create the section control and attached them to the main control. 
 </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.GetMatrixItemControl(Interprise.Extendable.Inventory.Presentation.Item.Matrix.IMatrixItemInterface)">
	<summary> 
 Method use to create the section control and attached them to the main control. 
 </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.GetItemPhotoControl(Interprise.Extendable.Inventory.Presentation.Item.IItemPhotoInterface)">
	<summary>
 Create photo control.
 </summary>
	<param name="plugin">The control that serves as a plugin or replacement for the current control.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.Focus">
	<summary>
 Set focus on the first control.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.FilterTaxCode">
	<summary>
 Filter content of sales tax code.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.BeginGenerateInventoryMatrixItem(System.String@)">
	<summary>
	</summary>
	<param name="errorMessage"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.GenerateInventoryMatrixItemCompleted(System.IAsyncResult)">
	<summary>
	</summary>
	<param name="asyncResult"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.GenerateInventoryMatrixItem(System.String@)">
	<summary> Generate inventory matrix item. </summary>
	<returns>Boolean, If true then it will generate inventory matrix item otherwise not.</returns>
	<remarks>
	</remarks>
	<param name="errorMessage "> Use to catch the error message.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.LoadGridSettings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.ItemWizardForm_FormClosed(System.Object,System.Windows.Forms.FormClosedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Method use to update the specified Tables in the daTabase. 
 </summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.UpdateDataSetFunction(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.ShowProgressForm(Interprise.Framework.Base.Shared.Enum.ProgressStyle)">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.NewItemWizard_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.CloseProgressForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.UpdateProgress(System.Int32,System.String)">
	<summary>
	</summary>
	<param name="progress"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.m_itemDetailFacade_ProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.InitializeControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.ShowMainForm(System.String,System.Data.DataRow)">
	<summary> Show the item detail form. </summary>
	<remarks>
	</remarks>
	<param name="ItemCode ">The item code to view.</param>
	<param name="itemRow ">Row of the item to be displayed.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.ProcessKeyPreview(System.Windows.Forms.Message@)">
	<summary> Method use to detects the keys pressed by the user </summary>
	<remarks>
	</remarks>
	<param name="m">The value for the pressed keyboard control. </param>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.SelectPage(System.Int32)">
	<summary> 
 Method use to set focus from one control to another.
 </summary>
	<remarks>
	</remarks>
	<param name="key "><para>Retrieves the key as integer when press page up or page down</para>
	</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.ValidateRequiredFields(System.Text.StringBuilder@)">
	<summary> Method use to validate required fields. </summary>
	<remarks>
	</remarks>
	<returns>Boolean, If true then it will validate required fields.</returns>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.ValidateUniMeasureQuantity(System.Text.StringBuilder@)">
	<summary> Method use to validate unit measured in quantity. </summary>
	<returns>Boolean, If true then it will validate unit measure.</returns>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.btnAddClassTemplate_Click(System.Object,System.EventArgs)">
	<summary>
 Event use when adding new Class Template.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.btnAddManufacturer_Click(System.Object,System.EventArgs)">
	<summary>
 Event use when adding new manufacturer.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.btnRefreshClassTemplate_Click(System.Object,System.EventArgs)">
	<summary>
 Event use to refersh the class template.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.btnDepartment_Click(System.Object,System.EventArgs)">
	<summary> Event use to add new department. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.ApplyClassTemplate">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.ApplyClassTemplate_Completed(System.IAsyncResult)">
	<summary>
 Ends the application of class template.
 </summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.ChangeCursor(System.Windows.Forms.Cursor,System.Boolean)">
	<summary>
 Change cursor to different types.
 </summary>
	<param name="cursorType"></param>
	<param name="isFinished"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.cboGlClassCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Event use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.btnAddUM_Click(System.Object,System.EventArgs)">
	<summary> Event use add new unit measure. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.btnAddCategory_Click(System.Object,System.EventArgs)">
	<summary> Event use to add new category. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.btnLoadPhoto_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.cboClassTemplate_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.cboClassTemplate_AddNewValue(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary> Event use to add values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.chkRecalculatePrice_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
 Event use if the pricing is autorecalculate or not.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.cboSalesTaxOption_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary> 
 Event use to determine the page you have selected to impost appropriate action. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.cboSalesTaxCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Event use to assign selected values from the search combo list.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="erow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.cboCopyFromItem_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.cboCommissionable_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary> Event use to determine the page you have selected to impost appropriate action. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e  "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.cboLanguageCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.cboSalesTaxCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.cboLanguageCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.cboClassTemplate_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary> Event use to triggers before the search combo list shows / use to assign filtering of the combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.cboCommissionType_SelectedValueChanged(System.Object,System.EventArgs)">
	<summary>
 Handles accesiblity of commission percent control.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.cboClass_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>Event use to assign selected values from the search combo list.  </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.cboManufacturer_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.m_itemDetailFacade_Validated(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.ValidatedEventArgs)">
	<summary>
 Event that trigger if you did not put a value on a required column.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.optItemType_EditValueChanging(System.Object,DevExpress.XtraEditors.Controls.ChangingEventArgs)">
	<summary> Set the old value to the new one. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.optItemType_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary> Use to determine the page you have selected to impost appropriate action. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.txtItemCode_Enter(System.Object,System.EventArgs)">
	<summary> Event use when cursor or Tab change this event set txtItemCode to Nothing </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.txtItemCode_Leave(System.Object,System.EventArgs)">
	<summary>Event use when cursor or Tab change this event set txtItemCode to TEMPORARY_DOCUMENTCODE </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.txtItemCode_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Use to avoid error when cursor lose focus due to change of codes.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.TabWizard_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.TabWizard_SelectedPageChanged(System.Object,DevExpress.XtraTab.TabPageChangedEventArgs)">
	<summary> Event use to determine the page you have selected to impost appropriate action </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.TabWizard_BeforePageDisplayed(System.Object,Interprise.Presentation.Base.ExtendedXtraTabContol.SelectedPageChangingEventArgs)">
	<summary>
  Event use before selecting the page item displayed of the Tab. 
 </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.TabWizard_RestartWizard(System.Object,Interprise.Presentation.Base.ExtendedXtraTabContol.RestartWizardEventArgs)">
	<summary> Event use in Tab when restarting the wizard. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.TabWizard_Cancelled(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary> Event use in Tab when the wizard was cancelled. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.TabWizard_Finished(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.m_warehouseControl_WareCodeChanged(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.WarehouseChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.PluginContainerBundleComponentHeader_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.PluginContainerBundleComponentHeaderPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.Item.IBundleComponentHeaderInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.PluginContainerBundleComponentDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.ItemWizard.ItemWizardControl.PluginContainerBundleComponentDetailPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.Item.IBundleComponentDetailInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.ItemPhotoControl.ItemDetailDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.ItemPhotoControl.CurrentFacade">
	<summary> Returns the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.ItemPhotoControl.PictureSizeMode">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemPhotoControl.AssignPhoto">
	<summary>
 Assign photo for an item.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemPhotoControl.AssignPhoto(System.String)">
	<summary>
 Loads a photo to the control.
 </summary>
	<param name="filePath">Path of the the image to load.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemPhotoControl.AssignPhoto(System.Byte[])">
	<summary>
 Load a photo.
 </summary>
	<param name="photo"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemPhotoControl.AssignPhoto(System.Drawing.Image)">
	<summary>
	</summary>
	<param name="photo"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemPhotoControl.AssignPhoto(System.Drawing.Image,System.String)">
	<summary>
	</summary>
	<param name="photo"></param>
	<param name="filePath"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemPhotoControl.LoadPhoto">
	<summary>
 Loads a photo to the control.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemPhotoControl.LoadGridSettings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemPhotoControl.LoadPhoto(System.String@)">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemPhotoControl.RemovePhoto(DevExpress.XtraEditors.PictureEdit)">
	<summary>
	</summary>
	<param name="pictureEdit"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemPhotoControl.UndoChanges">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemPhotoControl.popupMenuPhoto_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemPhotoControl.piceditItemPhoto_DragDrop(System.Object,System.Windows.Forms.DragEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemPhotoControl.piceditItemPhoto_DragEnter(System.Object,System.Windows.Forms.DragEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.History.HistoryControl.CurrentDataset">
	<summary>
 Returns current dataset.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.History.HistoryControl.CurrentFacade">
	<summary>
 Return CurrentFacade.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.History.HistoryControl.TransactionType">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.History.HistoryControl.BindGridControl">
	<summary>
 Set the datasouce of the grid control.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.History.HistoryControl.LoadGridSettings">
	<summary>
  Method use to set the grid to defaults.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.History.HistoryControl.LoadHistory(System.String,System.Boolean)">
	<summary>
 Load History transactions.
 </summary>
	<param name="itemCode"></param>
	<param name="isReadAsync"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.History.HistoryControl.OpenLink(System.String,System.String)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
</member><member name="M:Interprise.Presentation.Inventory.History.HistoryControl.SetGridDataSource">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.History.HistoryControl.CreateFilterControl">
	<summary>
 Method use to create CRM section control and attached them to the main control. 
 </summary>
</member><member name="M:Interprise.Presentation.Inventory.History.HistoryControl.LoadDataset_Completed(System.IAsyncResult)">
	<summary>
	</summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.History.HistoryControl.rephyDocumentCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.History.HistoryControl.rephypItemName_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.History.HistoryControl.m_filter_FilterChanged(System.Object,System.EventArgs)">
	<summary>
 Occurs when the toolbox service detects that the active designer’s toolbox item filter has changed. 
 </summary>
</member><member name="P:Interprise.Presentation.Inventory.DepartmentControl.ItemDetailDataset">
	<summary> Returns ItemDetailDataset. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.DepartmentControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.DepartmentControl.LoadGridSettings">
	<summary> Loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.DepartmentControl.Refresh">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.DepartmentControl.barMngrGridContextMenu_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary> Overrides barMngrGridContextMenu_ItemClick. </summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="e ">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.DepartmentControl.DepartmentControl_ContextMenuItemAdded(System.Object,Interprise.Presentation.Inventory.Base.ContextMenuEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.DepartmentControl.DepartmentControl_Enter(System.Object,System.EventArgs)">
	<summary>
 Event use to set the focus then show the editor.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.DepartmentControl.gridviewDepartment_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary> Event use to initialize new row. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.DepartmentControl.repcboDepartmentCode_AddNewValue(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary> Event use to add values from the search combo list. </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.DepartmentControl.repcboDepartmentCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.DepartmentControl.repcboDepartmentCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Event use to brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="P:Interprise.Presentation.Inventory.Item.Cost.StandardCostControl.CurrentFacade">
	<summary> Property that gets the value of CurrentFacade. </summary>
	<value>Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Cost.StandardCostControl.CurrentDataset">
	<summary> Property that gets CurrentDataset. </summary>
	<value>Interprise.Framework.Base.DatasetComponent.BaseDataset</value>
	<returns>BaseDataset</returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Cost.StandardCostControl.ItemDetailDataset">
	<summary> Property that gets the value of ItemdetailDataset. </summary>
	<value> Interprise.Framework.Inventory.DatasetGateway.ItemDetailDatasetDatasetGateway</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Cost.StandardCostControl.LoadGridSettings">
	<summary>
 Method use to set the grid to defaults.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Cost.StandardCostControl.LoadDataSet(System.String,System.Data.DataRow,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
 Method use to fetch data from the daTabase and populates the Tables specified in the parameters. 
 </summary>
	<param name="documentCode"></param>
	<param name="row"></param>
	<param name="clearTableType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Cost.StandardCostControl.rephyUserCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Opens the user account details.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Cost.CostingDetailMainControl.LoadDataSet(System.String,System.Data.DataRow,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary> Method use to fetch data from the daTabase and populates the Tables specified in the parameters. </summary>
	<remarks>
	</remarks>
	<param name="documentCode "> Retrieve the adjustment Table according to adjustment code. </param>
	<param name="row ">Set the row as system.data.datarow</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Cost.CostingDetailMainControl.LoadGridSettings">
	<summary>
 Method use to set the grid to defaults.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Cost.CostingDetailMainControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Save changes to average cost.
 </summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Cost.CostingDetailMainControl.PluginContainerAverageCost_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Cost.CostingDetailMainControl.PluginContainerStandardCost_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Cost.CostingDetailMainControl.PluginContainerGeneral_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Cost.CostingDetailControl.CurrentFacade">
	<summary> Property that gets the value of CurrentFacade. </summary>
	<value>Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Cost.CostingDetailControl.ItemDetailDataset">
	<summary> Property that gets the value of GatewayItemDetailDataset. </summary>
	<value>Framework.Base.DatasetComponent.BaseDataset </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Cost.CostingDetailControl.UpdateDatasetFunction">
	<summary> Method use to update the specified Tables in the daTabase. </summary>
	<value>Boolean, if true then it will save otherwise not.</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Cost.CostingDetailControl.SetupDisplayText">
	<summary>
 Method use to show or hide or rename columns of the grid.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Cost.CostingDetailControl.btnReset_Click(System.Object,System.EventArgs)">
	<summary>
 Reset the value of the Average Cost.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Cost.AverageLastCostControl.CostType">
	<summary>
 Property that gets or sets the value of CostType.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Cost.AverageLastCostControl.CurrentFacade">
	<summary> Property that gets the value of CurrentFacade. </summary>
	<value>Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Cost.AverageLastCostControl.CurrentDataset">
	<summary> Property that gets CurrentDataset. </summary>
	<value>Interprise.Framework.Base.DatasetComponent.BaseDataset</value>
	<returns>BaseDataset</returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Cost.AverageLastCostControl.ItemDetailDataset">
	<summary> Property that gets the value of ItemdetailDataset. </summary>
	<value> Interprise.Framework.Inventory.DatasetGateway.ItemDetailDatasetDatasetGateway</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Cost.AverageLastCostControl.LoadDataSet(System.String,System.Data.DataRow,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
  Method use to fetch data from the daTabase and populates the Tables specified in the parameters. 
 </summary>
	<param name="documentCode"></param>
	<param name="row"></param>
	<param name="clearTableType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Cost.AverageLastCostControl.LoadGridSettings">
	<summary>
  Method use to load grid settings. 
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Cost.AverageLastCostControl.ShowOrHideOrRenameColumns">
	<summary>
 Method use to show or hide or rename columns of the grid.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Cost.AverageLastCostControl.CostingDetailControl_Enter(System.Object,System.EventArgs)">
	<summary>
 Event use to focus the cursor in the first record of the grid.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Cost.AverageLastCostControl.rephyDocumentCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.CopyItem.CopyItemMainControl.ItemCode">
	<summary> Get/Set ItemCode. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.CopyItem.CopyItemMainControl.ItemDescription">
	<summary> Get/Set ItemDescription. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.CopyItem.CopyItemMainControl.PluginContainerCopyItemMain_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.CopyItem.CopyItemForm.ItemCode">
	<summary> Get/Set ItemCode. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.CopyItem.CopyItemForm.ItemDescription">
	<summary> Get/Set ItemDescription. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.CopyItem.CopyItemForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.Swatch.ImagePreviewForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Matrix.Swatch.ImagePreviewForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.Attribute.Manager.IImagePreviewInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Matrix.Swatch.ImagePreviewControl.PluginContainerImagePreview_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Matrix.Swatch.ImagePreviewControl.PluginContainerImagePreviewPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.SystemManager.Attribute.Manager.IImageInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Ledger.InventoryLedgerControl.CurrentDataset">
	<summary>
 Returns current dataset.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Ledger.InventoryLedgerControl.CurrentFacade">
	<summary>
 Return CurrentFacade.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Ledger.InventoryLedgerControl.TransactionType">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.InventoryLedgerControl.GetFilterControl">
	<summary> Method use to create the section control and attached them to the main control. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.InventoryLedgerControl.GetDateFilterControl(Interprise.Extendable.Base.Presentation.CRM.IFilterInterface)">
	<summary>
	</summary>
	<param name="plugin"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.InventoryLedgerControl.InitializeControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.InventoryLedgerControl.BindGridControl">
	<summary>
 Set the datasouce of the grid control.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.InventoryLedgerControl.SetLedgerFilter">
	<summary> Method use to set ledger filters. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.InventoryLedgerControl.LoadGridSettings">
	<summary>
  Method use to set the grid to defaults.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.InventoryLedgerControl.LoadHistory(System.String,System.Boolean)">
	<summary>
 Load History transactions.
 </summary>
	<param name="itemCode"></param>
	<param name="isReadAsync"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.InventoryLedgerControl.OpenLink(System.String,System.String)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.InventoryLedgerControl.SetGridDataSource">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.InventoryLedgerControl.LoadDataset_Completed(System.IAsyncResult)">
	<summary>
	</summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.InventoryLedgerControl.rephyDocumentCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.InventoryLedgerControl.cboWarehouseCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Event use to set ledger filter.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow  "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.InventoryLedgerControl.chkAllWarehouse_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
 Event use to select all warehouse 
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.InventoryLedgerControl.m_datefiltercontrol_FilterChanged(System.Object,System.EventArgs)">
	<summary> Event use to set filters. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Ledger.InventoryLedgerControl.m_transactionFilterControl_FilterChanged(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.TransactionFilterChangedEventArgs)">
	<summary> Method use to set filters. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="P:Interprise.Presentation.Inventory.Item.ItemAttribute.ItemAttributeCategoryControl.CurrentPage">
	<summary> Property that gets the value of Current Page.</summary>
	<value>DevExpress.XtraTab.XtraTabPage </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.ItemAttribute.ItemAttributeCategoryControl.ChildView">
	<summary> Property that gets the value of ChildView. </summary>
	<value>DevExpress.XtraGrid.Views.Grid.GridView </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemAttribute.ItemAttributeCategoryControl.AddNewPage">
	<summary> Methods use to add new page. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemAttribute.ItemAttributeCategoryControl.DeleteCategoryPage">
	<summary> Method use to delete group. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemAttribute.ItemAttributeCategoryControl.InitNewRow(DevExpress.XtraGrid.Views.Grid.GridView)">
	<summary>
 Method use to initializes the new rows of the grid control.
 </summary>
	<param name="gridview">Retrieves the gridview of the current grid control.</param>
	<returns>Datarow</returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.ItemAttribute.ItemAttributeDepartmentControl.CurrentPage">
	<summary> Property that gets the value of Current Page.</summary>
	<value>DevExpress.XtraTab.XtraTabPage </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.ItemAttribute.ItemAttributeDepartmentControl.ChildView">
	<summary> Property that gets the value of ChildView. </summary>
	<value>DevExpress.XtraGrid.Views.Grid.GridView </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemAttribute.ItemAttributeDepartmentControl.AddNewPage">
	<summary> Methods use to add new page. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemAttribute.ItemAttributeDepartmentControl.DeleteDepartmentPage">
	<summary> Method use to delete group. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.ItemAttribute.ItemAttributeDepartmentControl.InitNewRow(DevExpress.XtraGrid.Views.Grid.GridView)">
	<summary>
 Method use to initializes the new rows of the grid control.
 </summary>
	<param name="gridview">Retrieves the gridview of the current grid control.</param>
	<returns>Datarow</returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.CopyItem.CopyItemControl.CurrentDataset">
	<summary> Property that gets the value of CurrentDataset. </summary>
	<value> Framework.Base.DatasetComponent.BaseDataset</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.CopyItem.CopyItemControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.CopyItem.CopyItemControl.CopyType">
	<summary> Property that sets the value of the copy type. </summary>
	<value> Framework.Inventory.Shared.Enum.CopyType</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.CopyItem.CopyItemControl.ItemCode">
	<summary> Property that gets or sets the value of the ItemCode </summary>
	<value> String</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.CopyItem.CopyItemControl.ItemDescription">
	<summary>Property that gets or sets value of Item Description </summary>
	<value>  String</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.CopyItem.CopyItemControl.DuplicatedItemCodes">
	<summary> Property that gets the value of BuildItemCodes. </summary>
	<value> String</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.CopyItem.CopyItemControl.CopyItem">
	<summary> Method use to preserve the value of copy item. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.CopyItem.CopyItemControl.CreateItemRow">
	<summary> Method use to create the section control and attached them to the main control. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.CopyItem.CopyItemControl.LoadGridSettings">
	<summary> Method use to loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.CopyItem.CopyItemControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary> Method use to update the specified Tables in the daTabase. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.CopyItem.CopyItemControl.BuildItemCodes">
	<summary>
 Method use to build ItemCodes. 
 </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.CopyItem.CopyItemControl.spinItemCopyCounter_EditValueChanged(System.Object,System.EventArgs)">
	<summary> Event use to create new item row. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.CopyItem.CopyItemControl.gridviewCopyItem_InvalidValueException(System.Object,DevExpress.XtraEditors.Controls.InvalidValueExceptionEventArgs)">
	<summary>
 Event that trigger when item code already exist.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.CopyItem.CopyItemControl.gridviewCopyItem_ValidatingEditor(System.Object,DevExpress.XtraEditors.Controls.BaseContainerValidateEditorEventArgs)">
	<summary> Event use to validate editor for grid view of copy item. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="P:Interprise.Presentation.Inventory.Item.BundleComponentsControl.ItemCode">
	<summary>Property that gets the value of itemcode. </summary>
	<value>String </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.BundleComponentsControl.CurrencyCode">
	<summary>
 Retruns selected currency.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.BundleComponentsControl.LoadGridSettings">
	<summary>
 Method use to loads default grid settings.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.BundleComponentsControl.ApplyPricing(System.Data.DataRowView,System.String,System.Object)">
	<summary>
 Recalculates pricing on foreign currencies.
 </summary>
	<param name="pricingDetailRowView"></param>
	<param name="fieldName"></param>
	<param name="value"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.BundleComponentHeaderControl.CurrencyCode">
	<summary>
 Retruns selected currency.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.BinLocation.BinLocationWizardItemControl.BinLocationDataset">
	<summary> Property that gets the value of CurrentDataset . </summary>
	<value> Interprise.Framework.Base.DatasetComponent.BaseDataset</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.BinLocation.BinLocationWizardItemControl.BinLocationFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>Interprise.Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.BinLocation.BinLocationWizardItemControl.repcboItemCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>Event use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.BinLocation.BinLocationWizardForm.GetBinLocationWizardControl(Interprise.Extendable.Inventory.Presentation.Item.BinLocation.IBinLocationWizardControlInterface)">
	<summary> Method use to create the section control and attached them to the main control. </summary>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.BinLocation.BinLocationWizardControl.CurrentDataset">
	<summary> Property that gets the value of CurrentDataset . </summary>
	<value> Interprise.Framework.Base.DatasetComponent.BaseDataset</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.BinLocation.BinLocationWizardControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>Interprise.Extendable.Base.Facade.IBaseInterface </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.BinLocation.BinLocationWizardControl.IsByProduct">
	<summary>
 Property that gets or sets the value of IsByProduct
 </summary>
	<value></value>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.BinLocation.BinLocationWizardControl.IsByLocation">
	<summary>
 Property that gets or sets the value of IsByLocation
 </summary>
	<value></value>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.BinLocation.BinLocationWizardControl.IsMore">
	<summary>
 Property that gets or sets the value of IsByLocation
 </summary>
	<value></value>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.BinLocation.BinLocationWizardControl.GetBinLocationItemWizardByProductControl(Interprise.Extendable.Inventory.Presentation.Item.BinLocation.IBinLocationWizardItemControlInterface)">
	<summary> Method use to create the section control and attached them to the main control. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.BinLocation.BinLocationWizardControl.GetBinLocationByProductControl(Interprise.Extendable.Inventory.Presentation.Item.BinLocation.IBinLocationInterface)">
	<summary> Method use to create the section control and attached them to the main control. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.BinLocation.BinLocationWizardControl.GetBinLocationItemWizardByLocationControl(Interprise.Extendable.Inventory.Presentation.Item.BinLocation.IBinLocationWizardItemControlInterface)">
	<summary> Method use to create the section control and attached them to the main control. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.BinLocation.BinLocationWizardControl.GetBinLocationByLocationControl(Interprise.Extendable.Inventory.Presentation.Item.BinLocation.IBinLocationInterface)">
	<summary> Method use to create the section control and attached them to the main control. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.BinLocation.BinLocationWizardControl.GetCriteriaControl">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.BinLocation.BinLocationWizardControl.LoadMoreItems">
	<summary>
 Load more items to the grid
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.BinLocation.BinLocationWizardControl.TabBinLocationWizard_SelectedPageChanged(System.Object,DevExpress.XtraTab.TabPageChangedEventArgs)">
	<summary>
 Event use to determine the page you have selected to impost appropriate action
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.BinLocation.BinLocationWizardControl.cboWarehouse_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Redirect you to the warehouse form.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.BinLocation.BinLocationWizardControl.m_binLocationFacade_Validated(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.ValidatedEventArgs)">
	<summary>
 Event that trigger if you did not put a value on a required column.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.BinLocation.BinLocationControl.MainViewRowView">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.BinLocation.BinLocationControl.ChildSelectedRow">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.BinLocation.BinLocationControl.AddGridHandler">
	<summary>
 Add the events associated with grids in the control.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.BinLocation.BinLocationControl.RemoveGridHandler">
	<summary>
 Remove any events associated with grids in the control.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.AssemblyHeaderControl.#ctor(Interprise.Framework.Inventory.DatasetGateway.AssemblyDatasetGateway,Interprise.Facade.Inventory.AssemblyFacade)">
	<summary><para>Create an Instance of this class</para></summary>
</member><member name="P:Interprise.Presentation.Inventory.Item.Assembly.BuildAssemblyMainControl.CurrentDataset">
	<summary>Property that gets the value of CurrentDataset. </summary>
	<value>Interprise.Framework.Base.DatasetComponent.BaseDataset </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Assembly.BuildAssemblyMainControl.CurrentFacade">
	<summary>Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Interprise.Extendable.Base.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Assembly.BuildAssemblyMainControl.Assemblycode">
	<summary> Property that gets the value of Assemblycode </summary>
	<value> String</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Assembly.BuildAssemblyMainControl.AssemblyDataset">
	<summary>
 Property that gets or sets AssemblyDataset.
 </summary>
	<value><para>Framework.Inventory.DatasetGateway.AssemblyDatasetGateway  </para></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Assembly.BuildAssemblyMainControl.ItemDescription">
	<summary> Property that gets the value of ItemDescription </summary>
	<value>  String</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Assembly.BuildAssemblyMainControl.WarehouseCode">
	<summary> Property that gets the value of WarehouseCode </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.BuildAssemblyMainControl.AddData(System.String,System.String,System.String)">
	<summary>
	</summary>
	<param name="assemblyCode"></param>
	<param name="assemblyName"></param>
	<param name="assemblyDescription"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.BuildAssemblyMainControl.AddData(System.Data.DataRow)">
	<summary>
	</summary>
	<param name="row"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.BuildAssemblyMainControl.EnableDisableControls">
	<summary> Method use to enable or disable control. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.BuildAssemblyMainControl.Find">
	<summary> Method use to finds a record/transaction. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.BuildAssemblyMainControl.LoadDataSet(System.String,System.Data.DataRow,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
 Method use to fetch data from the daTabase and populates the Tables specified in the parameters. 
 </summary>
	<param name="documentCode"></param>
	<param name="row"></param>
	<param name="clearTableType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.BuildAssemblyMainControl.LoadStockingLevel(System.Boolean)">
	<summary>
 Load item stock levels per location.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.BuildAssemblyMainControl.ProcessKeyPreview(System.Windows.Forms.Message@)">
	<summary> Method use to detects the keys pressed by the user </summary>
	<remarks>
	</remarks>
	<param name="m ">Sets as System.Windows.Forms.Message</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.BuildAssemblyMainControl.SelectPage(System.Int32)">
	<summary> Method use to set focus from one page to another. Page is a group of controls. </summary>
	<remarks>
	</remarks>
	<param name="key "><para>Retrieves the key as integer when press page up or page down</para>
	</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.BuildAssemblyMainControl.Print(System.Boolean)">
	<summary>
  Method use to prints the currently selected item/transaction. 
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.BuildAssemblyMainControl.ShowNewForm">
	<summary> Method use to show new record/transaction. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.BuildAssemblyMainControl.UndoChanges">
	<summary> Method use to undo changes made to the dataset. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.BuildAssemblyMainControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
  Method use to update the specified Tables in the daTabase.
 </summary>
	<param name="confirm"></param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.BuildAssemblyMainControl.m_assemblyFacade_Validated(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.ValidatedEventArgs)">
	<summary>
  Occurs when the control is finish validating. 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.BuildAssemblyMainControl.TabGroupComponent_SelectedPageChanged(System.Object,DevExpress.XtraLayout.LayoutTabPageChangedEventArgs)">
	<summary> Event use to determine the page you have selected to impost appropriate action </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of TabPageChangedEventArgs of the XtraTab.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.BuildAssemblyMainControl.PluginContainerGeneralPluginInstance_WarehouseCodeChanged(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.WarehouseChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.BuildAssemblyMainControl.PluginContainerGeneral_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.BuildAssemblyMainControl.PluginContainerComponents_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.BuildAssemblyMainControl.PluginContainerStockingLevel_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.BuildAssemblyForm.BuildAssemblyForm_Activated(System.Object,System.EventArgs)">
	<summary> Event use to reload components of header control. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.Assembly.BuildAssemblyForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.Assembly.BuildAssemblyForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.Item.Assembly.IAssembyMainInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.AccessoryControl.IsReadOnly">
	<summary> Property that gets to enable/disable controls for editing. </summary>
	<value>Boolean, If true then the property will set to readonly otherwise not. </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.AccessoryControl.ItemDetailDataset">
	<summary> Property that gets the value of ItemDetailDataset . </summary>
	<value> ItemDetailDatasetGateway </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Item.AccessoryControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.AccessoryControl.CloseEditor">
	<summary>
 Update changes to its datasource.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.AccessoryControl.LoadGridSettings">
	<summary> Method use to loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.AccessoryControl.UpdateCurrentRow">
	<summary> Method use to update current row. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.AccessoryControl.barMngrGridContextMenu_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.AccessoryControl.gridviewAccessory_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary> Event use to initialize new row. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.AccessoryControl.gridviewAccessory_InvalidValueException(System.Object,DevExpress.XtraEditors.Controls.InvalidValueExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.AccessoryControl.gridviewAccessory_InvalidRowException(System.Object,DevExpress.XtraGrid.Views.Base.InvalidRowExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Item.AccessoryControl.repcboItemCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Event use to brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.AccessoryControl.repcboItemCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>Event use to triggers before the search combo list shows / use to assign filtering of the combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.AccessoryControl.repcboItemCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary> Event use to assign selected values from the search combo list. </summary>
	<remarks>
	</remarks>
	<param name="sender ">
	</param>
	<param name="eRow ">
	</param>
</member><member name="M:Interprise.Presentation.Inventory.Item.AccessoryControl.gridviewAccessory_ShowingEditor(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.RoundPriceForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.ItemPricingWizard.RoundPriceForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.ItemPricingWizard.IRoundPriceInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.RoundPriceControl.PluginContainerRoundPrice_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.ItemPricingWizard.RoundPriceControl.PluginContainerRoundPricePluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.ItemPricingWizard.IRoundPriceDetailInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.SelectedWarehouse">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.CurrentFilter">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.PreviousFilter">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.Reload">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.WorkSheet">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.ReadOnlyColumns">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.VisibleColumns">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.MappedColumns">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.OriginalColumns">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.TempColumns">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.PricingDetail">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.ApplyToColumn">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.MyContextMenuStrip">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.Cancelled">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.IsValidated">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.ReadOnlyColumnHeader">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.NumberFormatColumns">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.RangeColumns">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.ExportImportTransactionType">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.IsReloaded">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.NumberFormat">
	<summary>
 Gets the custom number format for the work sheet.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.IsByProduct">
	<summary>
 Property that gets or sets the value of IsByProduct
 </summary>
	<value></value>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.IsByLocation">
	<summary>
 Property that gets or sets the value of IsByLocation
 </summary>
	<value></value>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.RestoreColumnNames(System.Data.DataTable)">
	<summary>
	</summary>
	<param name="table"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.LoadDataset">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.GetDataTable(SpreadsheetGear.IRange,SpreadsheetGear.Data.GetDataFlags)">
	<summary>
	</summary>
	<param name="range"></param>
	<param name="flags"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.MergeChanges">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.SaveOldRegularPrice">
	<summary>
 Added for Product Notification (Price Drop Notification) - save old regular price (retail/wholesale)
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.SetColorFirstRow">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.SetBackgroundReadOnlyColumns(System.Boolean)">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.AddTempColumns">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.SetVisibleColumns">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.PopulateSpreadSheet">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.ExportCompleted(System.IAsyncResult)">
	<summary>
	</summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.BeginImport(System.String)">
	<summary>
	</summary>
	<param name="filePath"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.ImportCompleted(System.IAsyncResult)">
	<summary>
	</summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.ShowProgressForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.UpdateProgress(System.Int32,System.String)">
	<summary>
	</summary>
	<param name="progress"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.CloseProgressForm">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.ValidRange(System.String)">
	<summary>
 Checks the current range selection
 </summary>
	<param name="range">Range selection as String</param>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.InValidCharacter(System.Char)">
	<summary>
 Method that validates a character in a current cell value
 </summary>
	<param name="c"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.button_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.WizardItemPricing_BeforePageDisplayed(System.Object,Interprise.Presentation.Base.ExtendedXtraTabContol.SelectedPageChangingEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.WizardItemPricing_SelectedPageChanged(System.Object,DevExpress.XtraTab.TabPageChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.WorkbookViewItemPricing_CellBeginEdit(System.Object,SpreadsheetGear.Windows.Forms.CellBeginEditEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.WorkbookViewItemPricing_CellEndEdit(System.Object,SpreadsheetGear.Windows.Forms.CellEndEditEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.cboWarehouse_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Redirect you to the warehouse form.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.rdoByProduct_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.cboWarehouse_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.buttonRefresh_Click(System.Object,System.EventArgs)">
	<summary>
 Resets the criteria builder
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.m_criteriaBuilderControl_CriteriaHasChanged(System.Object)">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.BaseControl_Disposed(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.PluginContainerCriteriaBuilder_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingWizardControl.PluginContainerCriteriaBuilderPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.ItemPricing.Presentation.ItemPricingWizard.IItemPricingCriteriaBuilderInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingForm.CreateControls">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingForm.GetMainControl(Interprise.Extendable.Inventory.Presentation.ItemPricingWizard.IItemPricingWizardInterface)">
	<summary>
	</summary>
	<param name="plugin"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingCriteriaBuilderControl.AdditionalFilter">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingCriteriaBuilderControl.CurrentFilter">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingCriteriaBuilderControl.InitializeControl">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingCriteriaBuilderControl.ResetCriteria">
	<summary>
 Resets the criteria builder.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingCriteriaBuilderControl.searchComboEditor_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ItemPricingWizard.ItemPricingCriteriaBuilderControl.SearchComboTableColumn_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.ImageResize.ImageResizeMainControl.PluginContainerImageSize_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.ImageResize.ImageResizeMainControl.PluginContainerImageSizePluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.Item.ImageResize.IImageSizeInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.ImageResize.ImageResizeMainControl.PluginContainerImageCrop_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.ImageResize.ImageResizeMainControl.PluginContainerImageCropPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.Item.ImageResize.IImageCropInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.ImageResize.ImageResizeForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.ImageResize.ImageResizeForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Inventory.Presentation.ImageResize.IImageResizeMainInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Dashboard.StockValuationControl.CurrentDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Dashboard.StockValuationControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.StockValuationControl.Execute(Interprise.Framework.Base.Shared.Enum.DashboardActionType,Interprise.Framework.Base.Shared.Structure.SearchParameters,System.Object[])">
	<summary> Method use loads the data of the current control </summary>
	<param name="actionType ">Retrieves the actiontype fron DashboardActionType. </param>
	<param name="searchParameters "> Retrieves parameters from SearchParameter.</param>
	<param name="Param">Set the param </param>
	<returns>Object</returns>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.StockValuationControl.LoadGridSettings">
	<summary> Loads default grid settings. </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.StockValuationControl.SetGridDatasource">
	<summary>
 Set the grid control datasource of the item ledger.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.StockValuationControl.ButtonRefresh_Click(System.Object,System.EventArgs)">
	<summary> Event use to reloads the data of the control </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.StockValuationControl.LinkRefresh_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
	<summary> Event use to reloads the data of the control </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.StockValuationControl.SlowMovingItemsControl_DateRangeSelecedIndexChanged(Interprise.Framework.Base.Shared.Enum.ReportDateSelection)">
	<summary>  Event use to triggers when date range combo box is changed </summary>
	<remarks>
	</remarks>
	<param name="dateRange ">Retrieves the date range from reportdateselection.</param>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.StockValuationControl.WorkCompleted(System.IAsyncResult)">
	<summary>
  Event use to triggers after the asyncronous reading is completed.
 </summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Dashboard.SlowMovingItemsControl.CurrentDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Dashboard.SlowMovingItemsControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.SlowMovingItemsControl.Execute(Interprise.Framework.Base.Shared.Enum.DashboardActionType,Interprise.Framework.Base.Shared.Structure.SearchParameters,System.Object[])">
	<summary> Method use loads the data of the current control </summary>
	<param name="actionType ">Retrieves the actiontype fron DashboardActionType. </param>
	<param name="searchParameters "> Retrieves parameters from SearchParameter.</param>
	<param name="paramValue">Set the param </param>
	<returns>Object</returns>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.SlowMovingItemsControl.SetGridDatasource">
	<summary>
 Set the grid control datasource of the item ledger.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.SlowMovingItemsControl.LoadGridSettings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.SlowMovingItemsControl.ButtonRefresh_Click(System.Object,System.EventArgs)">
	<summary> Event use to reloads the data of the control </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.SlowMovingItemsControl.LinkRefresh_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
	<summary> Event use to reloads the data of the control </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.SlowMovingItemsControl.SlowMovingItemsControl_DateRangeSelecedIndexChanged(Interprise.Framework.Base.Shared.Enum.ReportDateSelection)">
	<summary>  Event use to triggers when date range combo box is changed </summary>
	<remarks>
	</remarks>
	<param name="dateRange ">Retrieves the date range from reportdateselection.</param>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.SlowMovingItemsControl.repcboItemCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Event use to brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.SlowMovingItemsControl.WorkCompleted(System.IAsyncResult)">
	<summary>
  Event use to triggers after the asyncronous reading is completed.
 </summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Dashboard.ReturnedItemsCreditedControl.CurrentDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Dashboard.ReturnedItemsCreditedControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.ReturnedItemsCreditedControl.Execute(Interprise.Framework.Base.Shared.Enum.DashboardActionType,Interprise.Framework.Base.Shared.Structure.SearchParameters,System.Object[])">
	<summary> Method use loads the data of the current control </summary>
	<remarks>
	</remarks>
	<param name="actionType ">Retrieves the actiontype fron DashboardActionType. </param>
	<param name="searchParameters "> Retrieves parameters from SearchParameter.</param>
	<param name="paramValue">Set the param </param>
	<returns>Object</returns>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.ReturnedItemsCreditedControl.SetGridDatasource">
	<summary>
 Set the grid control datasource of the item ledger.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.ReturnedItemsCreditedControl.LoadGridSettings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.ReturnedItemsCreditedControl.ButtonRefresh_Click(System.Object,System.EventArgs)">
	<summary> Event use to reloads the data of the control </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.ReturnedItemsCreditedControl.LinkRefresh_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
	<summary> Event use to reloads the data of the control </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.ReturnedItemsCreditedControl.SReturnedItemsControl_DateRangeSelecedIndexChanged(Interprise.Framework.Base.Shared.Enum.ReportDateSelection)">
	<summary>  Event use to triggers when date range combo box is changed </summary>
	<remarks>
	</remarks>
	<param name="dateRange ">Retrieves the date range from reportdateselection.</param>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.ReturnedItemsCreditedControl.WorkCompleted(System.IAsyncResult)">
	<summary>
  Event use to triggers after the asyncronous reading is completed.
 </summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.ReturnedItemsCreditedControl.rephypitemname_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Dashboard.ReturnedItemsControl.CurrentDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Dashboard.ReturnedItemsControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.ReturnedItemsControl.Execute(Interprise.Framework.Base.Shared.Enum.DashboardActionType,Interprise.Framework.Base.Shared.Structure.SearchParameters,System.Object[])">
	<summary> Method use loads the data of the current control </summary>
	<remarks>
	</remarks>
	<param name="actionType ">Retrieves the actiontype fron DashboardActionType. </param>
	<param name="searchParameters "> Retrieves parameters from SearchParameter.</param>
	<param name="paramValue">Set the param </param>
	<returns>Object</returns>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.ReturnedItemsControl.SetGridDatasource">
	<summary>
 Set the grid control datasource of the item ledger.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.ReturnedItemsControl.LoadGridSettings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.ReturnedItemsControl.ButtonRefresh_Click(System.Object,System.EventArgs)">
	<summary> Event use to reloads the data of the control </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.ReturnedItemsControl.LinkRefresh_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
	<summary> Event use to reloads the data of the control </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.ReturnedItemsControl.SReturnedItemsControl_DateRangeSelecedIndexChanged(Interprise.Framework.Base.Shared.Enum.ReportDateSelection)">
	<summary>  Event use to triggers when date range combo box is changed </summary>
	<remarks>
	</remarks>
	<param name="dateRange ">Retrieves the date range from reportdateselection.</param>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.ReturnedItemsControl.rephypCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Event use to brings you to particular item of the selected code. </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.ReturnedItemsControl.WorkCompleted(System.IAsyncResult)">
	<summary>
  Event use to triggers after the asyncronous reading is completed.
 </summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Dashboard.ItemsThatNeedOrderingControl.CurrentDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Dashboard.ItemsThatNeedOrderingControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.ItemsThatNeedOrderingControl.Execute(Interprise.Framework.Base.Shared.Enum.DashboardActionType,Interprise.Framework.Base.Shared.Structure.SearchParameters,System.Object[])">
	<summary> Method use loads the data of the current control </summary>
	<param name="actionType ">Retrieves the actiontype fron DashboardActionType. </param>
	<param name="searchParameters "> Retrieves parameters from SearchParameter.</param>
	<param name="Param">Set the param </param>
	<returns>Object</returns>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.ItemsThatNeedOrderingControl.LoadGridSettings">
	<summary> Loads default grid settings. </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.ItemsThatNeedOrderingControl.SetGridDatasource">
	<summary>
 Set the grid control datasource of the item ledger.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.ItemsThatNeedOrderingControl.ButtonRefresh_Click(System.Object,System.EventArgs)">
	<summary> Event use to reloads the data of the control </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.ItemsThatNeedOrderingControl.repcboItemCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.ItemsThatNeedOrderingControl.WorkCompleted(System.IAsyncResult)">
	<summary>
  Event use to triggers after the asyncronous reading is completed.
 </summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.InventorySearchControl.GetQuantityFormatString">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.InventorySearchControl.InventorySearchControl_EndInitializeColumns(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Dashboard.BestSellingItemsOrderControl.CurrentDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Dashboard.BestSellingItemsOrderControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.BestSellingItemsOrderControl.Execute(Interprise.Framework.Base.Shared.Enum.DashboardActionType,Interprise.Framework.Base.Shared.Structure.SearchParameters,System.Object[])">
	<summary> Method use loads the data of the current control </summary>
	<remarks>
	</remarks>
	<param name="actionType ">Retrieves the actiontype fron DashboardActionType. </param>
	<param name="searchParameters "> Retrieves parameters from SearchParameter.</param>
	<param name="paramValue">Set the param </param>
	<returns>Object</returns>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.BestSellingItemsOrderControl.LoadGridSettings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.BestSellingItemsOrderControl.SetGridDatasource">
	<summary>
 Set the grid control datasource of the item ledger.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.BestSellingItemsOrderControl.ButtonRefresh_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.BestSellingItemsOrderControl.ChartDailyReceivablesControl_DateRangeSelecedIndexChanged(Interprise.Framework.Base.Shared.Enum.ReportDateSelection)">
	<summary>  triggers when date range combo box is changed </summary>
	<param name="dateRange ">Retrieves the date range in ReportDateSelection.</param>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.BestSellingItemsOrderControl.LinkRefresh_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
	<summary>  Method use to reloads the data of the control </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.BestSellingItemsOrderControl.rephypitemname_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.BestSellingItemsOrderControl.WorkCompleted(System.IAsyncResult)">
	<summary>
  Event use to triggers after the asyncronous reading is completed.
 </summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Dashboard.BestSellingItemsControl.CurrentDataset">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Dashboard.BestSellingItemsControl.CurrentFacade">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.BestSellingItemsControl.Execute(Interprise.Framework.Base.Shared.Enum.DashboardActionType,Interprise.Framework.Base.Shared.Structure.SearchParameters,System.Object[])">
	<summary> Method use loads the data of the current control </summary>
	<remarks>
	</remarks>
	<param name="actionType ">Retrieves the actiontype fron DashboardActionType. </param>
	<param name="searchParameters "> Retrieves parameters from SearchParameter.</param>
	<param name="paramValue">Set the param </param>
	<returns>Object</returns>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.BestSellingItemsControl.LoadGridSettings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.BestSellingItemsControl.SetGridDatasource">
	<summary>
 Set the grid control datasource of the item ledger.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.BestSellingItemsControl.ButtonRefresh_Click(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.BestSellingItemsControl.ChartDailyReceivablesControl_DateRangeSelecedIndexChanged(Interprise.Framework.Base.Shared.Enum.ReportDateSelection)">
	<summary>  triggers when date range combo box is changed </summary>
	<param name="dateRange ">Retrieves the date range in ReportDateSelection.</param>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.BestSellingItemsControl.LinkRefresh_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
	<summary>  Method use to reloads the data of the control </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.BestSellingItemsControl.rephypItemName_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary> Method use to brings you to particular item of the selected code </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Dashboard.BestSellingItemsControl.WorkCompleted(System.IAsyncResult)">
	<summary>
  Event use to triggers after the asyncronous reading is completed.
 </summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="T:Interprise.Presentation.Inventory.Dashboard.BestSellingItemsControl">
	<summary>
 The dashboard for best selling items.
 </summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Chart.Item.ChartQuantityAnalysisControl.CurrentFacade">
	<summary>Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Interprise.Extendable.Base.Business.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Chart.Item.ChartQuantityAnalysisControl.CurrentDataset">
	<summary> Property that gets the value of CurrentDataset. </summary>
	<value> Interprise.Framework.Base.DatasetComponent.BaseDataset</value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Chart.Item.ChartQuantityAnalysisControl.BindChart">
	<summary> Method use to bind chart . </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Chart.Item.ChartQuantityAnalysisControl.LoadGridSettings">
	<summary> Method use to loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Chart.Item.ChartQuantityAnalysisControl.LoadDataSet(System.String,System.Data.DataRow,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
 Method use to fetch data from the daTabase and populates the Tables specified in the parameters.
 </summary>
	<param name="documentCode"></param>
	<param name="row"></param>
	<param name="clearTableType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Chart.Item.ChartQuantityAnalysisControl.LoadDataset_Completed(System.IAsyncResult)">
	<summary>
  Event use to the beggining of execution of the asyncronous method.
 </summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Chart.Item.ChartQuantityAnalysisControl.SetDatasource">
	<summary>
 Set chart and grid datasouce.
 </summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Chart.Item.ChartAmountAnalysisControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value> Interprise.Extendable.Base.Business.Facade.IBaseInterface</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Chart.Item.ChartAmountAnalysisControl.CurrentDataset">
	<summary> Property that gets the value of CurrentDataset. </summary>
	<value>Interprise.Framework.Base.DatasetComponent.BaseDataset </value>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Chart.Item.ChartAmountAnalysisControl.BindChart">
	<summary> Method use to bind chart. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Chart.Item.ChartAmountAnalysisControl.LoadGridSettings">
	<summary> Method use to loads default grid settings. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Chart.Item.ChartAmountAnalysisControl.LoadDataSet(System.String,System.Data.DataRow,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
  Method use to fetch data from the daTabase and populates the Tables specified in the parameters. 
 </summary>
	<param name="documentCode"></param>
	<param name="row"></param>
	<param name="clearTableType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Chart.Item.ChartAmountAnalysisControl.LoadDataset_Completed(System.IAsyncResult)">
	<summary>
  Event use to the beggining of execution of the asyncronous method.
 </summary>
	<param name="result"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Chart.Item.ChartAmountAnalysisControl.SetDatasource">
	<summary>
 Set chart and grid datasouce.
 </summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Base.BaseRibbonForm.IsPosted">
	<summary>
  Property that gets or sets the value of IsPosted.
 </summary>
	<value>Boolean</value>
	<returns>Boolean</returns>
</member><member name="P:Interprise.Presentation.Inventory.Base.BaseRibbonForm.HasChanges">
	<summary>
 Property that gets the value of HasChanges.
 </summary>
	<value>Boolean</value>
	<returns>Boolean</returns>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseRibbonForm.Tablenames">
	<summary>
 Method use to gets Table.
 </summary>
	<returns>String </returns>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseRibbonForm.SetupHint(System.String,System.String)">
	<summary>
 Method use to set an overridable sub as SetupHint.
 </summary>
	<param name="menukey">Retrieves the menu key.</param>
	<param name="hint">Retrieves the hint.</param>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseRibbonForm.CreateMainControl">
	<summary>
 Method use to create  main control.
 </summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Base.BaseForm.IsPosted">
	<summary>
  Property that gets or sets the value of IsPosted.
 </summary>
	<value>Boolean</value>
	<returns>Boolean</returns>
</member><member name="P:Interprise.Presentation.Inventory.Base.BaseForm.HasChanges">
	<summary>
 Property that gets the value of HasChanges.
 </summary>
	<value>Boolean</value>
	<returns>Boolean</returns>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseForm.Tablenames">
	<summary>
 Method use to gets Table.
 </summary>
	<returns>String </returns>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseForm.SetupHint(System.String,System.String)">
	<summary>
 Method use to set an overridable sub as SetupHint.
 </summary>
	<param name="menukey">Retrieves the menu key.</param>
	<param name="hint">Retrieves the hint.</param>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseForm.CreateMainControl">
	<summary>
 Method use to create  main control.
 </summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Base.BaseControl.IsActiveFilter">
	<summary>
 Property that gets the value of IsActiveFilter.
 </summary>
	<value>String</value>
	<returns>String</returns>
</member><member name="P:Interprise.Presentation.Inventory.Base.BaseControl.LanguageCodeFilter">
	<summary>
 Property that gets the value of LanguageCodeFilter.
 </summary>
	<value>String</value>
	<returns>String</returns>
</member><member name="P:Interprise.Presentation.Inventory.Base.BaseControl.ItemFilter">
	<summary>
 Property that gets the value of ItemFilter.
 </summary>
	<value>String</value>
	<returns>String</returns>
</member><member name="P:Interprise.Presentation.Inventory.Base.BaseControl.InitialDirectory">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Base.BaseControl.RepositoryImageItemType">
	<summary>
 Gets an instance of a repository image combo box edit use for item type for grid control.
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Base.BaseControl.ImageListItemType">
	<summary>
 Gets an instance of image list with item type collections.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.ChangeStatusText(System.String)">
	<summary>
 Change the status text displayed in the status bar.
 </summary>
	<param name="status"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.Find(Interprise.Framework.Base.Shared.Enum.MenuAction.MenuInventory)">
	<summary>
	</summary>
	<param name="action"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.SetGridContextMenu(DevExpress.XtraGrid.GridControl,System.String[])">
	<summary>
 Procedure to set the context menu of the grid.
 </summary>
	<param name="gridControl"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.SetGridContextMenu(DevExpress.XtraGrid.GridControl)">
	<summary>
 Procedure to set the context menu of the grid.
 </summary>
	<param name="gridControl"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.SetGridContextMenu(DevExpress.XtraGrid.GridControl,System.Boolean,System.Boolean)">
	<summary>
 Procedure to set the context menu of the grid.
 </summary>
	<param name="gridControl"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.SetGridContextMenu(DevExpress.XtraGrid.GridControl,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Procedure to set the context menu of the grid.
 </summary>
	<param name="gridControl"></param>
	<param name="addViewItem"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.SetGridContextMenu(DevExpress.XtraGrid.GridControl,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Procedure to set the context menu of the grid.
 </summary>
	<param name="gridControl"></param>
	<param name="addViewItem"></param>
	<param name="addViewLedger"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.SetGridContextMenu(DevExpress.XtraGrid.GridControl,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Procedure to set the context menu of the grid.
 </summary>
	<param name="gridControl"></param>
	<param name="addViewItem"></param>
	<param name="addViewLedger"></param>
	<param name="addViewUnitMeasure"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.SetGridContextMenu(DevExpress.XtraGrid.GridControl,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Procedure to set the context menu of the grid.
 </summary>
	<param name="gridControl"></param>
	<param name="addViewItem"></param>
	<param name="addViewLedger"></param>
	<param name="addViewUnitMeasure"></param>
	<param name="addViewWarehouse"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.SetGridContextMenu(DevExpress.XtraGrid.GridControl,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
  Procedure to set the context menu of the grid.
 </summary>
	<param name="gridControl"></param>
	<param name="addViewItem"></param>
	<param name="addViewLedger"></param>
	<param name="addViewUnitMeasure"></param>
	<param name="addViewWarehouse"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.SetGridContextMenu(DevExpress.XtraGrid.GridControl,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Procedure to set the context menu of the grid.
 </summary>
	<param name="grid">The grid control where the context menu will be set.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.SetVGridContextMenu(DevExpress.XtraVerticalGrid.VGridControl,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Procedure to set the context menu of the grid.
 </summary>
	<param name="grid">The grid control where the context menu will be set.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.AddToContextMenu(DevExpress.XtraBars.BarButtonItem)">
	<summary>
	</summary>
	<param name="menuItem"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.ShowMenu(System.Boolean)">
	<summary>
	</summary>
	<param name="isvisible"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.popupGridContextMenu_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Event triggered when before the context menu of the grid is shown.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.DeleteDataFromContextMenu(System.Boolean)">
	<summary>
	</summary>
	<param name="IsDeleteAll"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.barMngrGridContextMenu_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.Grid_GotFocus_MouseEnter(System.Object,System.EventArgs)">
	<summary>
 Event triggred when the grid gets the focus.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.VGrid_GotFocus_MouseEnter(System.Object,System.EventArgs)">
	<summary>
 Event triggred when the grid gets the focus.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.SetColumnEdit(DevExpress.XtraGrid.GridControl,System.Boolean)">
	<summary>
 Set the editor of grid columns with type decimals.
 </summary>
	<param name="gridControl"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.SetColumnEdit(DevExpress.XtraGrid.GridControl)">
	<summary>
 Set the editor of grid columns with type decimals.
 </summary>
	<param name="gridControl"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.SetCurrencyFormatting(System.Windows.Forms.Control)">
	<summary>
  Method use to set the first focus when control loads.
 </summary>
	<param name="control">Sets as control</param>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.SetCurrencyFormat(System.String,System.Boolean)">
	<summary>
	</summary>
	<param name="currencyCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.SetCurrencyFormat(System.String,Interprise.Framework.Base.Shared.Enum.EnmFormatType,System.Boolean)">
	<summary>
	</summary>
	<param name="currencyCode"></param>
	<param name="formatType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.CurrentRow(DevExpress.XtraGrid.Views.Grid.GridView@)">
	<summary>
 Method use to add or edit grid record
 </summary>
	<param name="gridview">Retrieves the gridview of the current grid control.</param>
	<returns>CurrentRowView.Row</returns>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.DeleteRow(DevExpress.XtraGrid.Views.Grid.GridView@)">
	<summary>
 Method use to delete row.
 </summary>
	<param name="gridview">Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.EnableDisableControl(System.Windows.Forms.Control,System.Boolean)">
	<summary>
 Method use to disable/enable controls for editing.
 </summary>
	<param name="UserControl">Sets as control.</param>
	<param name="IsReadOnly">Retrieves if IsReadOnly or not.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.EndCurrentEdit">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.SetGridColumnState(DevExpress.XtraGrid.Views.Grid.GridView,System.Boolean,DevExpress.XtraGrid.Columns.GridColumn[])">
	<summary>
 Method use to enable/disable grid columns .
 </summary>
	<param name="gridView">Retrieves the gridview of the current grid control.</param>
	<param name="IsReadonly">Retrieves if IsReadonly or not the value of the property.</param>
	<param name="skipColumns"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.GetCompanyLanguage">
	<summary>
 Method use to gets the company language.
 </summary>
	<returns>String</returns>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.GetLanguageCode">
	<summary>
Method use to gets the current languagecode of the user
 </summary>
	<returns>String </returns>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.GetLocationDescription(System.String)">
	<summary>
 Method use to gets location description.
 </summary>
	<param name="locationCode ">Returns the LocationCode</param>
	<returns>String</returns>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.GetItemCategory(System.String)">
	<summary>
 Method use to gets the primary category of an item.
 </summary>
	<param name="ItemCode">Returns the ItemCode.</param>
	<returns>String</returns>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.GetWarehouseInformation(System.String)">
	<summary>
 Method use to gets detail of warehouse from the daTabase.
 </summary>
	<param name="warehouseCode">Returns the WarehouseCode.</param>
	<returns>WarehouseInformation</returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.GetSelectedRow(DevExpress.XtraGrid.Views.Grid.GridView)">
	<summary>
	</summary>
	<param name="gridview"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.InitNewRow(DevExpress.XtraGrid.Views.Grid.GridView)">
	<summary>
 Method use to initializes the new rows of the grid control.
 </summary>
	<param name="gridview">Retrieves the gridview of the current grid control.</param>
	<returns>Datarow</returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.LoadHTMLEditor(System.String,System.String)">
	<summary>
 Method use to loads the html editor .
 </summary>
	<param name="Title">Retrieves the title of the html.</param>
	<param name="Content">Retrieves the content of the htnl.</param>
	<returns>String</returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.LoadDataSet(System.String[][],Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
	</summary>
	<param name="commandSet"></param>
	<param name="clearTableType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.LoadDataSet(System.String[][],System.String[][],Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
	</summary>
	<param name="commandSet"></param>
	<param name="parameters"></param>
	<param name="clearTableType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.BeginLoadDataSet(System.String[][],Interprise.Framework.Base.Shared.Enum.ClearType,System.AsyncCallback,System.Object)">
	<summary>
	</summary>
	<param name="commandSet"></param>
	<param name="clearTableType"></param>
	<param name="callBack"></param>
	<param name="asyncState"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.BeginLoadDataSet(System.String[][],System.String[][],Interprise.Framework.Base.Shared.Enum.ClearType,Interprise.Framework.Base.Shared.Enum.ConnectionStringType,System.AsyncCallback,System.Object)">
	<summary>
	</summary>
	<param name="commandSet"></param>
	<param name="parameters"></param>
	<param name="clearTableType"></param>
	<param name="connectionType"></param>
	<param name="callBack"></param>
	<param name="asyncState"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.BeginLoadDataSet(System.String[][],System.String[][],Interprise.Framework.Base.Shared.Enum.ClearType,System.AsyncCallback,System.Object)">
	<summary>
	</summary>
	<param name="commandSet"></param>
	<param name="parameters"></param>
	<param name="clearTableType"></param>
	<param name="callBack"></param>
	<param name="asyncState"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.CloseEditor">
	<summary>
 Method use to updates the grid control to reflect current chages 
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.CreateLocationItemsForm(Interprise.Framework.Inventory.Shared.Structure.LocationItemInformation,System.Boolean@)">
	<summary> Method use to display items in the current locaton </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.OpenTransaction(System.String,Interprise.Framework.Base.Shared.Enum.MenuAction.MenuInventory)">
	<summary>
 Open a specific inventory related transaction 
 </summary>
	<param name="documentCode">The code of the transction to be opened.</param>
	<param name="action">Action to perform.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.OpenTransaction(Interprise.Framework.Base.Shared.Enum.MenuAction.MenuInventory,System.Object[])">
	<summary>
 Open a specific inventory related transaction
 </summary>
	<param name="action">Action to perform.</param>
	<param name="values">Set of values related to the transction</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.OpenTransaction(Interprise.Framework.Base.Shared.Enum.MenuAction.MenuInventory,DevExpress.XtraGrid.Views.Grid.GridView)">
	<summary>
 Open a specific inventory related transaction 
 </summary>
	<param name="action"></param>
	<param name="gridView"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.OpenTransaction(Interprise.Framework.Base.Shared.Enum.MenuAction.MenuInventory,DevExpress.XtraGrid.Views.Grid.GridView,System.String[])">
	<summary>
 Open a specific inventory related transaction 
 </summary>
	<param name="action"></param>
	<param name="gridView"></param>
	<param name="additionalParam"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.NewNote">
	<summary>
 Initializes a new instance of the Override class. 
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.NewEmail">
	<summary>
 Initializes a new instance of the Override class. 
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.NewFax">
	<summary>
 Initializes a new instance of the Override class. 
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.NewDocument">
	<summary>
 Initializes a new instance of the Override class. 
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.ShowCRM(System.String,System.String,System.String)">
	<summary>
 Method use to show CRM.
 </summary>
	<param name="menuName">Retrieves the menu name.</param>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.ShowJournal(System.String)">
	<summary>
 Method use to show journal for the specific transaction.
 </summary>
	<param name="referenceCode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.ShowMessage(System.String)">
	<summary>
	</summary>
	<param name="message"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.InitializePictureEditContextMenu(DevExpress.XtraEditors.PictureEdit)">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.popupMenuPhoto_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.SetPictureEditContextMenu(DevExpress.XtraEditors.PictureEdit[])">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.pictureEdit_DoubleClick(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.LoadPhoto(System.String[]@)">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Base.BaseControl.OpenFileDialog">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.RemovePhoto(DevExpress.XtraEditors.PictureEdit)">
	<summary>
	</summary>
	<param name="pictureEdit"></param>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.m_barManagerPhoto_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.gridview_FocusedColumnChanged(System.Object,DevExpress.XtraGrid.Views.Base.FocusedColumnChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.gridview_FocusedRowChanged(System.Object,DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.BaseControl.GriViewSelectEditorText(DevExpress.XtraGrid.Views.Grid.GridView)">
	<summary>
	</summary>
	<param name="gridView"></param>
	<remarks></remarks>
</member><member name="T:Interprise.Presentation.Inventory.Base.BaseControl">
	<summary>
 The base class control of the inventory module.
 </summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Base.ContextMenuEventArgs.PopupMenu">
	<summary>
 The popmenu control.
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Base.ContextMenuEventArgs.BarManager">
	<summary>
 The bar manager control.
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.ContextMenuEventArgs.#ctor(DevExpress.XtraBars.BarManager,DevExpress.XtraBars.PopupMenu)">
	<summary>
 Create instance of ContextMenuEventArgs.
 </summary>
	<param name="manager"></param>
	<param name="popupMenu"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Base.ContextMenuEventArgs.AddMenuItem(System.String,System.String,System.Drawing.Image)">
	<summary>
 Creates new menu item and add it on the popup menu.
 </summary>
	<param name="name">Name of the new menu item.</param>
	<param name="caption">The caption of the menu.</param>
	<param name="glyph">The image of the new menu item.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Interprise.Presentation.Inventory.Base.ContextMenuEventArgs">
	<summary>
 The event args of the context menu in the inventory.
 </summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.AppModule.LanguageCodeFilter">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.Execute(System.String,Interprise.Framework.Base.Shared.Structure.SearchParameters,System.Object[])">
	<summary> Method use to loads the data of the current control. </summary>
	<return>Object </return>
	<remarks>
	</remarks>
	<param name="action "> Retrieves action to use for conditional purposes. </param>
	<param name="searchParameters ">Retrieves searchparameter to search in Table.</param>
	<param name="param">Use to read data from the datasource.</param>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.NewItem(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>Method use to create new item. </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.NewAssemblyItem(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>Method use to create new assembly item.  </summary>
	<remarks>
	</remarks>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.NewWarehouse(System.Object[])">
	<summary>Method use to create new warehouse</summary>
	<remarks>
	</remarks>
	<param name="paramValue">Retrieves param from the reference method.</param>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.NewBuildAssembly(System.Object[])">
	<summary>
 Method use to build assembly in the inventory module. 
 </summary>
	<param name="paramValue"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.NewAdjustment(System.Object[])">
	<summary> Method use to create new stock adjustment. </summary>
	<remarks>
	</remarks>
	<param name="paramValue">Retrieves param from the reference method.</param>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.NewStockTake(System.Object[])">
	<summary> Method use to create new stock take. </summary>
	<remarks>
	</remarks>
	<param name="paramValue">Retrieves param from the reference method.</param>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.NewStockTake">
	<summary>
 Create New Stock Take Transaction.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.LunchNewStockTakeFromNewCompanyWizard">
	<summary>
  This sub procedure is serve as call for NewCompanyWizard
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.NewInternalMovement(System.Object[],System.Boolean)">
	<summary> Method use to create new internal movement. </summary>
	<remarks>
	</remarks>
	<param name="paramValue">Retrieves param from the reference method.</param>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.NewStockTransfer(System.Object[],System.Boolean)">
	<summary>
 Method use to create new stock transfer.
 </summary>
	<param name="paramValue"></param>
	<param name="isInternalTransfer"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.MaintainBuildAssembly(System.Object[])">
	<summary>
 Method use to maintain the build assembly.
 </summary>
	<param name="paramValue">Use to read data from the datasource.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.MaintainInventoryItem(System.Object[])">
	<summary>
 Method use to maintain inventory item.
 </summary>
	<param name="paramValue">Retrieves param from the reference method.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.MaintainKitItem(System.String[])">
	<summary>
 Method use to maintain kit item.
 </summary>
	<param name="param">Retrieves param from the reference method.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.MaintainWarehouse(System.Object[])">
	<summary>
 Method use to maintain warehouse.
 </summary>
	<param name="paramValue">Retrieves param from the reference method.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.MaintainStockTake(System.Object[])">
	<summary>
 Method use to maintain stock take adjustment.
 </summary>
	<param name="paramValue">Retrieves param from the reference method.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.MaintainAdjustment(System.Object[])">
	<summary>Method use to maintain stock adjustment.  </summary>
	<remarks>
	</remarks>
	<param name="paramValue">Retrieves param from the reference method.</param>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.MaintainInternalMovement(System.Object[])">
	<summary>Method use to maintain internal movement.  </summary>
	<remarks>
	</remarks>
	<param name="paramValue">Retrieves param from the reference method.</param>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.MaintainStockTransfer(System.Object[])">
	<summary>Method use to maintain stock transfer.  </summary>
	<remarks>
	</remarks>
	<param name="paramValue">Retrieves param from the reference method.</param>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.MaintainStockTransfer(System.Object[],System.Boolean)">
	<summary>Method use to maintain stock transfer.  </summary>
	<remarks>
	</remarks>
	<param name="paramValue">Retrieves param from the reference method.</param>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.StockValuation(System.Object[])">
	<summary>
 Method use to display stock valuation.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.ProfitAnalysis">
	<summary>
 Method use to display stock valuation.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.SetupDiscountCategoryBand(System.Object[])">
	<summary>
 Method use to maintain category band discount.
 </summary>
	<param name="paramValue">Retrieves param from the reference method.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.SpecificCustomerPricing(System.Object[])">
	<summary>
	</summary>
	<param name="paramValue">Retrieves param from the reference method.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.CustomerPricingMethod(System.Object[])">
	<summary>
	</summary>
	<param name="paramValue">Retrieves param from the reference method.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.StockItemPricingDetail(System.Object[])">
	<summary>
	</summary>
	<param name="paramValue">Retrieves param from the reference method.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.MaintainDefaultPricingDetail(System.Object[],Interprise.Framework.Inventory.Shared.Enum.DefaultPricingType)">
	<summary>
	</summary>
	<param name="param"></param>
	<param name="pricingType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.MaintainPriceLists(System.Object[])">
	<summary>
	</summary>
	<param name="paramValue"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.SetupOpeningBalance(System.Object[])">
	<summary>
 Method use to maintain opening balance.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.SetupItemUnitMeasure(System.Object[])">
	<summary>Method use to maintain item unit measure.  </summary>
	<remarks>
	</remarks>
	<param name="paramValue">Retrieves param from the reference method.</param>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.SetupUnitMeasure(System.Object[])">
	<summary>
 Method use to create new unit measure.
 </summary>
	<param name="paramValue">Retrieves param from the reference method.</param>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.SetupItemSpecificType(System.Object[])">
	<summary>
 Method use to create new item specific type.
 </summary>
	<param name="paramValue">Retrieves param from the reference method.</param>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.SetupPreferences(System.Object[])">
	<summary>
 Method use to show and activate preference.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.SetupCategory(System.Object[])">
	<summary> Method use to create new category </summary>
	<remarks>
	</remarks>
	<param name="paramValue">Retrieves param from the reference method.</param>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.SetupAttribute(System.Object[])">
	<summary> Method use to create new attribute. </summary>
	<remarks>
	</remarks>
	<param name="paramValue">Retrieves param from the reference method.</param>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.SetupAttributeManager(System.Object[])">
	<summary> Method use to create new attribute. </summary>
	<remarks>
	</remarks>
	<param name="paramValue">Retrieves param from the reference method.</param>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.SetupItemClassTemplate(System.Object[])">
	<summary>Method use to create new item class template.  </summary>
	<remarks>
	</remarks>
	<param name="paramValue">Retrieves param from the reference method.</param>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.SetupGLClassTemplate(System.Object[])">
	<summary>
 Method use to show and activate GL Class template window.
 </summary>
	<param name="paramValue">Retrieves param from the reference method.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.SetupManufacturer(System.Object[])">
	<summary>
 Method use to show and activate manufacturer window.
 </summary>
	<param name="paramValue">Retrieves param from the reference method.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.SetupSellingCurrency">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.SetupSellingLanguage(System.Object[])">
	<summary>Method use to show and activate Selling Language window.  </summary>
	<remarks>
	</remarks>
	<param name="paramValue">Retrieves param from the reference method.</param>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.SetupSellingDepartment(System.Object[])">
	<summary>Method use to show and activate selling department window.  </summary>
	<remarks>
	</remarks>
	<param name="paramValue">Retrieves param from the reference method.</param>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.SetupPromotionManager(System.Object[])">
	<summary>
 Method use to create new reason.
 </summary>
	<param name="paramValue">Retrieves param from the reference method.</param>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.SetupReason(System.Object[])">
	<summary>
 Method use to create new reason.
 </summary>
	<param name="paramValue">Retrieves param from the reference method.</param>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.ShowItemPricing(System.Object[])">
	<summary>
	</summary>
	<param name="param"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.ShowItemUpdate(System.Object[])">
	<summary>
	</summary>
	<param name="param"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.SetupSpecialAttributeMaintenanceForm(System.Object[])">
	<summary>
	</summary>
	<param name="paramValue"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.InitializeParam(System.Object[])">
	<summary>
 Initialize param values.
 </summary>
	<param name="paramValue"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.ShowSearchForm(System.String,System.String,System.String[],System.Data.DataRow@,System.Data.DataRow[]@,System.String,System.Boolean)">
	<summary>
 Method use to show the search form.  
 </summary>
	<param name="NewToolBarCaption">Use to set new toolbar caption.</param>
	<param name="TableName">Use to set Table name.</param>
	<param name="TableNames">Use to set Tablenames</param>
	<param name="eRow">Use get selected data row.</param>
	<param name="eRows">USe get multiple selected data rows.</param>
	<param name="additonalFilter">Use to add additional filter to the query.</param>
	<param name="bypassFilter">Use to check if to bypass the filter.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.ShowSearchDashboard(System.String[],System.String,System.Boolean,System.String[],System.Boolean,System.String,Interprise.Framework.Base.Shared.Enum.Entity)">
	<summary>
	</summary>
	<param name="TableNames"></param>
	<param name="additionalFilter"></param>
	<param name="bypassFilter"></param>
	<param name="groupColumns"></param>
	<param name="showNewButton"></param>
	<param name="newButtonText"></param>
	<param name="entity"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.AppModule.m_searchDashBoard_TableNameChanged(System.Object,System.String)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="tableName"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.AdjustmentForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Adjustment.DetailControl.AdjustmentDataset">
	<summary> Property that gets AdjustmentDataset. </summary>
	<value>Framework.Inventory.DatasetGateway.AdjustmentDatasetGateway  </value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Adjustment.DetailControl.ItemCode">
	<summary>
 Property that gets ItemCode of the currently selected row of the gridcontrol.
 </summary>
	<value>String </value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Adjustment.DetailControl.ItemName">
	<summary>
 Return the selected item name.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Adjustment.DetailControl.IsReadOnly">
	<summary>
 Property to enable/disable controls for editing. 
 </summary>
	<value>Boolean</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Adjustment.DetailControl.LocationCode">
	<summary>
 Property that sets LocationCode of the currently selected row of the gridcontrol.
 </summary>
	<value>String </value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Adjustment.DetailControl.SelectedRow">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Adjustment.DetailControl.ShowCostColumn">
	<summary>
 Property that show or hide cost column
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Adjustment.DetailControl.WarehouseCode">
	<summary>
 Property that sets WarehouseCode of the currently selected row of the gridcontrol.
 </summary>
	<value>String </value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.DetailControl.CloseEditor">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.DetailControl.Focus">
	<summary>
 Method use to set the first focus when control loads.
 </summary>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.DetailControl.LoadGridSettings">
	<summary>
 Method use to load grid settings. 
 </summary>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.DetailControl.MoveNext">
	<summary>
 Move forward to the next record in the grid.
 </summary>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.DetailControl.MovePrevious">
	<summary>
 Move to the previous record in the grid.
 </summary>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.DetailControl.barMngrGridContextMenu_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
	<summary>
 Event use to triggers when user right-clicked on the grid / use to delete rows of the grid.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.DetailControl.DetailControl_Enter(System.Object,System.EventArgs)">
	<summary>
 Event use to set the focus of the cotrol.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.DetailControl.gridviewItemDetail_FocusedColumnChanged(System.Object,DevExpress.XtraGrid.Views.Base.FocusedColumnChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.DetailControl.gridviewItemDetail_FocusedRowChanged(System.Object,DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs)">
	<summary>
 Informs the main control that focused item code has changed.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.DetailControl.gridviewItemDetail_InitNewRow(System.Object,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs)">
	<summary>
 Event use to initialize new row.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.DetailControl.gridviewItemDetail_InvalidRowException(System.Object,DevExpress.XtraGrid.Views.Base.InvalidRowExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.DetailControl.gridviewItemDetail_InvalidValueException(System.Object,DevExpress.XtraEditors.Controls.InvalidValueExceptionEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.DetailControl.gridviewItemDetail_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
 Use to set the focus.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.DetailControl.gridviewItemDetail_ShowingEditor(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Disable quantity control when transaction is saved but not yet posted.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.DetailControl.repcboItemCode_AddNewValue(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Event that adds new value in combo list..
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.DetailControl.repcboItemCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Event use to triggers before the search combo list shows / use to assign filtering of the combo list.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.DetailControl.repcboItemCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.DetailControl.repcboItemCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Event use to assign selected values from the search combo list
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="erow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.DetailControl.repcboWarehouseCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.DetailControl.repcboWarehouseCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Event use to assign selected values from the search combo list.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="erow "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.DetailControl.repcboLocationCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Event use triggers before the search combo list shows / use to assign filtering of the combo list 
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.DetailControl.repcboLocationCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.DetailControl.repcboLocationCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Event use to assign selected values from the search combo list
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow">Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.DetailControl.repcboUnitMeasureCode_BeforePopup(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 triggers before the search combo list shows / use to assign filtering of the combo list 
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.DetailControl.repcboUnitMeasureCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Event use to brings you to particular item of the selected code.
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.DetailControl.repcboUnitMeasureCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 use to assign selected values from the search combo list
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="eRow">&gt; Retrieves an event of certain control.</param>
</member><member name="T:Interprise.Presentation.Inventory.Adjustment.DetailControl">
	<summary>
 The detail control of stock adjustment transaction.
 </summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Adjustment.HeaderControl.AdjustmentDataset">
	<summary>
 Property that gets the value of AdjustmentDataset.
 </summary>
	<value>Interprise.Framework.Inventory.DatasetGateway.AdjustmentDatasetGateway</value>
	<returns>AdjustmentDatasetGateway</returns>
</member><member name="P:Interprise.Presentation.Inventory.Adjustment.HeaderControl.AdjustmentTransactionType">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Adjustment.HeaderControl.CurrentFacade">
	<summary> Property that gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>
	</value>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Adjustment.HeaderControl.IsReadOnly">
	<summary>
 Property to read enable or disable grid column. 
 </summary>
	<value>Boolean</value>
	<returns>Boolean</returns>
</member><member name="P:Interprise.Presentation.Inventory.Adjustment.HeaderControl.TransactionType">
	<summary>
 Show or Hide the Reference Code base on the selected transaction type.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.HeaderControl.Focus">
	<summary>
 Method use to set the first focus when control loads.
 </summary>
	<returns>Boolean</returns>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.HeaderControl.PopulateAdjustmentType">
	<summary>
 Populates combo box with adjustment type.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.HeaderControl.cboAdjustmentType_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>
 Triggers if the selected Adjustment Type is either in or out.
 </summary>
	<param name="sender">The caller of the subroutine.</param>
	<param name="e">The event args that contains information about the method.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.HeaderControl.cboReasonCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 View the detail of the reason code transaction.
 </summary>
	<param name="sender">The caller of the subroutine.</param>
	<param name="e">The event args that contains information about the method.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.HeaderControl.cboReasonCode_PopupClose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Applies the account code to the inventory accounts for each item that will be adjusted.
 </summary>
	<param name="sender"></param>
	<param name="eRow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.HeaderControl.hypReferenceCode_OpenLink(System.Object,DevExpress.XtraEditors.Controls.OpenLinkEventArgs)">
	<summary>
 Opens a particular transaction depending on the transaction type.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="T:Interprise.Presentation.Inventory.Adjustment.HeaderControl">
	<summary>
 Contains the general information regarding an adjustment.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.DetailControl.#ctor(Interprise.Framework.Inventory.DatasetGateway.AdjustmentDatasetGateway,Interprise.Facade.Inventory.AdjustmentFacade)">
	<summary>
 Create and intance of the DetailControl class.
 </summary>
	<param name="adjustmentDataset">Shared dataset instance between main control and section control.</param>
	<param name="adjustmentFacade">Shared facade instance between main control and section control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.DetailControl.#ctor">
	<summary>
 Create and intance of the DetailControl class.
 </summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Adjustment.AdjustmentControl.AdjustmentDataset">
	<summary>
 Property that gets or sets AdjustmentDataset.
 </summary>
	<value><para>Framework.Inventory.DatasetGateway.AdjustmentDatasetGateway  </para></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Adjustment.AdjustmentControl.CurrentDataset">
	<summary> Property that gets CurrentDataset. </summary>
	<value>Interprise.Framework.Base.DatasetComponent.BaseDataset</value>
	<returns>BaseDataset</returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Inventory.Adjustment.AdjustmentControl.CurrentFacade">
	<summary> Property the gets the instance of the business facade that will be use by the ReadData and SaveData method. </summary>
	<value>Interprise.Extendable.Base.Facade.IBaseInterface </value>
	<returns>IBaseInterface</returns>
	<remarks>
	</remarks>
</member><member name="P:Interprise.Presentation.Inventory.Adjustment.AdjustmentControl.ItemCode">
	<summary>
 Property that get the value of itemcode.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.AdjustmentControl.AddData(System.String)">
	<summary>
 Adds a row to the table using the specified document code.
 </summary>
	<param name="itemCode">The source transaction code to use when adding data.</param>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.AdjustmentControl.EnableDisableControls">
	<summary>
 Method use to enable or disable controls for editing 
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.AdjustmentControl.Find">
	<summary> Method use to finds a record/transaction. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.AdjustmentControl.LoadDataSet(System.String,System.Data.DataRow,Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
 Method use to fetch data from the daTabase and populates the Tables specified in the parameters.
 </summary>
	<param name="documentCode">The document code to be loaded.</param>
	<param name="row"></param>
	<param name="clearTableType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.AdjustmentControl.LoadStockingLevel(System.Boolean)">
	<summary>
 Load the stock count of an item.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.AdjustmentControl.Print(System.Boolean)">
	<summary> 
 Method use to prints the currently selected item/transaction. 
 </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.AdjustmentControl.ProcessKeyPreview(System.Windows.Forms.Message@)">
	<summary> Method use to detects the keys pressed by the user </summary>
	<remarks>
	</remarks>
	<param name="m ">Sets as System.Windows.Forms.Message</param>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.AdjustmentControl.SelectPage(System.Int32)">
	<summary> Method use to set focus from one page to another. Page is a group of controls. </summary>
	<remarks>
	</remarks>
	<param name="key "><para>Retrieves the key as integer when press page up or page down</para>
	</param>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.AdjustmentControl.SetTransactionType">
	<summary>
 Set the transaction type of an item.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.AdjustmentControl.ShowNewForm">
	<summary> Method use to show new record/transaction. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.AdjustmentControl.UndoChanges">
	<summary> Method use to undo changes made to the dataset. </summary>
	<remarks>
	</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.AdjustmentControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Method use to update the specified Tables in the daTabase.
 </summary>
	<param name="confirm">Determine the condition  of saving current window.</param>
	<param name="clear"></param>
	<param name="isUseCache"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.AdjustmentControl.AdjustmentControl_Load(System.Object,System.EventArgs)">
	<summary> 
 Event use to starts the asyncronous method 
 </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.AdjustmentControl.PluginContainerGeneralHeaderPluginInstance_OnAdjustmentTypeChanged(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.AdjustmentTypeChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of certain control.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.AdjustmentControl.PluginContainerItemPluginInstance_FocusedItemChanged(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.ItemChangedEventArgs)">
	<summary>
 Load the stock information of the selected item.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.AdjustmentControl.m_adjustmentFacade_Validated(System.Object,Interprise.Framework.Inventory.Shared.EventArguments.ValidatedEventArgs)">
	<summary>
 Shows messages of this transaction.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.AdjustmentControl.TabGroupItemDetail_SelectedPageChanged(System.Object,DevExpress.XtraLayout.LayoutTabPageChangedEventArgs)">
	<summary> Event use to determine the page you have selected to impost appropriate action </summary>
	<param name="sender ">Retrieves an object containing information about the forwarded value of the event. </param>
	<param name="e "> Retrieves an event of TabPageChangedEventArgs of the XtraTab.</param>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.AdjustmentControl.PluginContainerGeneralHeader_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.AdjustmentControl.PluginContainerItem_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.AdjustmentControl.PluginContainerStockTotal_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Inventory.Adjustment.AdjustmentControl.PluginContainerStockingLevel_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member>
</members>
</doc>